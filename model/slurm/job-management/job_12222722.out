Defaulting to user installation because normal site-packages is not writeable
Requirement already satisfied: uproot in /raven/u/dvoss/.local/lib/python3.9/site-packages (5.3.10)
Requirement already satisfied: numpy in /raven/u/system/soft/SLE_15/packages/x86_64/anaconda/3/2021.11/lib/python3.9/site-packages (from uproot) (1.20.3)
Requirement already satisfied: awkward>=2.4.6 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from uproot) (2.6.6)
Requirement already satisfied: typing-extensions>=4.1.0 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from uproot) (4.12.2)
Requirement already satisfied: fsspec in /raven/u/dvoss/.local/lib/python3.9/site-packages (from uproot) (2024.6.1)
Requirement already satisfied: packaging in /raven/u/system/soft/SLE_15/packages/x86_64/anaconda/3/2021.11/lib/python3.9/site-packages (from uproot) (21.0)
Requirement already satisfied: cramjam>=2.5.0 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from uproot) (2.8.3)
Requirement already satisfied: awkward-cpp==35 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from awkward>=2.4.6->uproot) (35)
Requirement already satisfied: importlib-metadata>=4.13.0 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from awkward>=2.4.6->uproot) (8.0.0)
Requirement already satisfied: zipp>=0.5 in /raven/u/system/soft/SLE_15/packages/x86_64/anaconda/3/2021.11/lib/python3.9/site-packages (from importlib-metadata>=4.13.0->awkward>=2.4.6->uproot) (3.6.0)
Requirement already satisfied: pyparsing>=2.0.2 in /raven/u/system/soft/SLE_15/packages/x86_64/anaconda/3/2021.11/lib/python3.9/site-packages (from packaging->uproot) (3.0.4)
Training points:  tensor([-1981.,  -255., -1807., -1411.], device='cuda:0')
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1100]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1100]], device='cuda:0', requires_grad=True)
Iter 1 / 1000 - Loss (Train): 4.889 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1100]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1200]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1200]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1200]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1400]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1400]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1400]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1500]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1500]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1500]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1799]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1799]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1799]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1899]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1899]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1899]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2098]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2098]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2098]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2197]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2197]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2197]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2296]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2296]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2296]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2593]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2593]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2593]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2692]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2692]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2692]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2790]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2790]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2790]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2888]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2888]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2888]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2987]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2987]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2987]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3085]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3085]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3085]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3182]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3182]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3182]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3572]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3572]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3572]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3765]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3765]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3765]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3958]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3958]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3958]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4054]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4054]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4054]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4245]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4245]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4245]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4435]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4435]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4435]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4530]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4530]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4530]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4625]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4625]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4625]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4719]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4719]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4719]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4813]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4813]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4813]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4907]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4907]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4907]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5001]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5001]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5001]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5094]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5094]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5094]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5187]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5187]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5187]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5373]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5373]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5373]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5465]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5465]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5465]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5649]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5649]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5649]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5741]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5741]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5741]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5832]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5832]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5832]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5923]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5923]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5923]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6014]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6014]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6014]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6105]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6105]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6105]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6285]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6285]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6285]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6375]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6375]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6375]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6465]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6465]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6465]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6554]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6554]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6554]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6643]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6643]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6643]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6732]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6732]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6732]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6821]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6821]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6821]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6909]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6909]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6909]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6997]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6997]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6997]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7085]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7085]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7085]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7173]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7173]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7173]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7260]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7260]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7260]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7347]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7347]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7347]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7434]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7434]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7434]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7607]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7607]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7607]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7780]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7780]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7780]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7865]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7865]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7865]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7951]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7951]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7951]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8036]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8036]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8036]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8121]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8121]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8121]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8206]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8206]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8206]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8290]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8290]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8290]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8375]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8375]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8375]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8459]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8459]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8459]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8543]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8543]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8543]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8710]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8710]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8710]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8793]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8793]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8793]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8876]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8876]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8876]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8958]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8958]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8958]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9041]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9041]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9041]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9123]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9123]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9123]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9205]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9205]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9205]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9287]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9287]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9287]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9368]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9368]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9368]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9450]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9450]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9450]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9531]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9531]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9531]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9612]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9612]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9612]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9692]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9692]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9692]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9773]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9773]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9773]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9853]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9853]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9853]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9933]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9933]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9933]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0013]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0013]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0013]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0092]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0092]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0092]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0171]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0171]], device='cuda:0', requires_grad=True)
Iter 101 / 1000 - Loss (Train): 2.646 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0171]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0251]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0251]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0251]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0329]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0329]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0329]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0408]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0408]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0408]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0565]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0565]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0565]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0643]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0643]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0643]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0721]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0721]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0721]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0876]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0876]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0876]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0953]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0953]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0953]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1030]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1030]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1030]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1106]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1106]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1106]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1183]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1183]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1183]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1259]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1259]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1259]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1335]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1335]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1335]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1411]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1411]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1411]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1563]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1563]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1563]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1638]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1638]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1638]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1713]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1713]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1713]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1788]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1788]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1788]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2011]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2011]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2011]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2085]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2085]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2085]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2159]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2159]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2159]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2233]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2233]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2233]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2306]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2306]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2306]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2379]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2379]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2379]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2452]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2452]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2452]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2525]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2525]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2525]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2598]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2598]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2598]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2743]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2743]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2743]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2815]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2815]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2815]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2887]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2887]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2887]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2958]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2958]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2958]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3030]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3030]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3030]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3101]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3101]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3101]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3172]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3172]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3172]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3243]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3243]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3243]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3313]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3313]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3313]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3384]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3384]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3384]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3524]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3524]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3524]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3664]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3664]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3664]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3733]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3733]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3733]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3803]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3803]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3803]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3872]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3872]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3872]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3941]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3941]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3941]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4010]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4010]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4010]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4078]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4078]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4078]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4146]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4146]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4146]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4350]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4350]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4350]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4418]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4418]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4418]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4485]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4485]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4485]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4620]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4620]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4620]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4753]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4753]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4753]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4820]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4820]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4820]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4952]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4952]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4952]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5018]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5018]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5018]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5084]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5084]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5084]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5345]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5345]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5345]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5410]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5410]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5410]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5539]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5539]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5539]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5668]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5668]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5668]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5732]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5732]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5732]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5796]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5796]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5796]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5859]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5859]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5859]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5923]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5923]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5923]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5986]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5986]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5986]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6112]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6112]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6112]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6175]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6175]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6175]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6237]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6237]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6237]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6299]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6299]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6299]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6362]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6362]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6362]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6424]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6424]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6424]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6486]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6486]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6486]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6547]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6547]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6547]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6609]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6609]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6609]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6731]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6731]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6731]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6792]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6792]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6792]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6853]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6853]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6853]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6914]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6914]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6914]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6974]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6974]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6974]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7035]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7035]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7035]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7095]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7095]], device='cuda:0', requires_grad=True)
Iter 201 / 1000 - Loss (Train): 1.868 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7095]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7155]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7155]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7155]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7334]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7334]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7334]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7393]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7393]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7393]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7452]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7452]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7452]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7511]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7511]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7511]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7570]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7570]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7570]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7629]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7629]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7629]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7746]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7746]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7746]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7920]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7920]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7920]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7978]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7978]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7978]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8035]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8035]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8035]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8092]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8092]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8092]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8264]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8264]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8264]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8320]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8320]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8320]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8546]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8546]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8546]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8602]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8602]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8602]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8713]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8713]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8713]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8769]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8769]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8769]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8824]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8824]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8824]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8879]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8879]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8879]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8935]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8935]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8935]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8989]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8989]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8989]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9044]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9044]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9044]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9099]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9099]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9099]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9153]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9153]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9153]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9208]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9208]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9208]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9316]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9316]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9316]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9370]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9370]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9370]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9423]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9423]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9423]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9477]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9477]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9477]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9530]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9530]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9530]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9584]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9584]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9584]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9637]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9637]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9637]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9690]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9690]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9690]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9742]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9742]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9742]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9795]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9795]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9795]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9848]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9848]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9848]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9900]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9900]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9900]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9952]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9952]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9952]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0004]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0004]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0004]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0056]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0056]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0056]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0108]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0108]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0108]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0160]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0160]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0160]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0212]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0212]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0212]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0263]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0263]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0263]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0365]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0365]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0365]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0518]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0518]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0518]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0569]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0569]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0569]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0619]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0619]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0619]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0720]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0720]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0720]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0770]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0770]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0770]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0820]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0820]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0820]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0869]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0869]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0869]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0919]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0919]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0919]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0969]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0969]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0969]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1018]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1018]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1018]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1067]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1067]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1067]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1116]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1116]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1116]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1214]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1214]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1214]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1263]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1263]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1263]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1312]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1312]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1312]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1360]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1360]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1360]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1409]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1409]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1409]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1457]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1457]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1457]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1505]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1505]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1505]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1601]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1601]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1601]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1649]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1649]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1649]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1696]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1696]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1696]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1744]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1744]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1744]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1791]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1791]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1791]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1838]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1838]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1838]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1885]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1885]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1885]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1979]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1979]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1979]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2026]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2026]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2026]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2073]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2073]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2073]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2119]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2119]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2119]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2166]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2166]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2166]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2212]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2212]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2212]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2258]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2258]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2258]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2304]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2304]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2304]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2350]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2350]], device='cuda:0', requires_grad=True)
Iter 301 / 1000 - Loss (Train): 1.596 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2350]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2442]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2442]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2442]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2533]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2533]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2533]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2578]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2578]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2578]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2624]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2624]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2624]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2714]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2714]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2714]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2759]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2759]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2759]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2848]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2848]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2848]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2893]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2893]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2893]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2982]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2982]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2982]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3026]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3026]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3026]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3070]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3070]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3070]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3114]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3114]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3114]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3158]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3158]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3158]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3202]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3202]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3202]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3246]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3246]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3246]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3290]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3290]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3290]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3420]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3420]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3420]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3463]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3463]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3463]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3592]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3592]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3592]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3635]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3635]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3635]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3678]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3678]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3678]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3720]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3720]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3720]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3763]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3763]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3763]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3805]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3805]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3805]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3848]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3848]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3848]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3890]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3890]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3890]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3974]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3974]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3974]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4016]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4016]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4016]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4058]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4058]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4058]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4100]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4100]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4100]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4141]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4141]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4141]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4183]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4183]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4183]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4266]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4266]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4266]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4307]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4307]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4307]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4348]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4348]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4348]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4390]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4390]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4390]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4431]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4431]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4431]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4472]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4472]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4472]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4512]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4512]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4512]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4756]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4756]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4756]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4796]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4796]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4796]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4836]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4836]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4836]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4876]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4876]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4876]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4916]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4916]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4916]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4956]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4956]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4956]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4996]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4996]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4996]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5036]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5036]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5036]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5075]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5075]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5075]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5115]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5115]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5115]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5154]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5154]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5154]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5194]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5194]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5194]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5233]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5233]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5233]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5272]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5272]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5272]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5311]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5311]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5311]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5351]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5351]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5351]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5390]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5390]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5390]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5429]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5429]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5429]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5545]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5545]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5545]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5583]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5583]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5583]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5622]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5622]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5622]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5661]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5661]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5661]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5737]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5737]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5737]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5776]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5776]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5776]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5814]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5814]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5814]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5852]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5852]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5852]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5890]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5890]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5890]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5928]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5928]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5928]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5966]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5966]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5966]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6004]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6004]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6004]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6041]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6041]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6041]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6079]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6079]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6079]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6117]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6117]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6117]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6154]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6154]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6154]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6192]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6192]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6192]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6229]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6229]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6229]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6266]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6266]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6266]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6304]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6304]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6304]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6341]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6341]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6341]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6378]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6378]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6378]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6415]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6415]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6415]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6452]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6452]], device='cuda:0', requires_grad=True)
Iter 401 / 1000 - Loss (Train): 1.482 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6452]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6489]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6489]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6489]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6526]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6526]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6526]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6563]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6563]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6563]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6599]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6599]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6599]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6636]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6636]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6636]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6709]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6709]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6709]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6746]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6746]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6746]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6782]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6782]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6782]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6819]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6819]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6819]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6891]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6891]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6891]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6927]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6927]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6927]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6964]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6964]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6964]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7036]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7036]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7036]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7072]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7072]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7072]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7108]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7108]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7108]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7143]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7143]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7143]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7179]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7179]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7179]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7251]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7251]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7251]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7322]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7322]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7322]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7357]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7357]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7357]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7393]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7393]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7393]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7428]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7428]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7428]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7463]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7463]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7463]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7499]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7499]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7499]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7569]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7569]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7569]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7639]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7639]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7639]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7674]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7674]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7674]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7709]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7709]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7709]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7744]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7744]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7744]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7779]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7779]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7779]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7814]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7814]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7814]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7849]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7849]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7849]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7883]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7883]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7883]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7918]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7918]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7918]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7953]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7953]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7953]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7987]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7987]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7987]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8022]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8022]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8022]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8056]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8056]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8056]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8091]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8091]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8091]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8125]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8125]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8125]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8159]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8159]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8159]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8194]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8194]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8194]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8228]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8228]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8228]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8296]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8296]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8296]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8330]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8330]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8330]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8364]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8364]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8364]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8398]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8398]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8398]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8432]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8432]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8432]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8466]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8466]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8466]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8500]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8500]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8500]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8601]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8601]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8601]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8635]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8635]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8635]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8702]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8702]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8702]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8769]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8769]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8769]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8803]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8803]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8803]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8836]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8836]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8836]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8870]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8870]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8870]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8936]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8936]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8936]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8970]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8970]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.8970]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9003]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9003]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9003]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9036]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9036]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9036]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9069]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9069]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9069]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9102]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9102]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9102]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9135]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9135]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9135]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9168]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9168]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9168]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9201]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9201]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9201]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9234]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9234]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9234]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9267]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9267]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9267]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9366]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9366]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9366]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9399]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9399]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9399]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9432]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9432]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9432]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9497]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9497]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9497]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9530]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9530]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9530]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9562]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9562]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9562]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9595]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9595]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9595]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9627]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9627]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9627]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9660]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9660]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9660]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9692]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9692]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9692]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9725]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9725]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9725]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9757]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9757]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9757]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9789]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9789]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9789]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9822]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9822]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9822]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9854]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9854]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9854]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9886]], device='cuda:0', requires_grad=True)
Iter 501 / 1000 - Loss (Train): 1.404 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9919]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9919]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9919]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9951]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9951]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9951]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9983]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9983]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[2.9983]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0015]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0015]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0015]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0079]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0079]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0079]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0111]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0111]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0111]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0143]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0143]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0143]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0175]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0175]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0175]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0239]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0239]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0239]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0271]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0271]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0271]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0303]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0303]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0303]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0335]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0335]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0335]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0399]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0399]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0399]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0430]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0430]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0430]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0462]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0462]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0462]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0525]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0525]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0525]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0589]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0589]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0589]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0620]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0620]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0620]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0652]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0652]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0652]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0683]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0683]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0683]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0746]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0746]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0746]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0778]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0778]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0778]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0809]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0809]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0809]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0841]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0841]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0841]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0872]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0872]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0872]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0904]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0904]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0904]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0935]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0935]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0935]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0966]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0966]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0966]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.0998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1029]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1029]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1029]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1091]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1091]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1091]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1122]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1122]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1122]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1154]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1154]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1154]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1185]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1185]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1185]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1247]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1247]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1247]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1278]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1278]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1278]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1371]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1371]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1371]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1402]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1402]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1402]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1495]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1495]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1495]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1526]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1526]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1526]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1588]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1588]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1588]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1619]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1619]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1619]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1650]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1650]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1650]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1680]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1680]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1680]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1711]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1711]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1711]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1742]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1742]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1742]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1773]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1773]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1773]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1803]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1803]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1803]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1834]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1834]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1834]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1865]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1865]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1865]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1896]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1896]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1896]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1926]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1926]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1926]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1957]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1957]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1957]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1987]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1987]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.1987]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2018]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2018]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2018]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2079]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2079]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2079]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2110]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2110]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2110]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2140]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2140]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2140]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2171]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2171]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2171]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2201]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2201]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2201]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2232]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2232]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2232]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2292]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2292]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2292]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2323]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2323]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2323]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2383]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2383]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2383]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2414]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2414]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2414]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2444]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2444]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2444]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2474]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2474]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2474]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2505]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2505]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2505]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2535]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2535]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2535]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2565]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2565]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2565]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2595]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2595]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2595]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2656]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2656]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2656]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2686]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2686]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2686]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2716]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2716]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2716]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2746]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2746]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2746]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2776]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2776]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2776]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2806]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2806]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2806]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2836]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2836]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2836]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2866]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2866]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2866]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2896]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2896]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2896]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2926]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2926]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2926]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2956]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2956]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2956]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2986]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2986]], device='cuda:0', requires_grad=True)
Iter 601 / 1000 - Loss (Train): 1.336 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.2986]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3016]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3016]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3016]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3046]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3046]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3046]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3076]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3076]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3076]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3106]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3106]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3106]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3136]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3136]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3136]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3255]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3255]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3255]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3284]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3284]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3284]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3344]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3344]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3344]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3373]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3373]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3373]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3403]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3403]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3403]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3462]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3462]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3462]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3492]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3492]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3492]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3580]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3580]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3580]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3610]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3610]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3610]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3639]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3639]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3639]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3698]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3698]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3698]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3727]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3727]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3727]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3757]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3757]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3757]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3786]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3786]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3786]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3815]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3815]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3815]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3845]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3845]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3845]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3874]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3874]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3874]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3961]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3961]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3961]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3991]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3991]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.3991]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4020]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4020]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4020]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4078]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4078]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4078]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4107]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4107]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4107]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4136]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4136]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4136]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4194]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4194]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4194]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4223]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4223]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4223]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4252]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4252]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4252]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4281]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4281]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4281]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4338]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4338]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4338]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4424]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4424]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4424]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4482]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4482]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4482]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4511]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4511]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4511]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4539]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4539]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4539]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4596]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4596]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4596]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4625]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4625]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4625]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4653]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4653]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4653]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4682]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4682]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4682]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4710]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4710]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4710]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4739]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4739]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4739]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4767]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4767]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4767]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4795]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4795]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4795]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4824]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4824]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4824]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4852]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4852]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4852]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4880]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4880]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4880]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4909]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4909]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4909]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4965]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4965]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4965]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4993]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4993]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.4993]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5021]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5021]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5021]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5077]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5077]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5077]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5105]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5105]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5105]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5133]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5133]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5133]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5161]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5161]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5161]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5189]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5189]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5189]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5217]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5217]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5217]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5245]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5245]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5245]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5273]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5273]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5273]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5301]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5301]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5301]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5328]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5328]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5328]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5356]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5356]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5356]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5384]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5384]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5384]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5411]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5411]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5411]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5439]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5439]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5439]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5522]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5522]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5522]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5577]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5577]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5577]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5631]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5631]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5631]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5659]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5659]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5659]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5686]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5686]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5686]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5713]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5713]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5713]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5741]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5741]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5741]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5768]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5768]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5768]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5795]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5795]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5795]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5822]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5822]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5822]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5849]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5849]], device='cuda:0', requires_grad=True)
Iter 701 / 1000 - Loss (Train): 1.277 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5849]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5876]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5876]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5876]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5930]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5930]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5930]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5957]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5957]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5957]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5984]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5984]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.5984]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6011]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6011]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6011]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6038]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6038]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6038]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6065]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6065]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6065]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6092]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6092]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6092]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6119]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6119]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6119]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6145]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6145]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6145]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6172]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6172]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6172]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6199]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6199]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6199]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6252]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6252]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6252]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6279]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6279]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6279]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6305]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6305]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6305]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6332]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6332]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6332]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6358]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6358]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6358]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6384]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6384]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6384]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6411]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6411]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6411]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6437]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6437]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6437]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6516]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6516]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6516]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6542]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6542]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6542]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6569]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6569]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6569]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6595]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6595]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6595]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6621]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6621]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6621]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6647]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6647]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6647]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6725]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6725]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6725]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6751]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6751]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6751]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6777]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6777]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6777]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6803]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6803]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6803]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6829]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6829]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6829]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6880]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6880]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6880]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6906]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6906]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6906]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6958]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6958]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6958]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6983]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6983]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.6983]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7009]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7009]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7009]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7035]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7035]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7035]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7086]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7086]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7086]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7111]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7111]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7111]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7137]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7137]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7137]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7162]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7162]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7162]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7188]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7188]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7188]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7213]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7213]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7213]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7238]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7238]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7238]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7264]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7264]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7264]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7289]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7289]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7289]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7365]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7365]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7365]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7390]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7390]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7390]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7415]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7415]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7415]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7440]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7440]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7440]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7465]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7465]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7465]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7565]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7565]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7565]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7590]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7590]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7590]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7615]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7615]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7615]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7640]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7640]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7640]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7665]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7665]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7665]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7690]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7690]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7690]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7714]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7714]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7714]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7739]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7739]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7739]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7764]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7764]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7764]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7789]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7789]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7789]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7813]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7813]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7813]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7838]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7838]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7838]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7887]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7887]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7887]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7912]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7912]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7912]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7936]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7936]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7936]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7961]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7961]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7961]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7985]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7985]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.7985]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8009]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8009]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8009]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8034]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8034]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8034]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8058]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8058]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8058]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8082]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8082]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8082]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8107]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8107]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8107]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8131]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8131]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8131]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8155]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8155]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8155]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8204]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8204]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8204]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8228]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8228]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8228]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8252]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8252]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8252]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8276]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8276]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8276]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8324]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8324]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8324]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8348]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8348]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8348]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8372]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8372]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8372]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8396]], device='cuda:0', requires_grad=True)
Iter 801 / 1000 - Loss (Train): 1.234 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8420]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8420]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8420]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8444]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8444]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8444]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8468]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8468]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8468]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8492]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8492]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8492]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8516]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8516]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8516]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8539]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8539]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8539]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8563]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8563]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8563]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8587]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8587]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8587]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8611]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8611]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8611]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8681]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8681]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8681]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8705]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8705]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8705]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8752]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8752]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8752]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8776]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8776]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8776]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8799]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8799]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8799]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8823]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8823]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8823]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8846]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8846]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8846]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8869]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8869]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8869]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8893]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8893]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8893]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8916]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8916]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8916]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8939]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8939]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8939]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8963]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8963]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8963]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8986]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8986]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.8986]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9009]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9009]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9009]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9032]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9032]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9032]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9055]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9055]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9055]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9079]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9079]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9079]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9102]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9102]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9102]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9125]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9125]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9125]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9148]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9148]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9148]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9171]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9171]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9171]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9194]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9194]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9194]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9217]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9217]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9217]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9240]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9240]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9240]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9263]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9263]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9263]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9308]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9308]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9308]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9331]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9331]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9331]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9354]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9354]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9354]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9400]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9400]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9400]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9422]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9422]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9422]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9445]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9445]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9445]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9468]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9468]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9468]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9513]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9513]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9513]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9536]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9536]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9536]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9558]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9558]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9558]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9581]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9581]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9581]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9603]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9603]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9603]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9648]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9648]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9648]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9738]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9738]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9738]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9760]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9760]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9760]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9782]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9782]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9782]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9827]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9827]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9827]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9849]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9849]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9849]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9871]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9871]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9871]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9893]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9893]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9893]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9915]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9915]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9915]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9959]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9959]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9959]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9981]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9981]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[3.9981]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0003]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0003]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0003]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0025]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0025]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0025]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0069]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0069]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0069]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0091]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0091]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0091]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0113]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0113]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0113]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0135]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0135]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0135]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0157]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0157]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0157]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0178]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0178]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0178]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0200]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0200]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0200]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0222]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0222]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0222]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0244]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0244]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0244]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0265]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0265]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0265]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0287]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0287]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0287]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0330]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0330]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0330]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0352]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0352]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0352]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0373]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0373]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0373]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0438]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0438]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0438]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0459]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0459]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0459]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0481]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0481]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0481]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0502]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0502]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0502]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0523]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0523]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0523]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0545]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0545]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0545]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0566]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0566]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0566]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0587]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0587]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0587]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0609]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0609]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0609]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0630]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0630]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0630]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0651]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0651]], device='cuda:0', requires_grad=True)
Iter 901 / 1000 - Loss (Train): 1.196 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0651]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0672]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0672]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0672]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0714]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0714]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0714]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0757]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0757]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0757]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0778]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0778]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0778]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0799]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0799]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0799]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0820]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0820]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0820]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0841]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0841]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0841]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0882]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0882]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0882]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0924]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0924]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0924]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0945]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0945]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0945]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0966]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0966]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0966]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0987]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0987]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.0987]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1007]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1007]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1007]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1028]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1028]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1028]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1069]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1069]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1069]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1090]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1090]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1090]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1111]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1111]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1111]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1131]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1131]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1131]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1152]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1152]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1152]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1172]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1172]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1172]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1193]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1193]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1193]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1213]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1213]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1213]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1234]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1234]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1234]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1254]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1254]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1254]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1295]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1295]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1295]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1315]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1315]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1315]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1335]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1335]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1335]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1356]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1356]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1356]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1376]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1376]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1376]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1436]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1436]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1436]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1456]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1456]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1456]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1497]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1497]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1497]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1517]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1517]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1517]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1537]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1537]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1537]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1577]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1577]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1577]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1596]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1596]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1596]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1616]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1616]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1616]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1636]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1636]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1636]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1656]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1656]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1656]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1676]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1676]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1676]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1696]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1696]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1696]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1735]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1735]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1735]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1755]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1755]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1755]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1774]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1774]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1774]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1794]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1794]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1794]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1814]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1814]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1814]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1833]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1833]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1833]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1853]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1853]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1853]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1872]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1872]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1872]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1892]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1892]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1892]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1911]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1911]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1911]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1930]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1930]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1930]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1969]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1969]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1969]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.1988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2008]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2008]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2008]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2027]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2027]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2027]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2046]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2046]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2046]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2065]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2065]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2065]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2084]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2084]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2084]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2103]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2103]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2103]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2123]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2123]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2123]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2142]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2142]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2142]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2161]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2161]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2161]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2198]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2198]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2198]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2217]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2217]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2217]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2255]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2255]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2255]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2293]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2293]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2293]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2311]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2311]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2311]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2330]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2330]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2330]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2349]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2349]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2349]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2386]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2386]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2386]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2404]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2404]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2404]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2423]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2423]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2423]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2441]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2441]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2441]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2478]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2478]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2478]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2496]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2496]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2496]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2533]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2533]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2533]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2570]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2570]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2570]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2588]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2588]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2588]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2606]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([4, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        [0.3302]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2606]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([1004, 1])
X: tensor([[0.0000],
        [1.0000],
        [0.1008],
        ...,
        [0.9980],
        [0.9990],
        [1.0000]], device='cuda:0')
weights: Parameter containing:
tensor([[4.2606]], device='cuda:0', requires_grad=True)
Entropy:  tensor([2.0381e-02, 1.8869e-02, 1.5803e-02, 1.8043e-02, 1.4959e-02, 1.5543e-02,
        1.4225e-02, 1.1618e-02, 1.3467e-02, 1.0851e-02, 9.7581e-03, 1.1515e-02,
        9.1434e-03, 1.0773e-02, 8.5188e-03, 7.5723e-03, 7.8899e-03, 6.9879e-03,
        8.3008e-03, 6.4058e-03, 5.6104e-03, 6.7374e-03, 5.0819e-03, 6.1077e-03,
        5.3440e-03, 3.9238e-03, 4.7816e-03, 4.1256e-03, 4.2418e-03, 3.6350e-03,
        3.0845e-03, 3.7549e-03, 2.6682e-03, 2.2192e-03, 2.7534e-03, 2.2984e-03,
        2.8065e-03, 1.9354e-03, 1.5772e-03, 1.9685e-03, 1.6087e-03, 1.9786e-03,
        1.6198e-03, 1.3071e-03, 1.6125e-03, 1.3028e-03, 1.2993e-03, 1.0338e-03,
        8.0779e-04, 1.0121e-03, 7.9115e-04, 9.8046e-04, 7.6564e-04, 5.8608e-04,
        7.3287e-04, 5.6025e-04, 4.1870e-04, 5.2929e-04, 3.9432e-04, 6.2924e-04,
        4.7748e-04, 3.5373e-04, 4.3957e-04, 3.2390e-04, 4.0043e-04, 2.9343e-04,
        2.0915e-04, 3.4313e-04, 2.4926e-04, 3.0476e-04, 2.1957e-04, 1.5314e-04,
        1.6618e-04, 1.7919e-04, 1.6588e-04, 1.7720e-04, 1.6351e-04, 1.3076e-04,
        1.1978e-04, 1.2734e-04, 1.1596e-04, 1.2285e-04, 9.6828e-05, 8.7325e-05,
        9.1896e-05, 9.6446e-05, 7.5124e-05, 6.6840e-05, 7.0134e-05, 7.3023e-05,
        7.5902e-05, 5.8464e-05, 6.0607e-05, 5.3236e-05, 5.5116e-05, 4.5775e-05,
        4.4677e-05, 4.3923e-05, 4.5083e-05, 4.6180e-05, 4.0140e-05, 4.1657e-05,
        4.2414e-05, 4.3169e-05, 4.3576e-05, 3.3607e-05, 3.2895e-05, 3.9029e-05,
        3.9029e-05, 2.9374e-05, 2.9374e-05, 3.4437e-05, 3.4437e-05, 3.4437e-05,
        2.9793e-05, 2.9793e-05, 3.4437e-05, 3.4022e-05, 2.5453e-05, 2.9374e-05,
        2.8954e-05, 3.3251e-05, 3.7504e-05, 2.8593e-05, 3.2062e-05, 3.1705e-05,
        3.5560e-05, 3.9731e-05, 3.0152e-05, 3.4022e-05, 3.7856e-05, 4.2065e-05,
        3.2062e-05, 3.5560e-05, 3.9380e-05, 4.3576e-05, 4.7275e-05, 4.1657e-05,
        4.0140e-05, 4.3923e-05, 4.7679e-05, 4.2065e-05, 4.5429e-05, 4.9174e-05,
        5.2895e-05, 6.3198e-05, 5.5855e-05, 5.9536e-05, 6.3533e-05, 6.7233e-05,
        7.1189e-05, 6.3198e-05, 7.3684e-05, 7.7667e-05, 8.1632e-05, 7.2242e-05,
        8.3385e-05, 8.6941e-05, 9.0807e-05, 1.0281e-04, 9.1896e-05, 1.0345e-04,
        1.0700e-04, 1.1978e-04, 1.0700e-04, 1.1947e-04, 1.2222e-04, 1.3517e-04,
        1.3789e-04, 1.3349e-04, 1.4603e-04, 1.4842e-04, 1.6156e-04, 1.7521e-04,
        1.5754e-04, 1.7019e-04, 1.8316e-04, 1.9635e-04, 1.7653e-04, 1.8911e-04,
        2.0130e-04, 2.1365e-04, 2.2635e-04, 2.1661e-04, 2.2829e-04, 2.3991e-04,
        2.5147e-04, 2.3991e-04, 2.5054e-04, 2.6107e-04, 2.7126e-04, 2.8113e-04,
        2.6681e-04, 2.7571e-04, 2.8395e-04, 3.0728e-04, 3.1480e-04, 2.9721e-04,
        3.0385e-04, 3.1730e-04, 3.3042e-04, 3.1070e-04, 3.2265e-04, 3.3387e-04,
        3.3636e-04, 3.4629e-04, 3.3166e-04, 3.4037e-04, 3.4809e-04, 3.5524e-04,
        3.3817e-04, 3.4409e-04, 3.4905e-04, 3.5305e-04, 3.6451e-04, 3.4437e-04,
        3.4629e-04, 3.5552e-04, 3.5586e-04, 3.5524e-04, 3.4037e-04, 3.3851e-04,
        3.4347e-04, 3.4753e-04, 3.2321e-04, 3.2571e-04, 3.2764e-04, 3.2889e-04,
        3.2196e-04, 3.0288e-04, 3.0190e-04, 3.0036e-04, 2.9813e-04, 2.7825e-04,
        2.8142e-04, 2.7733e-04, 2.7254e-04, 2.6716e-04, 2.4634e-04, 2.4669e-04,
        2.3991e-04, 2.3897e-04, 2.3152e-04, 2.1626e-04, 2.0814e-04, 2.0552e-04,
        1.9664e-04, 1.8184e-04, 1.7816e-04, 1.7388e-04, 1.6485e-04, 1.6022e-04,
        1.4572e-04, 1.4098e-04, 1.3591e-04, 1.3076e-04, 1.1734e-04, 1.1596e-04,
        1.1042e-04, 1.0485e-04, 9.9635e-05, 9.0807e-05, 8.5520e-05, 8.0531e-05,
        7.7996e-05, 6.7567e-05, 6.5385e-05, 6.0607e-05, 5.8066e-05, 5.5855e-05,
        4.7275e-05, 4.5083e-05, 4.2762e-05, 4.0550e-05, 3.8208e-05, 3.2895e-05,
        3.0929e-05, 2.8954e-05, 2.7027e-05, 2.3077e-05, 2.1053e-05, 1.9446e-05,
        1.9072e-05, 1.7452e-05, 1.4557e-05, 1.3791e-05, 1.2514e-05, 1.1228e-05,
        1.0444e-05, 9.5358e-06, 8.7410e-06, 7.8208e-06, 7.0128e-06, 6.5462e-06,
        5.6662e-06, 5.2523e-06, 4.7761e-06, 4.2970e-06, 3.8741e-06, 3.4475e-06,
        3.4475e-06, 2.9570e-06, 2.4616e-06, 2.4616e-06, 2.0197e-06, 2.0197e-06,
        1.5703e-06, 1.5703e-06, 1.5703e-06, 1.5703e-06, 1.0512e-06, 1.0512e-06,
        1.0512e-06, 1.0512e-06, 1.0512e-06, 1.0512e-06, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 1.0512e-06, 1.0512e-06, 1.0512e-06, 1.0512e-06, 1.0512e-06,
        1.0512e-06, 1.5703e-06, 1.5703e-06, 1.5703e-06, 1.5703e-06, 2.0197e-06,
        2.0197e-06, 2.4616e-06, 2.4616e-06, 2.4616e-06, 2.9570e-06, 2.9570e-06,
        3.4475e-06, 3.8741e-06, 4.2970e-06, 4.2970e-06, 5.2523e-06, 5.2523e-06,
        6.0775e-06, 6.0775e-06, 7.0128e-06, 7.8208e-06, 8.2818e-06, 9.1391e-06,
        9.9906e-06, 1.0837e-05, 1.1678e-05, 1.2901e-05, 1.3791e-05, 1.4999e-05,
        1.6199e-05, 1.7452e-05, 1.9072e-05, 2.0682e-05, 2.2281e-05, 2.3871e-05,
        2.5453e-05, 2.7389e-05, 2.9374e-05, 3.1347e-05, 3.4022e-05, 3.6327e-05,
        3.8619e-05, 4.1248e-05, 4.3923e-05, 4.6585e-05, 4.9577e-05, 5.2554e-05,
        5.6194e-05, 5.9536e-05, 6.2862e-05, 6.6447e-05, 6.9742e-05, 7.3684e-05,
        7.7338e-05, 8.1959e-05, 8.6230e-05, 9.0159e-05, 9.4717e-05, 9.8934e-05,
        1.0345e-04, 1.0802e-04, 1.1288e-04, 1.1841e-04, 1.2323e-04, 1.2803e-04,
        1.3318e-04, 1.3826e-04, 1.4332e-04, 1.4842e-04, 1.5381e-04, 1.5986e-04,
        1.6485e-04, 1.7019e-04, 1.7551e-04, 1.8118e-04, 1.8647e-04, 1.9174e-04,
        1.9700e-04, 2.0320e-04, 2.0843e-04, 2.1365e-04, 2.1886e-04, 2.2405e-04,
        2.2923e-04, 2.3440e-04, 2.3991e-04, 2.4471e-04, 2.4984e-04, 2.5468e-04,
        2.5950e-04, 2.6391e-04, 2.6901e-04, 2.7352e-04, 2.7762e-04, 2.8171e-04,
        2.8620e-04, 2.9028e-04, 2.9406e-04, 2.9756e-04, 3.0162e-04, 3.0476e-04,
        3.0819e-04, 3.1167e-04, 3.1480e-04, 3.1765e-04, 3.2015e-04, 3.2293e-04,
        3.2543e-04, 3.2764e-04, 3.2979e-04, 3.3194e-04, 3.3387e-04, 3.3540e-04,
        3.3692e-04, 3.3851e-04, 3.3975e-04, 3.4065e-04, 3.4189e-04, 3.4257e-04,
        3.4313e-04, 3.4381e-04, 3.4409e-04, 3.4437e-04, 3.4437e-04, 3.4437e-04,
        3.4437e-04, 3.4409e-04, 3.4381e-04, 3.4313e-04, 3.4257e-04, 3.4161e-04,
        3.4065e-04, 3.3975e-04, 3.3885e-04, 3.3760e-04, 3.3602e-04, 3.3477e-04,
        3.3319e-04, 3.3166e-04, 3.2979e-04, 3.2820e-04, 3.2639e-04, 3.2418e-04,
        3.2231e-04, 3.2015e-04, 3.1793e-04, 3.1571e-04, 3.1355e-04, 3.1104e-04,
        3.0853e-04, 3.0636e-04, 3.0385e-04, 3.0099e-04, 2.9847e-04, 2.9595e-04,
        2.9309e-04, 2.9056e-04, 2.8775e-04, 2.8493e-04, 2.8205e-04, 2.7917e-04,
        2.7635e-04, 2.7352e-04, 2.7063e-04, 2.6773e-04, 2.6490e-04, 2.6171e-04,
        2.5880e-04, 2.5596e-04, 2.5311e-04, 2.4984e-04, 2.4698e-04, 2.4412e-04,
        2.4120e-04, 2.3827e-04, 2.3511e-04, 2.3217e-04, 2.2923e-04, 2.2635e-04,
        2.2346e-04, 2.2051e-04, 2.1756e-04, 2.1466e-04, 2.1205e-04, 2.0915e-04,
        2.0618e-04, 2.0356e-04, 2.0058e-04, 1.9796e-04, 1.9503e-04, 1.9240e-04,
        1.8976e-04, 1.8683e-04, 1.8418e-04, 1.8154e-04, 1.7889e-04, 1.7653e-04,
        1.7388e-04, 1.7122e-04, 1.6885e-04, 1.6618e-04, 1.6388e-04, 1.6156e-04,
        1.5888e-04, 1.5650e-04, 1.5412e-04, 1.5179e-04, 1.4946e-04, 1.4738e-04,
        1.4504e-04, 1.4270e-04, 1.4061e-04, 1.3863e-04, 1.3622e-04, 1.3418e-04,
        1.3213e-04, 1.3008e-04, 1.2803e-04, 1.2597e-04, 1.2391e-04, 1.2222e-04,
        1.2010e-04, 1.1809e-04, 1.1633e-04, 1.1458e-04, 1.1256e-04, 1.1079e-04,
        1.0903e-04, 1.0732e-04, 1.0561e-04, 1.0383e-04, 1.0206e-04, 1.0066e-04,
        9.8934e-05, 9.7209e-05, 9.5803e-05, 9.4395e-05, 9.2602e-05, 9.1190e-05,
        8.9775e-05, 8.8359e-05, 8.6941e-05, 8.5520e-05, 8.4097e-05, 8.2672e-05,
        8.1245e-05, 7.9816e-05, 7.8384e-05, 7.7338e-05, 7.5902e-05, 7.4794e-05,
        7.3354e-05, 7.2242e-05, 7.1189e-05, 6.9742e-05, 6.8685e-05, 6.7567e-05,
        6.6447e-05, 6.5385e-05, 6.4322e-05, 6.3198e-05, 6.2071e-05, 6.1003e-05,
        5.9933e-05, 5.9139e-05, 5.8066e-05, 5.6991e-05, 5.6194e-05, 5.5116e-05,
        5.4377e-05, 5.3236e-05, 5.2554e-05, 5.1409e-05, 5.0665e-05, 4.9920e-05,
        4.8771e-05, 4.8083e-05, 4.7275e-05, 4.6585e-05, 4.5775e-05, 4.5083e-05,
        4.4270e-05, 4.3576e-05, 4.2762e-05, 4.2065e-05, 4.1248e-05, 4.0550e-05,
        3.9731e-05, 3.9029e-05, 3.8619e-05, 3.7856e-05, 3.7092e-05, 3.6680e-05,
        3.5973e-05, 3.5146e-05, 3.4792e-05, 3.4022e-05, 3.3607e-05, 3.2895e-05,
        3.2479e-05, 3.1705e-05, 3.1347e-05, 3.0511e-05, 3.0152e-05, 2.9793e-05,
        2.8954e-05, 2.8593e-05, 2.8232e-05, 2.7389e-05, 2.7027e-05, 2.6664e-05,
        2.6241e-05, 2.5817e-05, 2.5088e-05, 2.4663e-05, 2.4238e-05, 2.3871e-05,
        2.3504e-05, 2.3077e-05, 2.2650e-05, 2.2281e-05, 2.1912e-05, 2.1482e-05,
        2.1053e-05, 2.0682e-05, 2.0310e-05, 1.9878e-05, 1.9446e-05, 1.9072e-05,
        1.9072e-05, 1.8698e-05, 1.8264e-05, 1.7828e-05, 1.7452e-05, 1.7075e-05,
        1.7075e-05, 1.6637e-05, 1.6199e-05, 1.5820e-05, 1.5820e-05, 1.5440e-05,
        1.4999e-05, 1.4999e-05, 1.4557e-05, 1.4174e-05, 1.4174e-05, 1.3791e-05,
        1.3346e-05, 1.3346e-05, 1.2901e-05, 1.2901e-05, 1.2514e-05, 1.2126e-05,
        1.2126e-05, 1.1678e-05, 1.1678e-05, 1.1228e-05, 1.1228e-05, 1.0837e-05,
        1.0837e-05, 1.0444e-05, 1.0444e-05, 9.9906e-06, 9.9906e-06, 9.5358e-06,
        9.5358e-06, 9.1391e-06, 9.1391e-06, 9.1391e-06, 8.7410e-06, 8.7410e-06,
        8.2818e-06, 8.2818e-06, 7.8208e-06, 7.8208e-06, 7.8208e-06, 7.4177e-06,
        7.4177e-06, 7.4177e-06, 7.0128e-06, 7.0128e-06, 7.0128e-06, 6.5462e-06,
        6.5462e-06, 6.5462e-06, 6.0775e-06, 6.0775e-06, 6.0775e-06, 5.6662e-06,
        5.6662e-06, 5.6662e-06, 5.6662e-06, 5.2523e-06, 5.2523e-06, 5.2523e-06,
        4.7761e-06, 4.7761e-06, 4.7761e-06, 4.7761e-06, 4.2970e-06, 4.2970e-06,
        4.2970e-06, 4.2970e-06, 4.2970e-06, 3.8741e-06, 3.8741e-06, 3.8741e-06,
        3.8741e-06, 3.4475e-06, 3.4475e-06, 3.4475e-06, 3.4475e-06, 3.4475e-06,
        3.4475e-06, 2.9570e-06, 2.9570e-06, 2.9570e-06, 2.9570e-06, 2.9570e-06,
        2.4616e-06, 2.4616e-06, 2.4616e-06, 2.4616e-06, 2.4616e-06, 2.4616e-06,
        2.4616e-06, 2.0197e-06, 2.0197e-06, 2.0197e-06, 2.0197e-06, 2.0197e-06,
        2.0197e-06, 2.0197e-06, 2.0197e-06, 1.5703e-06, 1.5703e-06, 1.5703e-06,
        1.5703e-06, 1.5703e-06, 1.5703e-06, 1.5703e-06, 1.5703e-06, 1.5703e-06,
        1.0512e-06, 1.0512e-06, 1.0512e-06, 1.0512e-06, 1.0512e-06, 1.0512e-06,
        1.0512e-06, 1.0512e-06, 1.0512e-06, 1.0512e-06, 1.0512e-06, 1.0512e-06,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00], device='cuda:0')
points: {0, 704, 34, 631, 75, 750, 243, 279, 378, 861}
Corresponding xs: tensor([-1981.0000,  -764.6797, -1922.2572,  -890.8038, -1851.4204,  -685.2042,
        -1561.1621, -1498.9640, -1327.9189,  -493.4264], device='cuda:0')
Plot saved to /raven/u/dvoss/al_pmssmwithgp/model/plots/gp_plot.png
                                  
================================= 
Global information about the job: 
================================= 
  
Job owner: dvoss(54815)
Job name:  test
Node list: ravg1061
Job start: Fri Aug  2 14:36:48 CEST 2024
Job end:   Fri Aug  2 14:38:20 CEST 2024
Work dir:  /raven/u/dvoss/al_pmssmwithgp/model
Command:   /raven/u/dvoss/al_pmssmwithgp/model/slurm/single_job.sbatch
  
  
  
==========================================================================================
Information on jobsteps (Note: MaxRSS/AveRSS is the maximum/average over all 
tasks of the per-task memory high-water marks; cf. "man sacct"): 
==========================================================================================
  
JobID            JobName NNodes NTasks  NCPUS       MaxRSS       AveRSS    Elapsed ExitCode
------------- ---------- ------ ------ ------ ------------ ------------ ---------- --------
12222722            test      1             4                             00:01:32      0:0
12222722.0        job.sh      1      1      4     2365.15M     2365.15M   00:01:19      0:0
  
Maximum memory per node: 2.480039 GB (defined as MaxRSS*Ntasks/NNodes)
CPU utilization: 9.2 %
  

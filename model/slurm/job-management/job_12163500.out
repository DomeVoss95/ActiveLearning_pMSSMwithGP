Defaulting to user installation because normal site-packages is not writeable
Requirement already satisfied: uproot in /raven/u/dvoss/.local/lib/python3.9/site-packages (5.3.10)
Requirement already satisfied: numpy in /raven/u/system/soft/SLE_15/packages/x86_64/anaconda/3/2021.11/lib/python3.9/site-packages (from uproot) (1.20.3)
Requirement already satisfied: typing-extensions>=4.1.0 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from uproot) (4.12.2)
Requirement already satisfied: packaging in /raven/u/system/soft/SLE_15/packages/x86_64/anaconda/3/2021.11/lib/python3.9/site-packages (from uproot) (21.0)
Requirement already satisfied: cramjam>=2.5.0 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from uproot) (2.8.3)
Requirement already satisfied: awkward>=2.4.6 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from uproot) (2.6.6)
Requirement already satisfied: fsspec in /raven/u/dvoss/.local/lib/python3.9/site-packages (from uproot) (2024.6.1)
Requirement already satisfied: importlib-metadata>=4.13.0 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from awkward>=2.4.6->uproot) (8.0.0)
Requirement already satisfied: awkward-cpp==35 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from awkward>=2.4.6->uproot) (35)
Requirement already satisfied: zipp>=0.5 in /raven/u/system/soft/SLE_15/packages/x86_64/anaconda/3/2021.11/lib/python3.9/site-packages (from importlib-metadata>=4.13.0->awkward>=2.4.6->uproot) (3.6.0)
Requirement already satisfied: pyparsing>=2.0.2 in /raven/u/system/soft/SLE_15/packages/x86_64/anaconda/3/2021.11/lib/python3.9/site-packages (from packaging->uproot) (3.0.4)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1000]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1100]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.1100]], requires_grad=True)
Iter 1 / 1000 - Loss (Train): 5.387 - Loss (Val): 4.307
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1100]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1200]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.1200]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1200]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1300]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.1300]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1300]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1400]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.1400]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1400]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1500]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.1500]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1500]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1599]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.1599]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1599]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1699]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.1699]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1699]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1799]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.1799]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1799]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1898]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.1898]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1898]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1997]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.1997]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.1997]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2097]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.2097]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2097]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2196]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.2196]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2196]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2295]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.2295]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2295]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2393]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.2393]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2393]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2492]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.2492]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2492]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2590]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.2590]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2590]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2688]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.2688]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2688]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2786]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.2786]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2786]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2884]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.2884]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2884]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2981]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.2981]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.2981]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3078]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.3078]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3078]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3175]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.3175]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3175]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3271]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.3271]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3271]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3368]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.3368]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3368]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3464]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.3464]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3464]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3559]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.3559]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3559]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3655]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.3655]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3655]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3750]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.3750]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3750]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3845]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.3845]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3845]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3939]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.3939]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.3939]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4033]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.4033]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4033]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4127]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.4127]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4127]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4221]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.4221]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4221]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4314]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.4314]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4314]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4406]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.4406]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4406]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4499]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.4499]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4499]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4591]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.4591]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4591]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4683]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.4683]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4683]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4774]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.4774]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4774]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4865]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.4865]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4865]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4956]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.4956]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.4956]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5046]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.5046]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5046]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5136]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.5136]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5136]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5225]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.5225]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5225]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5314]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.5314]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5314]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5403]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.5403]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5403]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5491]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.5491]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5491]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5579]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.5579]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5579]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5667]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.5667]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5667]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5754]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.5754]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5754]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5841]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.5841]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5841]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5927]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.5927]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.5927]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6013]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.6013]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6013]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6099]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.6099]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6099]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6184]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.6184]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6184]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6269]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.6269]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6269]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6353]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.6353]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6353]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6437]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.6437]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6437]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6521]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.6521]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6521]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6604]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.6604]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6604]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6687]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.6687]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6687]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6770]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.6770]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6770]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6852]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.6852]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6852]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6933]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.6933]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.6933]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7015]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.7015]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7015]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7096]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.7096]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7096]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7176]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.7176]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7176]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7256]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.7256]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7256]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7336]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.7336]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7336]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7416]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.7416]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7416]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7495]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.7495]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7495]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7573]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.7573]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7573]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7652]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.7652]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7652]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7729]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.7729]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7729]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7807]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.7807]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7807]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7884]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.7884]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7884]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7961]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.7961]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.7961]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8037]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.8037]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8037]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8113]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.8113]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8113]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8189]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.8189]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8189]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8264]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.8264]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8264]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8339]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.8339]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8339]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8413]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.8413]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8413]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8487]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.8487]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8487]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8561]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.8561]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8561]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8634]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.8634]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8634]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8707]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.8707]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8707]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8780]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.8780]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8780]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8852]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.8852]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8852]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8924]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.8924]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8924]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8995]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.8995]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.8995]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9066]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.9066]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9066]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9137]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.9137]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9137]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9207]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.9207]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9207]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9277]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.9277]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9277]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9347]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.9347]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9347]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9416]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.9416]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9416]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9485]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.9485]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9485]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9553]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.9553]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9553]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9621]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.9621]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9621]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9689]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.9689]], requires_grad=True)
Iter 101 / 1000 - Loss (Train): 2.917 - Loss (Val): 2.578
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9689]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9756]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.9756]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9756]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9823]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.9823]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9823]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9890]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.9890]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9890]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9956]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[0.9956]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[0.9956]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0022]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.0022]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0022]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0088]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.0088]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0088]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0153]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.0153]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0153]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0218]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.0218]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0218]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0282]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.0282]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0282]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0346]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.0346]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0346]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0410]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.0410]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0410]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0474]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.0474]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0474]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0537]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.0537]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0537]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0599]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.0599]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0599]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0662]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.0662]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0662]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0724]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.0724]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0724]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0785]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.0785]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0785]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0847]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.0847]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0847]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0907]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.0907]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0907]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0968]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.0968]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.0968]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1028]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1028]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1028]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1088]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1088]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1088]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1148]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1148]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1148]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1207]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1207]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1207]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1265]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1265]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1265]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1324]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1324]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1324]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1382]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1382]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1382]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1440]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1440]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1440]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1497]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1497]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1497]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1554]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1554]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1554]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1611]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1611]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1611]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1667]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1667]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1667]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1723]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1723]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1723]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1779]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1779]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1779]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1834]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1834]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1834]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1889]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1889]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1889]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1943]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1943]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1943]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1998]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.1998]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.1998]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2051]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2051]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2051]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2105]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2105]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2105]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2158]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2158]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2158]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2211]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2211]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2211]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2264]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2264]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2264]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2316]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2316]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2316]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2367]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2367]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2367]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2419]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2419]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2419]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2470]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2470]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2470]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2521]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2521]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2521]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2571]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2571]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2571]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2621]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2621]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2621]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2671]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2671]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2671]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2720]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2720]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2720]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2770]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2770]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2770]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2818]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2818]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2818]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2867]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2867]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2867]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2915]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2915]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2915]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2962]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2962]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2962]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3010]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3010]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3010]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3057]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3057]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3057]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3103]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3103]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3103]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3150]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3150]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3150]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3196]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3196]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3196]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3241]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3241]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3241]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3287]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3287]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3287]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3332]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3332]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3332]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3376]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3376]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3376]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3421]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3421]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3421]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3465]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3465]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3465]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3508]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3508]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3508]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3551]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3551]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3551]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3594]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3594]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3594]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3637]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3637]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3637]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3679]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3679]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3679]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3721]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3721]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3721]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3763]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3763]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3763]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3804]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3804]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3804]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3845]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3845]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3845]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3886]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3886]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3886]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3926]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3926]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3926]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3966]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3966]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3966]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4005]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4005]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4005]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4045]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4045]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4045]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4083]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4083]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4083]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4122]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4122]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4122]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4160]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4160]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4160]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4198]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4198]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4198]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4236]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4236]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4236]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4273]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4273]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4273]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4310]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4310]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4310]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4346]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4346]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4346]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4382]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4382]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4382]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4418]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4418]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4418]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4454]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4454]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4454]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4489]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4489]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4489]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4524]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4524]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4524]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4558]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4558]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4558]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4592]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4592]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4592]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4626]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4626]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4626]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4660]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4660]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4660]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4693]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4693]], requires_grad=True)
Iter 201 / 1000 - Loss (Train): 2.217 - Loss (Val): 2.093
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4693]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4726]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4726]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4726]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4758]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4758]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4758]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4790]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4790]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4790]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4822]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4822]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4822]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4853]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4853]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4853]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4884]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4884]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4884]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4915]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4915]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4915]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4945]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4945]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4945]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4975]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4975]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4975]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5005]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5005]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5005]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5034]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5034]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5034]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5063]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5063]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5063]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5092]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5092]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5092]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5120]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5120]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5120]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5148]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5148]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5148]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5176]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5176]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5176]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5203]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5203]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5203]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5230]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5230]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5230]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5257]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5257]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5257]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5283]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5283]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5283]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5309]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5309]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5309]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5334]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5334]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5334]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5360]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5360]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5360]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5384]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5384]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5384]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5409]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5409]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5409]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5433]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5433]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5433]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5457]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5457]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5457]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5481]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5481]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5481]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5504]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5504]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5504]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5526]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5526]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5526]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5549]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5549]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5549]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5571]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5571]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5571]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5593]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5593]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5593]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5614]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5614]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5614]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5635]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5635]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5635]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5656]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5656]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5656]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5677]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5677]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5677]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5697]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5697]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5697]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5717]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5717]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5717]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5736]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5736]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5736]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5755]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5755]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5755]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5774]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5774]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5774]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5793]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5793]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5793]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5811]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5811]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5811]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5829]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5829]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5829]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5847]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5847]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5847]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5864]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5864]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5864]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5881]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5881]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5881]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5898]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5898]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5898]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5914]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5914]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5914]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5930]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5930]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5930]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5946]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5946]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5946]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5962]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5962]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5962]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5977]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5977]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5977]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5992]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5992]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5992]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6006]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6006]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6006]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6021]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6021]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6021]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6035]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6035]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6035]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6049]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6049]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6049]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6062]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6062]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6062]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6076]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6076]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6076]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6089]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6089]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6089]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6102]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6102]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6102]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6114]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6114]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6114]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6126]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6126]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6126]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6138]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6138]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6138]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6150]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6150]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6150]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6162]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6162]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6162]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6173]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6173]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6173]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6184]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6184]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6184]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6195]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6195]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6195]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6206]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6206]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6206]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6216]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6216]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6216]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6226]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6226]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6226]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6236]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6236]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6236]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6246]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6246]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6246]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6256]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6256]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6256]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6265]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6265]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6265]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6274]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6274]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6274]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6283]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6283]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6283]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6292]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6292]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6292]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6300]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6300]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6300]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6309]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6309]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6309]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6317]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6317]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6317]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6325]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6325]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6325]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6333]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6333]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6333]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6340]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6340]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6340]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6348]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6348]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6348]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6355]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6355]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6355]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6362]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6362]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6362]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6369]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6369]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6369]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6376]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6376]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6376]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6383]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6383]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6383]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6389]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6389]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6389]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6395]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6395]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6395]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6401]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6401]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6401]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6407]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6407]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6407]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6413]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6413]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6413]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6419]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6419]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6419]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6425]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6425]], requires_grad=True)
Iter 301 / 1000 - Loss (Train): 1.963 - Loss (Val): 1.853
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6425]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6430]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6430]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6430]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6435]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6435]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6435]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6440]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6440]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6440]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6445]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6445]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6445]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6450]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6450]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6450]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6455]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6455]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6455]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6460]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6460]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6460]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6464]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6464]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6464]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6469]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6469]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6469]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6473]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6473]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6473]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6477]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6477]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6477]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6481]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6481]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6481]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6485]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6485]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6485]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6489]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6489]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6489]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6492]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6492]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6492]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6496]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6496]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6496]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6499]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6499]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6499]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6502]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6502]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6502]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6506]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6506]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6506]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6509]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6509]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6509]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6512]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6512]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6512]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6515]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6515]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6515]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6517]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6517]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6517]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6520]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6520]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6520]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6523]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6523]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6523]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6525]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6525]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6525]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6528]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6528]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6528]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6530]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6530]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6530]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6532]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6532]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6532]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6534]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6534]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6534]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6536]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6536]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6536]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6538]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6538]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6538]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6540]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6540]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6540]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6542]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6542]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6542]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6543]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6543]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6543]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6545]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6545]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6545]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6546]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6546]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6546]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6547]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6547]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6547]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6549]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6549]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6549]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6550]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6550]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6550]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6551]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6551]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6551]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6552]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6552]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6552]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6553]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6553]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6553]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6553]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6553]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6553]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6554]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6554]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6554]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6554]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6554]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6554]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6554]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6554]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6554]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6553]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6553]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6553]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6552]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6552]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6552]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6551]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6551]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6551]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6550]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6550]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6550]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6549]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6549]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6549]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6548]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6548]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6548]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6546]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6546]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6546]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6545]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6545]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6545]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6544]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6544]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6544]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6542]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6542]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6542]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6540]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6540]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6540]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6539]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6539]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6539]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6537]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6537]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6537]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6535]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6535]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6535]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6533]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6533]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6533]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6531]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6531]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6531]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6529]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6529]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6529]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6527]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6527]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6527]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6524]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6524]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6524]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6522]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6522]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6522]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6520]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6520]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6520]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6517]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6517]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6517]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6515]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6515]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6515]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6512]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6512]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6512]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6509]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6509]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6509]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6507]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6507]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6507]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6504]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6504]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6504]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6501]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6501]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6501]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6498]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6498]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6498]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6495]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6495]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6495]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6492]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6492]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6492]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6489]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6489]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6489]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6486]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6486]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6486]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6483]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6483]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6483]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6480]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6480]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6480]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6476]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6476]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6476]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6473]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6473]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6473]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6470]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6470]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6470]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6467]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6467]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6467]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6463]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6463]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6463]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6460]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6460]], requires_grad=True)
Iter 401 / 1000 - Loss (Train): 1.753 - Loss (Val): 1.541
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6460]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6457]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6457]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6457]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6453]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6453]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6453]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6450]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6450]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6450]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6446]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6446]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6446]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6443]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6443]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6443]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6440]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6440]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6440]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6436]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6436]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6436]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6433]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6433]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6433]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6429]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6429]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6429]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6426]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6426]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6426]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6422]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6422]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6422]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6419]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6419]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6419]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6415]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6415]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6415]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6412]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6412]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6412]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6409]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6409]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6409]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6405]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6405]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6405]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6402]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6402]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6402]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6398]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6398]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6398]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6395]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6395]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6395]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6391]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6391]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6391]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6388]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6388]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6388]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6384]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6384]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6384]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6381]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6381]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6381]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6377]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6377]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6377]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6374]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6374]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6374]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6371]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6371]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6371]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6367]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6367]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6367]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6364]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6364]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6364]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6360]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6360]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6360]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6357]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6357]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6357]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6353]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6353]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6353]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6350]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6350]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6350]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6346]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6346]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6346]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6343]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6343]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6343]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6340]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6340]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6340]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6336]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6336]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6336]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6333]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6333]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6333]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6329]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6329]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6329]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6326]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6326]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6326]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6322]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6322]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6322]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6318]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6318]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6318]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6315]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6315]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6315]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6311]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6311]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6311]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6308]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6308]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6308]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6304]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6304]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6304]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6300]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6300]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6300]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6297]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6297]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6297]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6293]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6293]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6293]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6289]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6289]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6289]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6286]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6286]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6286]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6282]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6282]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6282]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6278]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6278]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6278]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6274]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6274]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6274]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6270]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6270]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6270]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6266]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6266]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6266]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6262]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6262]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6262]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6258]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6258]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6258]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6254]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6254]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6254]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6250]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6250]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6250]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6246]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6246]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6246]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6242]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6242]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6242]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6238]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6238]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6238]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6234]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6234]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6234]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6229]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6229]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6229]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6225]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6225]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6225]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6221]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6221]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6221]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6216]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6216]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6216]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6212]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6212]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6212]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6207]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6207]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6207]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6203]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6203]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6203]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6198]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6198]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6198]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6194]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6194]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6194]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6189]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6189]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6189]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6185]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6185]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6185]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6180]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6180]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6180]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6175]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6175]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6175]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6170]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6170]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6170]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6165]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6165]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6165]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6161]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6161]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6161]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6156]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6156]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6156]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6151]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6151]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6151]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6146]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6146]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6146]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6141]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6141]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6141]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6136]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6136]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6136]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6131]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6131]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6131]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6125]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6125]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6125]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6120]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6120]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6120]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6115]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6115]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6115]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6110]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6110]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6110]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6104]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6104]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6104]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6099]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6099]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6099]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6094]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6094]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6094]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6088]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6088]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6088]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6083]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6083]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6083]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6077]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6077]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6077]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6071]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6071]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6071]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6066]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6066]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6066]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6060]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6060]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6060]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6054]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6054]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6054]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6049]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6049]], requires_grad=True)
Iter 501 / 1000 - Loss (Train): 1.423 - Loss (Val): 1.303
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6049]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6043]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6043]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6043]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6037]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6037]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6037]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6031]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6031]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6031]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6025]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6025]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6025]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6019]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6019]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6019]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6013]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6013]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6013]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6007]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6007]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6007]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6001]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.6001]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.6001]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5995]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5995]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5995]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5988]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5988]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5988]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5982]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5982]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5982]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5976]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5976]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5976]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5970]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5970]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5970]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5963]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5963]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5963]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5957]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5957]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5957]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5950]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5950]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5950]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5944]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5944]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5944]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5937]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5937]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5937]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5930]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5930]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5930]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5924]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5924]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5924]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5917]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5917]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5917]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5910]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5910]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5910]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5903]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5903]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5903]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5897]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5897]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5897]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5890]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5890]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5890]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5883]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5883]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5883]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5876]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5876]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5876]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5869]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5869]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5869]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5862]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5862]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5862]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5855]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5855]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5855]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5847]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5847]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5847]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5840]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5840]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5840]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5833]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5833]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5833]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5826]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5826]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5826]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5819]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5819]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5819]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5811]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5811]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5811]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5804]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5804]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5804]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5797]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5797]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5797]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5789]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5789]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5789]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5782]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5782]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5782]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5774]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5774]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5774]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5767]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5767]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5767]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5759]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5759]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5759]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5752]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5752]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5752]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5744]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5744]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5744]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5736]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5736]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5736]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5729]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5729]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5729]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5721]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5721]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5721]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5713]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5713]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5713]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5706]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5706]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5706]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5698]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5698]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5698]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5690]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5690]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5690]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5683]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5683]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5683]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5675]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5675]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5675]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5667]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5667]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5667]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5659]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5659]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5659]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5651]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5651]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5651]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5643]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5643]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5643]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5635]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5635]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5635]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5628]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5628]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5628]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5620]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5620]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5620]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5612]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5612]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5612]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5604]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5604]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5604]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5596]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5596]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5596]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5588]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5588]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5588]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5580]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5580]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5580]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5572]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5572]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5572]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5564]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5564]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5564]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5556]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5548]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5548]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5548]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5540]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5540]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5540]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5532]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5532]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5532]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5524]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5524]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5524]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5515]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5515]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5515]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5507]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5507]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5507]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5499]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5499]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5499]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5491]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5491]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5491]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5483]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5483]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5483]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5475]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5475]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5475]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5467]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5467]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5467]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5459]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5459]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5459]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5450]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5450]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5450]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5442]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5442]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5442]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5434]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5434]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5434]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5426]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5426]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5426]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5418]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5418]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5418]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5410]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5410]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5410]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5401]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5401]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5401]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5393]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5393]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5393]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5385]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5385]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5385]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5377]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5377]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5377]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5369]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5369]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5369]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5360]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5360]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5360]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5352]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5352]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5352]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5344]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5344]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5344]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5336]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5336]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5336]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5327]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5327]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5327]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5319]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5319]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5319]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5311]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5311]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5311]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5303]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5303]], requires_grad=True)
Iter 601 / 1000 - Loss (Train): 1.351 - Loss (Val): 1.276
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5303]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5294]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5294]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5294]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5286]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5286]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5286]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5278]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5278]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5278]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5270]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5270]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5270]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5261]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5261]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5261]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5253]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5253]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5253]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5245]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5245]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5245]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5237]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5237]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5237]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5228]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5228]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5228]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5220]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5220]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5220]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5212]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5212]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5212]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5204]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5204]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5204]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5195]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5195]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5195]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5187]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5187]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5187]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5179]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5179]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5179]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5170]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5170]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5170]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5162]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5162]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5162]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5154]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5154]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5154]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5146]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5146]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5146]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5137]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5137]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5137]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5129]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5129]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5129]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5121]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5121]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5121]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5112]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5112]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5112]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5104]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5104]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5104]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5096]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5096]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5096]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5088]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5088]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5088]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5079]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5079]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5079]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5071]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5071]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5071]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5063]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5063]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5063]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5054]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5054]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5054]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5046]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5046]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5046]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5038]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5038]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5038]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5029]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5029]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5029]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5021]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5021]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5021]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5013]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5013]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5013]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5005]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.5005]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.5005]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4996]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4996]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4996]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4988]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4988]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4988]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4980]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4980]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4980]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4971]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4971]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4971]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4963]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4963]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4963]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4955]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4955]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4955]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4947]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4947]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4947]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4938]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4938]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4938]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4930]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4930]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4930]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4922]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4922]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4922]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4913]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4913]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4913]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4905]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4905]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4905]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4897]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4897]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4897]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4889]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4889]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4889]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4880]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4880]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4880]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4872]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4872]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4872]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4864]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4864]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4864]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4855]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4855]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4855]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4847]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4847]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4847]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4839]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4839]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4839]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4831]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4831]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4831]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4822]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4822]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4822]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4814]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4814]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4814]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4806]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4806]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4806]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4798]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4798]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4798]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4789]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4789]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4789]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4781]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4781]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4781]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4773]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4773]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4773]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4765]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4765]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4765]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4756]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4756]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4756]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4748]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4748]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4748]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4740]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4740]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4740]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4732]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4732]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4732]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4723]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4723]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4723]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4715]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4715]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4715]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4707]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4707]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4707]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4699]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4699]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4699]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4691]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4691]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4691]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4682]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4682]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4682]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4674]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4674]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4674]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4666]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4666]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4666]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4658]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4658]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4658]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4649]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4649]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4649]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4641]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4641]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4641]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4633]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4633]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4633]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4625]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4625]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4625]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4617]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4617]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4617]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4608]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4608]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4608]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4600]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4600]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4600]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4592]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4592]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4592]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4584]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4584]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4584]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4576]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4576]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4576]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4568]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4568]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4568]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4559]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4559]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4559]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4551]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4551]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4551]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4543]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4543]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4543]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4535]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4535]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4535]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4527]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4527]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4527]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4519]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4519]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4519]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4511]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4511]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4511]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4503]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4503]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4503]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4494]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4494]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4494]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4486]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4486]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4486]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4478]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4478]], requires_grad=True)
Iter 701 / 1000 - Loss (Train): 1.319 - Loss (Val): 1.196
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4478]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4470]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4470]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4470]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4462]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4462]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4462]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4454]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4454]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4454]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4446]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4446]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4446]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4438]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4438]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4438]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4430]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4430]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4430]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4422]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4422]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4422]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4414]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4414]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4414]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4406]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4406]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4406]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4398]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4398]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4398]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4389]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4389]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4389]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4381]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4381]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4381]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4373]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4373]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4373]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4365]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4365]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4365]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4357]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4357]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4357]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4349]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4349]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4349]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4341]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4341]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4341]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4333]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4333]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4333]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4326]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4326]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4326]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4318]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4318]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4318]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4310]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4310]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4310]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4302]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4302]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4302]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4294]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4294]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4294]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4286]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4286]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4286]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4278]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4278]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4278]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4270]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4270]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4270]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4262]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4262]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4262]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4254]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4254]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4254]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4246]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4246]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4246]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4238]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4238]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4238]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4231]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4231]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4231]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4223]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4223]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4223]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4215]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4215]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4215]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4207]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4207]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4207]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4199]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4199]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4199]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4191]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4191]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4191]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4184]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4184]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4184]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4176]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4176]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4176]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4168]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4168]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4168]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4160]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4160]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4160]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4153]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4153]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4153]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4145]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4145]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4145]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4137]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4137]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4137]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4129]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4129]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4129]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4122]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4122]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4122]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4114]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4114]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4114]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4106]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4106]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4106]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4099]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4099]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4099]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4091]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4091]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4091]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4083]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4083]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4083]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4076]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4076]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4076]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4068]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4068]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4068]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4060]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4060]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4060]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4053]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4053]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4053]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4045]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4045]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4045]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4038]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4038]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4038]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4030]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4030]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4030]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4022]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4022]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4022]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4015]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4015]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4015]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4007]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4007]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4007]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4000]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.4000]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.4000]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3992]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3992]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3992]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3985]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3985]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3985]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3977]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3977]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3977]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3970]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3970]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3970]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3962]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3962]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3962]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3955]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3955]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3955]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3948]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3948]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3948]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3940]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3940]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3940]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3933]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3933]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3933]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3925]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3925]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3925]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3918]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3918]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3918]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3910]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3910]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3910]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3903]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3903]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3903]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3896]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3896]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3896]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3888]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3888]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3888]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3881]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3881]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3881]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3874]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3874]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3874]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3866]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3866]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3866]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3859]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3859]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3859]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3852]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3852]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3852]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3845]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3845]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3845]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3837]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3837]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3837]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3830]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3830]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3830]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3823]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3823]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3823]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3816]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3816]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3816]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3808]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3808]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3808]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3801]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3801]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3801]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3794]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3794]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3794]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3787]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3787]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3787]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3780]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3780]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3780]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3772]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3772]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3772]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3765]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3765]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3765]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3758]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3758]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3758]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3751]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3751]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3751]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3744]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3744]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3744]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3737]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3737]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3737]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3730]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3730]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3730]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3723]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3723]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3723]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3715]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3715]], requires_grad=True)
Iter 801 / 1000 - Loss (Train): 1.281 - Loss (Val): 1.076
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3715]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3708]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3708]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3708]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3701]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3701]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3701]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3694]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3694]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3694]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3687]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3687]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3687]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3680]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3680]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3680]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3673]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3673]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3673]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3666]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3666]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3666]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3659]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3659]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3659]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3652]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3652]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3652]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3645]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3645]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3645]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3638]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3638]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3638]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3631]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3631]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3631]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3624]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3624]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3624]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3617]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3617]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3617]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3610]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3610]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3610]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3604]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3604]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3604]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3597]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3597]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3597]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3590]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3590]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3590]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3583]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3583]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3583]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3576]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3576]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3576]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3569]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3569]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3569]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3562]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3562]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3562]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3555]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3549]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3549]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3549]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3542]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3542]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3542]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3535]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3535]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3535]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3528]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3528]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3528]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3521]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3521]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3521]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3514]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3514]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3514]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3508]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3508]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3508]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3501]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3501]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3501]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3494]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3494]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3494]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3487]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3487]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3487]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3480]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3480]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3480]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3474]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3474]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3474]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3467]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3467]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3467]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3460]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3460]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3460]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3454]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3454]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3454]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3447]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3447]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3447]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3440]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3440]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3440]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3433]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3433]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3433]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3427]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3427]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3427]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3420]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3420]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3420]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3413]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3413]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3413]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3407]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3407]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3407]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3400]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3400]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3400]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3393]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3393]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3393]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3387]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3387]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3387]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3380]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3380]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3380]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3373]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3373]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3373]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3367]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3367]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3367]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3360]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3360]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3360]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3353]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3353]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3353]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3347]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3347]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3347]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3340]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3340]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3340]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3334]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3334]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3334]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3327]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3327]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3327]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3320]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3320]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3320]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3314]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3314]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3314]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3307]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3307]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3307]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3301]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3301]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3301]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3294]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3294]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3294]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3288]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3288]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3288]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3281]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3281]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3281]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3275]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3275]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3275]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3268]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3268]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3268]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3261]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3261]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3261]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3255]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3255]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3255]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3248]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3248]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3248]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3242]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3242]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3242]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3235]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3235]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3235]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3229]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3229]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3229]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3222]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3222]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3222]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3216]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3216]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3216]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3210]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3210]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3210]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3203]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3203]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3203]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3197]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3197]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3197]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3190]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3190]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3190]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3184]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3184]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3184]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3177]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3177]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3177]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3171]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3171]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3171]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3164]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3164]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3164]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3158]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3158]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3158]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3152]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3152]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3152]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3145]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3145]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3145]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3139]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3139]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3139]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3132]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3132]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3132]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3126]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3126]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3126]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3120]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3120]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3120]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3113]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3113]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3113]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3107]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3107]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3107]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3101]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3101]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3101]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3094]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3094]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3094]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3088]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3088]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3088]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3081]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3081]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3081]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3075]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3075]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3075]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3069]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3069]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3069]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3062]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3062]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3062]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3056]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3056]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3056]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3050]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3050]], requires_grad=True)
Iter 901 / 1000 - Loss (Train): 1.261 - Loss (Val): 0.993
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3050]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3044]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3044]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3044]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3037]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3037]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3037]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3031]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3031]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3031]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3025]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3025]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3025]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3018]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3018]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3018]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3012]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3012]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3012]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3006]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3006]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3006]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3000]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.3000]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.3000]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2993]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2993]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2993]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2987]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2987]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2987]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2981]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2981]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2981]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2975]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2975]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2975]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2968]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2968]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2968]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2962]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2962]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2962]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2956]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2956]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2956]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2950]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2950]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2950]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2943]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2943]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2943]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2937]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2937]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2937]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2931]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2931]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2931]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2925]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2925]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2925]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2919]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2919]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2919]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2912]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2912]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2912]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2906]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2906]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2906]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2900]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2900]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2900]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2894]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2894]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2894]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2888]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2888]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2888]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2882]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2882]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2882]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2875]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2875]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2875]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2869]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2869]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2869]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2863]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2863]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2863]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2857]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2857]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2857]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2851]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2851]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2851]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2845]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2845]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2845]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2839]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2839]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2839]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2833]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2833]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2833]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2826]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2826]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2826]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2820]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2820]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2820]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2814]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2814]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2814]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2808]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2808]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2808]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2802]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2802]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2802]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2796]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2796]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2796]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2790]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2790]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2790]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2784]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2784]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2784]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2778]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2778]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2778]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2772]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2772]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2772]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2766]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2766]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2766]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2760]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2760]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2760]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2754]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2754]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2754]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2748]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2748]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2748]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2742]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2742]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2742]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2735]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2735]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2735]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2729]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2729]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2729]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2723]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2723]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2723]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2717]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2717]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2717]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2711]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2711]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2711]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2705]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2705]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2705]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2699]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2699]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2699]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2693]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2693]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2693]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2687]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2687]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2687]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2682]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2682]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2682]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2676]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2676]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2676]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2670]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2670]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2670]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2664]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2664]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2664]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2658]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2658]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2658]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2652]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2652]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2652]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2646]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2646]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2646]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2640]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2640]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2640]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2634]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2634]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2634]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2628]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2628]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2628]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2622]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2622]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2622]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2616]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2616]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2616]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2610]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2610]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2610]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2604]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2604]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2604]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2598]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2598]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2598]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2593]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2593]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2593]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2587]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2587]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2587]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2581]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2581]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2581]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2575]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2575]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2575]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2569]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2569]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2569]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2563]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2563]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2563]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2557]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2557]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2557]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2551]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2551]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2551]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2546]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2546]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2546]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2540]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2540]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2540]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2534]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2534]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2534]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2528]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2528]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2528]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2522]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2522]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2522]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2516]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2516]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2516]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2511]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2511]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2511]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2505]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2505]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2505]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2499]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2499]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2499]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2493]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2493]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2493]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2487]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2487]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2487]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2482]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2482]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2482]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2476]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2476]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2476]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2470]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2470]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2470]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2464]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2464]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2464]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2458]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2458]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2458]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]])
weights: Parameter containing:
tensor([[1.2453]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]])
weights: Parameter containing:
tensor([[1.2453]], requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([1030, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        ...,
        [0.9980],
        [0.9990],
        [1.0000]])
weights: Parameter containing:
tensor([[1.2453]], requires_grad=True)
Index 0: mean=tensor([2.1154], device='cuda:0'), var=tensor([0.3769], device='cuda:0'), p0=tensor([0.9997], device='cuda:0'), p1=tensor([0.0003], device='cuda:0')
Index 0: entropy=0.0026111737824976444
Index 1: mean=tensor([2.1274], device='cuda:0'), var=tensor([0.3745], device='cuda:0'), p0=tensor([0.9997], device='cuda:0'), p1=tensor([0.0003], device='cuda:0')
Index 1: entropy=0.0023596573155373335
Index 2: mean=tensor([2.1395], device='cuda:0'), var=tensor([0.3722], device='cuda:0'), p0=tensor([0.9998], device='cuda:0'), p1=tensor([0.0002], device='cuda:0')
Index 2: entropy=0.002129416912794113
Index 3: mean=tensor([2.1518], device='cuda:0'), var=tensor([0.3700], device='cuda:0'), p0=tensor([0.9998], device='cuda:0'), p1=tensor([0.0002], device='cuda:0')
Index 3: entropy=0.0019191463943570852
Index 4: mean=tensor([2.1642], device='cuda:0'), var=tensor([0.3678], device='cuda:0'), p0=tensor([0.9998], device='cuda:0'), p1=tensor([0.0002], device='cuda:0')
Index 4: entropy=0.0017271825345233083
Index 5: mean=tensor([2.1768], device='cuda:0'), var=tensor([0.3657], device='cuda:0'), p0=tensor([0.9998], device='cuda:0'), p1=tensor([0.0002], device='cuda:0')
Index 5: entropy=0.0015525243943557143
Index 6: mean=tensor([2.1896], device='cuda:0'), var=tensor([0.3637], device='cuda:0'), p0=tensor([0.9999], device='cuda:0'), p1=tensor([0.0001], device='cuda:0')
Index 6: entropy=0.0013937680050730705
Index 7: mean=tensor([2.2025], device='cuda:0'), var=tensor([0.3618], device='cuda:0'), p0=tensor([0.9999], device='cuda:0'), p1=tensor([0.0001], device='cuda:0')
Index 7: entropy=0.0012499173171818256
Index 8: mean=tensor([2.2155], device='cuda:0'), var=tensor([0.3599], device='cuda:0'), p0=tensor([0.9999], device='cuda:0'), p1=tensor([0.0001], device='cuda:0')
Index 8: entropy=0.0011194392573088408
Index 9: mean=tensor([2.2287], device='cuda:0'), var=tensor([0.3581], device='cuda:0'), p0=tensor([0.9999], device='cuda:0'), p1=tensor([9.7871e-05], device='cuda:0')
Index 9: entropy=0.001001395983621478
Index 10: mean=tensor([2.2420], device='cuda:0'), var=tensor([0.3563], device='cuda:0'), p0=tensor([0.9999], device='cuda:0'), p1=tensor([8.6397e-05], device='cuda:0')
Index 10: entropy=0.0008948009926825762
Index 11: mean=tensor([2.2554], device='cuda:0'), var=tensor([0.3547], device='cuda:0'), p0=tensor([0.9999], device='cuda:0'), p1=tensor([7.6175e-05], device='cuda:0')
Index 11: entropy=0.0007984972908161581
Index 12: mean=tensor([2.2690], device='cuda:0'), var=tensor([0.3531], device='cuda:0'), p0=tensor([0.9999], device='cuda:0'), p1=tensor([6.7115e-05], device='cuda:0')
Index 12: entropy=0.0007120260270312428
Index 13: mean=tensor([2.2827], device='cuda:0'), var=tensor([0.3515], device='cuda:0'), p0=tensor([0.9999], device='cuda:0'), p1=tensor([5.9068e-05], device='cuda:0')
Index 13: entropy=0.0006342027336359024
Index 14: mean=tensor([2.2965], device='cuda:0'), var=tensor([0.3501], device='cuda:0'), p0=tensor([0.9999], device='cuda:0'), p1=tensor([5.1945e-05], device='cuda:0')
Index 14: entropy=0.0005644321790896356
Index 15: mean=tensor([2.3104], device='cuda:0'), var=tensor([0.3487], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.5627e-05], device='cuda:0')
Index 15: entropy=0.00050170166650787
Index 16: mean=tensor([2.3244], device='cuda:0'), var=tensor([0.3473], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.0054e-05], device='cuda:0')
Index 16: entropy=0.00044561451068148017
Index 17: mean=tensor([2.3385], device='cuda:0'), var=tensor([0.3460], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.5107e-05], device='cuda:0')
Index 17: entropy=0.00039520414429716766
Index 18: mean=tensor([2.3528], device='cuda:0'), var=tensor([0.3448], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.0756e-05], device='cuda:0')
Index 18: entropy=0.0003502926556393504
Index 19: mean=tensor([2.3671], device='cuda:0'), var=tensor([0.3436], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.6941e-05], device='cuda:0')
Index 19: entropy=0.00031041327747516334
Index 20: mean=tensor([2.3815], device='cuda:0'), var=tensor([0.3425], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.3574e-05], device='cuda:0')
Index 20: entropy=0.0002747892285697162
Index 21: mean=tensor([2.3960], device='cuda:0'), var=tensor([0.3414], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.0593e-05], device='cuda:0')
Index 21: entropy=0.00024283694801852107
Index 22: mean=tensor([2.4106], device='cuda:0'), var=tensor([0.3404], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.8001e-05], device='cuda:0')
Index 22: entropy=0.0002146589249605313
Index 23: mean=tensor([2.4252], device='cuda:0'), var=tensor([0.3394], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.5706e-05], device='cuda:0')
Index 23: entropy=0.00018946515046991408
Index 24: mean=tensor([2.4400], device='cuda:0'), var=tensor([0.3385], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.3709e-05], device='cuda:0')
Index 24: entropy=0.00016721562133170664
Index 25: mean=tensor([2.4548], device='cuda:0'), var=tensor([0.3376], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.1951e-05], device='cuda:0')
Index 25: entropy=0.00014737901801709086
Index 26: mean=tensor([2.4696], device='cuda:0'), var=tensor([0.3367], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.0431e-05], device='cuda:0')
Index 26: entropy=0.00013007996312808245
Index 27: mean=tensor([2.4845], device='cuda:0'), var=tensor([0.3359], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([9.0599e-06], device='cuda:0')
Index 27: entropy=0.00011426033597672358
Index 28: mean=tensor([2.4995], device='cuda:0'), var=tensor([0.3352], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([7.8976e-06], device='cuda:0')
Index 28: entropy=0.00010065647074952722
Index 29: mean=tensor([2.5145], device='cuda:0'), var=tensor([0.3345], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.8843e-06], device='cuda:0')
Index 29: entropy=8.874314517015591e-05
Index 30: mean=tensor([2.5296], device='cuda:0'), var=tensor([0.3338], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9903e-06], device='cuda:0')
Index 30: entropy=7.799565355526283e-05
Index 31: mean=tensor([2.5447], device='cuda:0'), var=tensor([0.3331], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.1856e-06], device='cuda:0')
Index 31: entropy=6.829244375694543e-05
Index 32: mean=tensor([2.5598], device='cuda:0'), var=tensor([0.3325], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.5002e-06], device='cuda:0')
Index 32: entropy=5.993309605401009e-05
Index 33: mean=tensor([2.5750], device='cuda:0'), var=tensor([0.3319], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.9339e-06], device='cuda:0')
Index 33: entropy=5.28948221472092e-05
Index 34: mean=tensor([2.5902], device='cuda:0'), var=tensor([0.3314], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.3975e-06], device='cuda:0')
Index 34: entropy=4.617996819433756e-05
Index 35: mean=tensor([2.6054], device='cuda:0'), var=tensor([0.3308], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.9504e-06], device='cuda:0')
Index 35: entropy=4.054970486322418e-05
Index 36: mean=tensor([2.6206], device='cuda:0'), var=tensor([0.3303], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.5630e-06], device='cuda:0')
Index 36: entropy=3.555990770109929e-05
Index 37: mean=tensor([2.6358], device='cuda:0'), var=tensor([0.3299], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.2352e-06], device='cuda:0')
Index 37: entropy=3.134725193376653e-05
Index 38: mean=tensor([2.6511], device='cuda:0'), var=tensor([0.3294], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.9372e-06], device='cuda:0')
Index 38: entropy=2.7389196475269273e-05
Index 39: mean=tensor([2.6663], device='cuda:0'), var=tensor([0.3290], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.6689e-06], device='cuda:0')
Index 39: entropy=2.3871250959928147e-05
Index 40: mean=tensor([2.6815], device='cuda:0'), var=tensor([0.3286], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.4603e-06], device='cuda:0')
Index 40: entropy=2.105254134221468e-05
Index 41: mean=tensor([2.6968], device='cuda:0'), var=tensor([0.3282], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.2517e-06], device='cuda:0')
Index 41: entropy=1.826353218348231e-05
Index 42: mean=tensor([2.7120], device='cuda:0'), var=tensor([0.3278], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.0729e-06], device='cuda:0')
Index 42: entropy=1.581984179210849e-05
Index 43: mean=tensor([2.7271], device='cuda:0'), var=tensor([0.3274], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([9.5367e-07], device='cuda:0')
Index 43: entropy=1.4174407624523155e-05
Index 44: mean=tensor([2.7423], device='cuda:0'), var=tensor([0.3271], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([8.0466e-07], device='cuda:0')
Index 44: entropy=1.2126170076953713e-05
Index 45: mean=tensor([2.7574], device='cuda:0'), var=tensor([0.3268], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([7.1526e-07], device='cuda:0')
Index 45: entropy=1.0836571163963526e-05
Index 46: mean=tensor([2.7725], device='cuda:0'), var=tensor([0.3264], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-07], device='cuda:0')
Index 46: entropy=9.139149369730148e-06
Index 47: mean=tensor([2.7876], device='cuda:0'), var=tensor([0.3261], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.3644e-07], device='cuda:0')
Index 47: entropy=8.281753252958879e-06
Index 48: mean=tensor([2.8026], device='cuda:0'), var=tensor([0.3258], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.4703e-07], device='cuda:0')
Index 48: entropy=7.012767582637025e-06
Index 49: mean=tensor([2.8175], device='cuda:0'), var=tensor([0.3256], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.8743e-07], device='cuda:0')
Index 49: entropy=6.07754282100359e-06
Index 50: mean=tensor([2.8324], device='cuda:0'), var=tensor([0.3253], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.2783e-07], device='cuda:0')
Index 50: entropy=5.252320534054888e-06
Index 51: mean=tensor([2.8473], device='cuda:0'), var=tensor([0.3250], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.9802e-07], device='cuda:0')
Index 51: entropy=4.776148216478759e-06
Index 52: mean=tensor([2.8621], device='cuda:0'), var=tensor([0.3247], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.6822e-07], device='cuda:0')
Index 52: entropy=4.2969913920387626e-06
Index 53: mean=tensor([2.8768], device='cuda:0'), var=tensor([0.3245], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.0862e-07], device='cuda:0')
Index 53: entropy=3.4475144730095053e-06
Index 54: mean=tensor([2.8914], device='cuda:0'), var=tensor([0.3242], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.7881e-07], device='cuda:0')
Index 54: entropy=2.9570319384220056e-06
Index 55: mean=tensor([2.9059], device='cuda:0'), var=tensor([0.3240], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.7881e-07], device='cuda:0')
Index 55: entropy=2.9570319384220056e-06
Index 56: mean=tensor([2.9204], device='cuda:0'), var=tensor([0.3237], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.4901e-07], device='cuda:0')
Index 56: entropy=2.4615587790322024e-06
Index 57: mean=tensor([2.9348], device='cuda:0'), var=tensor([0.3234], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.1921e-07], device='cuda:0')
Index 57: entropy=2.0196896457491675e-06
Index 58: mean=tensor([2.9491], device='cuda:0'), var=tensor([0.3232], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.1921e-07], device='cuda:0')
Index 58: entropy=2.0196896457491675e-06
Index 59: mean=tensor([2.9633], device='cuda:0'), var=tensor([0.3229], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([8.9407e-08], device='cuda:0')
Index 59: entropy=1.5702904647696414e-06
Index 60: mean=tensor([2.9774], device='cuda:0'), var=tensor([0.3227], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([8.9407e-08], device='cuda:0')
Index 60: entropy=1.5702904647696414e-06
Index 61: mean=tensor([2.9914], device='cuda:0'), var=tensor([0.3224], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-08], device='cuda:0')
Index 61: entropy=1.0511596428841585e-06
Index 62: mean=tensor([3.0052], device='cuda:0'), var=tensor([0.3221], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-08], device='cuda:0')
Index 62: entropy=1.0511596428841585e-06
Index 63: mean=tensor([3.0190], device='cuda:0'), var=tensor([0.3219], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-08], device='cuda:0')
Index 63: entropy=1.0511596428841585e-06
Index 64: mean=tensor([3.0327], device='cuda:0'), var=tensor([0.3216], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 64: entropy=5.164349090591713e-07
Index 65: mean=tensor([3.0462], device='cuda:0'), var=tensor([0.3213], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 65: entropy=5.164349090591713e-07
Index 66: mean=tensor([3.0596], device='cuda:0'), var=tensor([0.3211], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 66: entropy=5.164349090591713e-07
Index 67: mean=tensor([3.0728], device='cuda:0'), var=tensor([0.3208], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 67: entropy=5.164349090591713e-07
Index 68: mean=tensor([3.0860], device='cuda:0'), var=tensor([0.3205], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 68: entropy=5.164349090591713e-07
Index 69: mean=tensor([3.0990], device='cuda:0'), var=tensor([0.3202], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 69: entropy=5.164349090591713e-07
Index 70: mean=tensor([3.1118], device='cuda:0'), var=tensor([0.3199], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 70: entropy=5.164349090591713e-07
Index 71: mean=tensor([3.1245], device='cuda:0'), var=tensor([0.3196], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 71: entropy=5.164349090591713e-07
Index 72: mean=tensor([3.1371], device='cuda:0'), var=tensor([0.3192], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 72: entropy set to 0 due to p0 or p1 being zero or negative
Index 73: mean=tensor([3.1495], device='cuda:0'), var=tensor([0.3189], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 73: entropy set to 0 due to p0 or p1 being zero or negative
Index 74: mean=tensor([3.1617], device='cuda:0'), var=tensor([0.3186], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 74: entropy set to 0 due to p0 or p1 being zero or negative
Index 75: mean=tensor([3.1738], device='cuda:0'), var=tensor([0.3182], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 75: entropy set to 0 due to p0 or p1 being zero or negative
Index 76: mean=tensor([3.1857], device='cuda:0'), var=tensor([0.3179], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 76: entropy set to 0 due to p0 or p1 being zero or negative
Index 77: mean=tensor([3.1974], device='cuda:0'), var=tensor([0.3175], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 77: entropy set to 0 due to p0 or p1 being zero or negative
Index 78: mean=tensor([3.2090], device='cuda:0'), var=tensor([0.3172], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 78: entropy set to 0 due to p0 or p1 being zero or negative
Index 79: mean=tensor([3.2204], device='cuda:0'), var=tensor([0.3168], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 79: entropy set to 0 due to p0 or p1 being zero or negative
Index 80: mean=tensor([3.2317], device='cuda:0'), var=tensor([0.3164], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 80: entropy set to 0 due to p0 or p1 being zero or negative
Index 81: mean=tensor([3.2427], device='cuda:0'), var=tensor([0.3160], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 81: entropy set to 0 due to p0 or p1 being zero or negative
Index 82: mean=tensor([3.2536], device='cuda:0'), var=tensor([0.3156], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 82: entropy set to 0 due to p0 or p1 being zero or negative
Index 83: mean=tensor([3.2643], device='cuda:0'), var=tensor([0.3152], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 83: entropy set to 0 due to p0 or p1 being zero or negative
Index 84: mean=tensor([3.2748], device='cuda:0'), var=tensor([0.3148], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 84: entropy set to 0 due to p0 or p1 being zero or negative
Index 85: mean=tensor([3.2851], device='cuda:0'), var=tensor([0.3144], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 85: entropy set to 0 due to p0 or p1 being zero or negative
Index 86: mean=tensor([3.2952], device='cuda:0'), var=tensor([0.3140], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 86: entropy set to 0 due to p0 or p1 being zero or negative
Index 87: mean=tensor([3.3051], device='cuda:0'), var=tensor([0.3136], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 87: entropy set to 0 due to p0 or p1 being zero or negative
Index 88: mean=tensor([3.3148], device='cuda:0'), var=tensor([0.3131], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 88: entropy set to 0 due to p0 or p1 being zero or negative
Index 89: mean=tensor([3.3244], device='cuda:0'), var=tensor([0.3127], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 89: entropy set to 0 due to p0 or p1 being zero or negative
Index 90: mean=tensor([3.3337], device='cuda:0'), var=tensor([0.3123], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 90: entropy set to 0 due to p0 or p1 being zero or negative
Index 91: mean=tensor([3.3428], device='cuda:0'), var=tensor([0.3118], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 91: entropy set to 0 due to p0 or p1 being zero or negative
Index 92: mean=tensor([3.3517], device='cuda:0'), var=tensor([0.3114], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 92: entropy set to 0 due to p0 or p1 being zero or negative
Index 93: mean=tensor([3.3605], device='cuda:0'), var=tensor([0.3109], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 93: entropy set to 0 due to p0 or p1 being zero or negative
Index 94: mean=tensor([3.3690], device='cuda:0'), var=tensor([0.3105], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 94: entropy set to 0 due to p0 or p1 being zero or negative
Index 95: mean=tensor([3.3773], device='cuda:0'), var=tensor([0.3100], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 95: entropy set to 0 due to p0 or p1 being zero or negative
Index 96: mean=tensor([3.3853], device='cuda:0'), var=tensor([0.3096], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 96: entropy set to 0 due to p0 or p1 being zero or negative
Index 97: mean=tensor([3.3932], device='cuda:0'), var=tensor([0.3091], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 97: entropy set to 0 due to p0 or p1 being zero or negative
Index 98: mean=tensor([3.4009], device='cuda:0'), var=tensor([0.3086], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 98: entropy set to 0 due to p0 or p1 being zero or negative
Index 99: mean=tensor([3.4083], device='cuda:0'), var=tensor([0.3082], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 99: entropy set to 0 due to p0 or p1 being zero or negative
Index 100: mean=tensor([3.4155], device='cuda:0'), var=tensor([0.3077], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 100: entropy set to 0 due to p0 or p1 being zero or negative
Index 101: mean=tensor([3.4226], device='cuda:0'), var=tensor([0.3073], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 101: entropy set to 0 due to p0 or p1 being zero or negative
Index 102: mean=tensor([3.4294], device='cuda:0'), var=tensor([0.3068], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 102: entropy set to 0 due to p0 or p1 being zero or negative
Index 103: mean=tensor([3.4359], device='cuda:0'), var=tensor([0.3063], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 103: entropy set to 0 due to p0 or p1 being zero or negative
Index 104: mean=tensor([3.4423], device='cuda:0'), var=tensor([0.3059], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 104: entropy set to 0 due to p0 or p1 being zero or negative
Index 105: mean=tensor([3.4484], device='cuda:0'), var=tensor([0.3054], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 105: entropy set to 0 due to p0 or p1 being zero or negative
Index 106: mean=tensor([3.4544], device='cuda:0'), var=tensor([0.3050], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 106: entropy set to 0 due to p0 or p1 being zero or negative
Index 107: mean=tensor([3.4601], device='cuda:0'), var=tensor([0.3045], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 107: entropy set to 0 due to p0 or p1 being zero or negative
Index 108: mean=tensor([3.4656], device='cuda:0'), var=tensor([0.3041], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 108: entropy set to 0 due to p0 or p1 being zero or negative
Index 109: mean=tensor([3.4708], device='cuda:0'), var=tensor([0.3037], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 109: entropy set to 0 due to p0 or p1 being zero or negative
Index 110: mean=tensor([3.4759], device='cuda:0'), var=tensor([0.3032], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 110: entropy set to 0 due to p0 or p1 being zero or negative
Index 111: mean=tensor([3.4807], device='cuda:0'), var=tensor([0.3028], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 111: entropy set to 0 due to p0 or p1 being zero or negative
Index 112: mean=tensor([3.4853], device='cuda:0'), var=tensor([0.3024], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 112: entropy set to 0 due to p0 or p1 being zero or negative
Index 113: mean=tensor([3.4897], device='cuda:0'), var=tensor([0.3020], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 113: entropy set to 0 due to p0 or p1 being zero or negative
Index 114: mean=tensor([3.4939], device='cuda:0'), var=tensor([0.3016], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 114: entropy set to 0 due to p0 or p1 being zero or negative
Index 115: mean=tensor([3.4978], device='cuda:0'), var=tensor([0.3012], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 115: entropy set to 0 due to p0 or p1 being zero or negative
Index 116: mean=tensor([3.5016], device='cuda:0'), var=tensor([0.3008], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 116: entropy set to 0 due to p0 or p1 being zero or negative
Index 117: mean=tensor([3.5051], device='cuda:0'), var=tensor([0.3004], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 117: entropy set to 0 due to p0 or p1 being zero or negative
Index 118: mean=tensor([3.5084], device='cuda:0'), var=tensor([0.3001], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 118: entropy set to 0 due to p0 or p1 being zero or negative
Index 119: mean=tensor([3.5115], device='cuda:0'), var=tensor([0.2997], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 119: entropy set to 0 due to p0 or p1 being zero or negative
Index 120: mean=tensor([3.5144], device='cuda:0'), var=tensor([0.2994], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 120: entropy set to 0 due to p0 or p1 being zero or negative
Index 121: mean=tensor([3.5171], device='cuda:0'), var=tensor([0.2990], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 121: entropy set to 0 due to p0 or p1 being zero or negative
Index 122: mean=tensor([3.5196], device='cuda:0'), var=tensor([0.2987], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 122: entropy set to 0 due to p0 or p1 being zero or negative
Index 123: mean=tensor([3.5218], device='cuda:0'), var=tensor([0.2984], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 123: entropy set to 0 due to p0 or p1 being zero or negative
Index 124: mean=tensor([3.5239], device='cuda:0'), var=tensor([0.2981], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 124: entropy set to 0 due to p0 or p1 being zero or negative
Index 125: mean=tensor([3.5258], device='cuda:0'), var=tensor([0.2978], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 125: entropy set to 0 due to p0 or p1 being zero or negative
Index 126: mean=tensor([3.5274], device='cuda:0'), var=tensor([0.2975], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 126: entropy set to 0 due to p0 or p1 being zero or negative
Index 127: mean=tensor([3.5289], device='cuda:0'), var=tensor([0.2973], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 127: entropy set to 0 due to p0 or p1 being zero or negative
Index 128: mean=tensor([3.5301], device='cuda:0'), var=tensor([0.2970], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 128: entropy set to 0 due to p0 or p1 being zero or negative
Index 129: mean=tensor([3.5312], device='cuda:0'), var=tensor([0.2968], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 129: entropy set to 0 due to p0 or p1 being zero or negative
Index 130: mean=tensor([3.5320], device='cuda:0'), var=tensor([0.2966], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 130: entropy set to 0 due to p0 or p1 being zero or negative
Index 131: mean=tensor([3.5327], device='cuda:0'), var=tensor([0.2964], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 131: entropy set to 0 due to p0 or p1 being zero or negative
Index 132: mean=tensor([3.5332], device='cuda:0'), var=tensor([0.2962], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 132: entropy set to 0 due to p0 or p1 being zero or negative
Index 133: mean=tensor([3.5335], device='cuda:0'), var=tensor([0.2960], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 133: entropy set to 0 due to p0 or p1 being zero or negative
Index 134: mean=tensor([3.5336], device='cuda:0'), var=tensor([0.2959], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 134: entropy set to 0 due to p0 or p1 being zero or negative
Index 135: mean=tensor([3.5335], device='cuda:0'), var=tensor([0.2957], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 135: entropy set to 0 due to p0 or p1 being zero or negative
Index 136: mean=tensor([3.5333], device='cuda:0'), var=tensor([0.2956], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 136: entropy set to 0 due to p0 or p1 being zero or negative
Index 137: mean=tensor([3.5328], device='cuda:0'), var=tensor([0.2955], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 137: entropy set to 0 due to p0 or p1 being zero or negative
Index 138: mean=tensor([3.5322], device='cuda:0'), var=tensor([0.2954], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 138: entropy set to 0 due to p0 or p1 being zero or negative
Index 139: mean=tensor([3.5315], device='cuda:0'), var=tensor([0.2954], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 139: entropy set to 0 due to p0 or p1 being zero or negative
Index 140: mean=tensor([3.5305], device='cuda:0'), var=tensor([0.2953], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 140: entropy set to 0 due to p0 or p1 being zero or negative
Index 141: mean=tensor([3.5294], device='cuda:0'), var=tensor([0.2953], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 141: entropy set to 0 due to p0 or p1 being zero or negative
Index 142: mean=tensor([3.5282], device='cuda:0'), var=tensor([0.2953], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 142: entropy set to 0 due to p0 or p1 being zero or negative
Index 143: mean=tensor([3.5267], device='cuda:0'), var=tensor([0.2953], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 143: entropy set to 0 due to p0 or p1 being zero or negative
Index 144: mean=tensor([3.5252], device='cuda:0'), var=tensor([0.2953], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 144: entropy set to 0 due to p0 or p1 being zero or negative
Index 145: mean=tensor([3.5234], device='cuda:0'), var=tensor([0.2953], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 145: entropy set to 0 due to p0 or p1 being zero or negative
Index 146: mean=tensor([3.5215], device='cuda:0'), var=tensor([0.2954], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 146: entropy set to 0 due to p0 or p1 being zero or negative
Index 147: mean=tensor([3.5195], device='cuda:0'), var=tensor([0.2954], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 147: entropy set to 0 due to p0 or p1 being zero or negative
Index 148: mean=tensor([3.5174], device='cuda:0'), var=tensor([0.2955], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 148: entropy set to 0 due to p0 or p1 being zero or negative
Index 149: mean=tensor([3.5151], device='cuda:0'), var=tensor([0.2956], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 149: entropy set to 0 due to p0 or p1 being zero or negative
Index 150: mean=tensor([3.5126], device='cuda:0'), var=tensor([0.2957], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 150: entropy set to 0 due to p0 or p1 being zero or negative
Index 151: mean=tensor([3.5101], device='cuda:0'), var=tensor([0.2959], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 151: entropy set to 0 due to p0 or p1 being zero or negative
Index 152: mean=tensor([3.5074], device='cuda:0'), var=tensor([0.2960], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 152: entropy set to 0 due to p0 or p1 being zero or negative
Index 153: mean=tensor([3.5046], device='cuda:0'), var=tensor([0.2962], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 153: entropy set to 0 due to p0 or p1 being zero or negative
Index 154: mean=tensor([3.5017], device='cuda:0'), var=tensor([0.2964], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 154: entropy set to 0 due to p0 or p1 being zero or negative
Index 155: mean=tensor([3.4986], device='cuda:0'), var=tensor([0.2966], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 155: entropy set to 0 due to p0 or p1 being zero or negative
Index 156: mean=tensor([3.4955], device='cuda:0'), var=tensor([0.2968], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 156: entropy set to 0 due to p0 or p1 being zero or negative
Index 157: mean=tensor([3.4922], device='cuda:0'), var=tensor([0.2971], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 157: entropy set to 0 due to p0 or p1 being zero or negative
Index 158: mean=tensor([3.4889], device='cuda:0'), var=tensor([0.2973], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 158: entropy set to 0 due to p0 or p1 being zero or negative
Index 159: mean=tensor([3.4854], device='cuda:0'), var=tensor([0.2976], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 159: entropy set to 0 due to p0 or p1 being zero or negative
Index 160: mean=tensor([3.4819], device='cuda:0'), var=tensor([0.2979], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 160: entropy set to 0 due to p0 or p1 being zero or negative
Index 161: mean=tensor([3.4782], device='cuda:0'), var=tensor([0.2982], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 161: entropy set to 0 due to p0 or p1 being zero or negative
Index 162: mean=tensor([3.4745], device='cuda:0'), var=tensor([0.2986], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 162: entropy set to 0 due to p0 or p1 being zero or negative
Index 163: mean=tensor([3.4707], device='cuda:0'), var=tensor([0.2989], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 163: entropy set to 0 due to p0 or p1 being zero or negative
Index 164: mean=tensor([3.4668], device='cuda:0'), var=tensor([0.2993], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 164: entropy set to 0 due to p0 or p1 being zero or negative
Index 165: mean=tensor([3.4629], device='cuda:0'), var=tensor([0.2997], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 165: entropy set to 0 due to p0 or p1 being zero or negative
Index 166: mean=tensor([3.4589], device='cuda:0'), var=tensor([0.3001], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 166: entropy set to 0 due to p0 or p1 being zero or negative
Index 167: mean=tensor([3.4548], device='cuda:0'), var=tensor([0.3005], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 167: entropy set to 0 due to p0 or p1 being zero or negative
Index 168: mean=tensor([3.4507], device='cuda:0'), var=tensor([0.3010], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 168: entropy set to 0 due to p0 or p1 being zero or negative
Index 169: mean=tensor([3.4465], device='cuda:0'), var=tensor([0.3014], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 169: entropy set to 0 due to p0 or p1 being zero or negative
Index 170: mean=tensor([3.4422], device='cuda:0'), var=tensor([0.3019], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 170: entropy set to 0 due to p0 or p1 being zero or negative
Index 171: mean=tensor([3.4380], device='cuda:0'), var=tensor([0.3024], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 171: entropy set to 0 due to p0 or p1 being zero or negative
Index 172: mean=tensor([3.4336], device='cuda:0'), var=tensor([0.3029], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 172: entropy set to 0 due to p0 or p1 being zero or negative
Index 173: mean=tensor([3.4293], device='cuda:0'), var=tensor([0.3035], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 173: entropy set to 0 due to p0 or p1 being zero or negative
Index 174: mean=tensor([3.4249], device='cuda:0'), var=tensor([0.3040], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 174: entropy set to 0 due to p0 or p1 being zero or negative
Index 175: mean=tensor([3.4205], device='cuda:0'), var=tensor([0.3046], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 175: entropy set to 0 due to p0 or p1 being zero or negative
Index 176: mean=tensor([3.4161], device='cuda:0'), var=tensor([0.3052], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 176: entropy set to 0 due to p0 or p1 being zero or negative
Index 177: mean=tensor([3.4116], device='cuda:0'), var=tensor([0.3058], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 177: entropy set to 0 due to p0 or p1 being zero or negative
Index 178: mean=tensor([3.4072], device='cuda:0'), var=tensor([0.3064], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 178: entropy set to 0 due to p0 or p1 being zero or negative
Index 179: mean=tensor([3.4027], device='cuda:0'), var=tensor([0.3071], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 179: entropy set to 0 due to p0 or p1 being zero or negative
Index 180: mean=tensor([3.3982], device='cuda:0'), var=tensor([0.3077], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 180: entropy set to 0 due to p0 or p1 being zero or negative
Index 181: mean=tensor([3.3938], device='cuda:0'), var=tensor([0.3084], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 181: entropy set to 0 due to p0 or p1 being zero or negative
Index 182: mean=tensor([3.3893], device='cuda:0'), var=tensor([0.3091], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 182: entropy set to 0 due to p0 or p1 being zero or negative
Index 183: mean=tensor([3.3849], device='cuda:0'), var=tensor([0.3099], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 183: entropy set to 0 due to p0 or p1 being zero or negative
Index 184: mean=tensor([3.3804], device='cuda:0'), var=tensor([0.3106], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 184: entropy set to 0 due to p0 or p1 being zero or negative
Index 185: mean=tensor([3.3760], device='cuda:0'), var=tensor([0.3114], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 185: entropy set to 0 due to p0 or p1 being zero or negative
Index 186: mean=tensor([3.3716], device='cuda:0'), var=tensor([0.3122], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 186: entropy set to 0 due to p0 or p1 being zero or negative
Index 187: mean=tensor([3.3673], device='cuda:0'), var=tensor([0.3130], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 187: entropy set to 0 due to p0 or p1 being zero or negative
Index 188: mean=tensor([3.3630], device='cuda:0'), var=tensor([0.3138], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 188: entropy set to 0 due to p0 or p1 being zero or negative
Index 189: mean=tensor([3.3587], device='cuda:0'), var=tensor([0.3147], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 189: entropy set to 0 due to p0 or p1 being zero or negative
Index 190: mean=tensor([3.3545], device='cuda:0'), var=tensor([0.3156], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 190: entropy set to 0 due to p0 or p1 being zero or negative
Index 191: mean=tensor([3.3503], device='cuda:0'), var=tensor([0.3165], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 191: entropy set to 0 due to p0 or p1 being zero or negative
Index 192: mean=tensor([3.3461], device='cuda:0'), var=tensor([0.3174], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 192: entropy set to 0 due to p0 or p1 being zero or negative
Index 193: mean=tensor([3.3421], device='cuda:0'), var=tensor([0.3184], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 193: entropy set to 0 due to p0 or p1 being zero or negative
Index 194: mean=tensor([3.3380], device='cuda:0'), var=tensor([0.3194], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 194: entropy set to 0 due to p0 or p1 being zero or negative
Index 195: mean=tensor([3.3341], device='cuda:0'), var=tensor([0.3204], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 195: entropy set to 0 due to p0 or p1 being zero or negative
Index 196: mean=tensor([3.3302], device='cuda:0'), var=tensor([0.3214], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 196: entropy set to 0 due to p0 or p1 being zero or negative
Index 197: mean=tensor([3.3264], device='cuda:0'), var=tensor([0.3225], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 197: entropy set to 0 due to p0 or p1 being zero or negative
Index 198: mean=tensor([3.3227], device='cuda:0'), var=tensor([0.3236], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 198: entropy set to 0 due to p0 or p1 being zero or negative
Index 199: mean=tensor([3.3190], device='cuda:0'), var=tensor([0.3247], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 199: entropy set to 0 due to p0 or p1 being zero or negative
Index 200: mean=tensor([3.3155], device='cuda:0'), var=tensor([0.3259], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 200: entropy set to 0 due to p0 or p1 being zero or negative
Index 201: mean=tensor([3.3120], device='cuda:0'), var=tensor([0.3271], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 201: entropy set to 0 due to p0 or p1 being zero or negative
Index 202: mean=tensor([3.3087], device='cuda:0'), var=tensor([0.3283], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 202: entropy set to 0 due to p0 or p1 being zero or negative
Index 203: mean=tensor([3.3054], device='cuda:0'), var=tensor([0.3295], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 203: entropy set to 0 due to p0 or p1 being zero or negative
Index 204: mean=tensor([3.3022], device='cuda:0'), var=tensor([0.3308], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 204: entropy set to 0 due to p0 or p1 being zero or negative
Index 205: mean=tensor([3.2992], device='cuda:0'), var=tensor([0.3321], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 205: entropy set to 0 due to p0 or p1 being zero or negative
Index 206: mean=tensor([3.2963], device='cuda:0'), var=tensor([0.3335], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 206: entropy set to 0 due to p0 or p1 being zero or negative
Index 207: mean=tensor([3.2934], device='cuda:0'), var=tensor([0.3349], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 207: entropy set to 0 due to p0 or p1 being zero or negative
Index 208: mean=tensor([3.2907], device='cuda:0'), var=tensor([0.3363], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 208: entropy set to 0 due to p0 or p1 being zero or negative
Index 209: mean=tensor([3.2882], device='cuda:0'), var=tensor([0.3377], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 209: entropy set to 0 due to p0 or p1 being zero or negative
Index 210: mean=tensor([3.2857], device='cuda:0'), var=tensor([0.3392], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 210: entropy set to 0 due to p0 or p1 being zero or negative
Index 211: mean=tensor([3.2834], device='cuda:0'), var=tensor([0.3407], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 211: entropy set to 0 due to p0 or p1 being zero or negative
Index 212: mean=tensor([3.2812], device='cuda:0'), var=tensor([0.3423], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 212: entropy set to 0 due to p0 or p1 being zero or negative
Index 213: mean=tensor([3.2792], device='cuda:0'), var=tensor([0.3439], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 213: entropy set to 0 due to p0 or p1 being zero or negative
Index 214: mean=tensor([3.2773], device='cuda:0'), var=tensor([0.3456], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 214: entropy set to 0 due to p0 or p1 being zero or negative
Index 215: mean=tensor([3.2756], device='cuda:0'), var=tensor([0.3473], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 215: entropy set to 0 due to p0 or p1 being zero or negative
Index 216: mean=tensor([3.2740], device='cuda:0'), var=tensor([0.3490], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 216: entropy=5.164349090591713e-07
Index 217: mean=tensor([3.2725], device='cuda:0'), var=tensor([0.3508], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 217: entropy=5.164349090591713e-07
Index 218: mean=tensor([3.2713], device='cuda:0'), var=tensor([0.3526], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 218: entropy=5.164349090591713e-07
Index 219: mean=tensor([3.2701], device='cuda:0'), var=tensor([0.3544], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 219: entropy=5.164349090591713e-07
Index 220: mean=tensor([3.2692], device='cuda:0'), var=tensor([0.3563], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 220: entropy=5.164349090591713e-07
Index 221: mean=tensor([3.2684], device='cuda:0'), var=tensor([0.3583], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 221: entropy=5.164349090591713e-07
Index 222: mean=tensor([3.2678], device='cuda:0'), var=tensor([0.3603], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 222: entropy=5.164349090591713e-07
Index 223: mean=tensor([3.2673], device='cuda:0'), var=tensor([0.3623], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 223: entropy=5.164349090591713e-07
Index 224: mean=tensor([3.2671], device='cuda:0'), var=tensor([0.3644], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 224: entropy=5.164349090591713e-07
Index 225: mean=tensor([3.2670], device='cuda:0'), var=tensor([0.3666], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 225: entropy=5.164349090591713e-07
Index 226: mean=tensor([3.2671], device='cuda:0'), var=tensor([0.3688], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 226: entropy=5.164349090591713e-07
Index 227: mean=tensor([3.2674], device='cuda:0'), var=tensor([0.3710], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 227: entropy=5.164349090591713e-07
Index 228: mean=tensor([3.2678], device='cuda:0'), var=tensor([0.3733], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 228: entropy=5.164349090591713e-07
Index 229: mean=tensor([3.2685], device='cuda:0'), var=tensor([0.3756], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-08], device='cuda:0')
Index 229: entropy=1.0511596428841585e-06
Index 230: mean=tensor([3.2693], device='cuda:0'), var=tensor([0.3780], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-08], device='cuda:0')
Index 230: entropy=1.0511596428841585e-06
Index 231: mean=tensor([3.2704], device='cuda:0'), var=tensor([0.3805], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-08], device='cuda:0')
Index 231: entropy=1.0511596428841585e-06
Index 232: mean=tensor([3.2716], device='cuda:0'), var=tensor([0.3829], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-08], device='cuda:0')
Index 232: entropy=1.0511596428841585e-06
Index 233: mean=tensor([3.2731], device='cuda:0'), var=tensor([0.3855], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-08], device='cuda:0')
Index 233: entropy=1.0511596428841585e-06
Index 234: mean=tensor([3.2747], device='cuda:0'), var=tensor([0.3881], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-08], device='cuda:0')
Index 234: entropy=1.0511596428841585e-06
Index 235: mean=tensor([3.2766], device='cuda:0'), var=tensor([0.3907], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([8.9407e-08], device='cuda:0')
Index 235: entropy=1.5702904647696414e-06
Index 236: mean=tensor([3.2787], device='cuda:0'), var=tensor([0.3934], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([8.9407e-08], device='cuda:0')
Index 236: entropy=1.5702904647696414e-06
Index 237: mean=tensor([3.2809], device='cuda:0'), var=tensor([0.3962], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([8.9407e-08], device='cuda:0')
Index 237: entropy=1.5702904647696414e-06
Index 238: mean=tensor([3.2834], device='cuda:0'), var=tensor([0.3990], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([8.9407e-08], device='cuda:0')
Index 238: entropy=1.5702904647696414e-06
Index 239: mean=tensor([3.2861], device='cuda:0'), var=tensor([0.4018], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.1921e-07], device='cuda:0')
Index 239: entropy=2.0196896457491675e-06
Index 240: mean=tensor([3.2890], device='cuda:0'), var=tensor([0.4047], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.1921e-07], device='cuda:0')
Index 240: entropy=2.0196896457491675e-06
Index 241: mean=tensor([3.2922], device='cuda:0'), var=tensor([0.4077], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.1921e-07], device='cuda:0')
Index 241: entropy=2.0196896457491675e-06
Index 242: mean=tensor([3.2955], device='cuda:0'), var=tensor([0.4107], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.4901e-07], device='cuda:0')
Index 242: entropy=2.4615587790322024e-06
Index 243: mean=tensor([3.2991], device='cuda:0'), var=tensor([0.4137], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.4901e-07], device='cuda:0')
Index 243: entropy=2.4615587790322024e-06
Index 244: mean=tensor([3.3029], device='cuda:0'), var=tensor([0.4168], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.4901e-07], device='cuda:0')
Index 244: entropy=2.4615587790322024e-06
Index 245: mean=tensor([3.3069], device='cuda:0'), var=tensor([0.4200], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.7881e-07], device='cuda:0')
Index 245: entropy=2.9570319384220056e-06
Index 246: mean=tensor([3.3112], device='cuda:0'), var=tensor([0.4232], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.7881e-07], device='cuda:0')
Index 246: entropy=2.9570319384220056e-06
Index 247: mean=tensor([3.3156], device='cuda:0'), var=tensor([0.4264], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.7881e-07], device='cuda:0')
Index 247: entropy=2.9570319384220056e-06
Index 248: mean=tensor([3.3203], device='cuda:0'), var=tensor([0.4297], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.0862e-07], device='cuda:0')
Index 248: entropy=3.4475144730095053e-06
Index 249: mean=tensor([3.3253], device='cuda:0'), var=tensor([0.4331], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.0862e-07], device='cuda:0')
Index 249: entropy=3.4475144730095053e-06
Index 250: mean=tensor([3.3304], device='cuda:0'), var=tensor([0.4365], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.3842e-07], device='cuda:0')
Index 250: entropy=3.874120011460036e-06
Index 251: mean=tensor([3.3358], device='cuda:0'), var=tensor([0.4399], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.3842e-07], device='cuda:0')
Index 251: entropy=3.874120011460036e-06
Index 252: mean=tensor([3.3414], device='cuda:0'), var=tensor([0.4434], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.6822e-07], device='cuda:0')
Index 252: entropy=4.2969913920387626e-06
Index 253: mean=tensor([3.3473], device='cuda:0'), var=tensor([0.4469], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.6822e-07], device='cuda:0')
Index 253: entropy=4.2969913920387626e-06
Index 254: mean=tensor([3.3534], device='cuda:0'), var=tensor([0.4505], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.9802e-07], device='cuda:0')
Index 254: entropy=4.776148216478759e-06
Index 255: mean=tensor([3.3597], device='cuda:0'), var=tensor([0.4541], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.9802e-07], device='cuda:0')
Index 255: entropy=4.776148216478759e-06
Index 256: mean=tensor([3.3662], device='cuda:0'), var=tensor([0.4577], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.2783e-07], device='cuda:0')
Index 256: entropy=5.252320534054888e-06
Index 257: mean=tensor([3.3730], device='cuda:0'), var=tensor([0.4614], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.2783e-07], device='cuda:0')
Index 257: entropy=5.252320534054888e-06
Index 258: mean=tensor([3.3800], device='cuda:0'), var=tensor([0.4651], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.5763e-07], device='cuda:0')
Index 258: entropy=5.666174729412887e-06
Index 259: mean=tensor([3.3873], device='cuda:0'), var=tensor([0.4689], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.8743e-07], device='cuda:0')
Index 259: entropy=6.07754282100359e-06
Index 260: mean=tensor([3.3948], device='cuda:0'), var=tensor([0.4727], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.8743e-07], device='cuda:0')
Index 260: entropy=6.07754282100359e-06
Index 261: mean=tensor([3.4025], device='cuda:0'), var=tensor([0.4765], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.1723e-07], device='cuda:0')
Index 261: entropy=6.546220447489759e-06
Index 262: mean=tensor([3.4105], device='cuda:0'), var=tensor([0.4803], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.1723e-07], device='cuda:0')
Index 262: entropy=6.546220447489759e-06
Index 263: mean=tensor([3.4187], device='cuda:0'), var=tensor([0.4842], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.4703e-07], device='cuda:0')
Index 263: entropy=7.012767582637025e-06
Index 264: mean=tensor([3.4271], device='cuda:0'), var=tensor([0.4881], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.7684e-07], device='cuda:0')
Index 264: entropy=7.417722372338176e-06
Index 265: mean=tensor([3.4358], device='cuda:0'), var=tensor([0.4920], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.7684e-07], device='cuda:0')
Index 265: entropy=7.417722372338176e-06
Index 266: mean=tensor([3.4447], device='cuda:0'), var=tensor([0.4959], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.0664e-07], device='cuda:0')
Index 266: entropy=7.820812243153341e-06
Index 267: mean=tensor([3.4539], device='cuda:0'), var=tensor([0.4999], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.0664e-07], device='cuda:0')
Index 267: entropy=7.820812243153341e-06
Index 268: mean=tensor([3.4632], device='cuda:0'), var=tensor([0.5039], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.3644e-07], device='cuda:0')
Index 268: entropy=8.281753252958879e-06
Index 269: mean=tensor([3.4728], device='cuda:0'), var=tensor([0.5079], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.3644e-07], device='cuda:0')
Index 269: entropy=8.281753252958879e-06
Index 270: mean=tensor([3.4827], device='cuda:0'), var=tensor([0.5119], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.6624e-07], device='cuda:0')
Index 270: entropy=8.741038072912488e-06
Index 271: mean=tensor([3.4928], device='cuda:0'), var=tensor([0.5159], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.6624e-07], device='cuda:0')
Index 271: entropy=8.741038072912488e-06
Index 272: mean=tensor([3.5031], device='cuda:0'), var=tensor([0.5199], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-07], device='cuda:0')
Index 272: entropy=9.139149369730148e-06
Index 273: mean=tensor([3.5136], device='cuda:0'), var=tensor([0.5239], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-07], device='cuda:0')
Index 273: entropy=9.139149369730148e-06
Index 274: mean=tensor([3.5244], device='cuda:0'), var=tensor([0.5279], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.2585e-07], device='cuda:0')
Index 274: entropy=9.5357681857422e-06
Index 275: mean=tensor([3.5354], device='cuda:0'), var=tensor([0.5320], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.2585e-07], device='cuda:0')
Index 275: entropy=9.5357681857422e-06
Index 276: mean=tensor([3.5466], device='cuda:0'), var=tensor([0.5360], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.2585e-07], device='cuda:0')
Index 276: entropy=9.5357681857422e-06
Index 277: mean=tensor([3.5581], device='cuda:0'), var=tensor([0.5400], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.5565e-07], device='cuda:0')
Index 277: entropy=9.990573744289577e-06
Index 278: mean=tensor([3.5697], device='cuda:0'), var=tensor([0.5440], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.5565e-07], device='cuda:0')
Index 278: entropy=9.990573744289577e-06
Index 279: mean=tensor([3.5816], device='cuda:0'), var=tensor([0.5480], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.5565e-07], device='cuda:0')
Index 279: entropy=9.990573744289577e-06
Index 280: mean=tensor([3.5938], device='cuda:0'), var=tensor([0.5520], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.5565e-07], device='cuda:0')
Index 280: entropy=9.990573744289577e-06
Index 281: mean=tensor([3.6061], device='cuda:0'), var=tensor([0.5559], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.5565e-07], device='cuda:0')
Index 281: entropy=9.990573744289577e-06
Index 282: mean=tensor([3.6187], device='cuda:0'), var=tensor([0.5599], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.5565e-07], device='cuda:0')
Index 282: entropy=9.990573744289577e-06
Index 283: mean=tensor([3.6315], device='cuda:0'), var=tensor([0.5638], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.5565e-07], device='cuda:0')
Index 283: entropy=9.990573744289577e-06
Index 284: mean=tensor([3.6445], device='cuda:0'), var=tensor([0.5676], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.5565e-07], device='cuda:0')
Index 284: entropy=9.990573744289577e-06
Index 285: mean=tensor([3.6577], device='cuda:0'), var=tensor([0.5715], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.5565e-07], device='cuda:0')
Index 285: entropy=9.990573744289577e-06
Index 286: mean=tensor([3.6711], device='cuda:0'), var=tensor([0.5753], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.5565e-07], device='cuda:0')
Index 286: entropy=9.990573744289577e-06
Index 287: mean=tensor([3.6848], device='cuda:0'), var=tensor([0.5791], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.5565e-07], device='cuda:0')
Index 287: entropy=9.990573744289577e-06
Index 288: mean=tensor([3.6986], device='cuda:0'), var=tensor([0.5829], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.2585e-07], device='cuda:0')
Index 288: entropy=9.5357681857422e-06
Index 289: mean=tensor([3.7127], device='cuda:0'), var=tensor([0.5866], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.2585e-07], device='cuda:0')
Index 289: entropy=9.5357681857422e-06
Index 290: mean=tensor([3.7269], device='cuda:0'), var=tensor([0.5902], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.2585e-07], device='cuda:0')
Index 290: entropy=9.5357681857422e-06
Index 291: mean=tensor([3.7414], device='cuda:0'), var=tensor([0.5938], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-07], device='cuda:0')
Index 291: entropy=9.139149369730148e-06
Index 292: mean=tensor([3.7561], device='cuda:0'), var=tensor([0.5974], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-07], device='cuda:0')
Index 292: entropy=9.139149369730148e-06
Index 293: mean=tensor([3.7709], device='cuda:0'), var=tensor([0.6009], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.6624e-07], device='cuda:0')
Index 293: entropy=8.741038072912488e-06
Index 294: mean=tensor([3.7860], device='cuda:0'), var=tensor([0.6043], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.6624e-07], device='cuda:0')
Index 294: entropy=8.741038072912488e-06
Index 295: mean=tensor([3.8013], device='cuda:0'), var=tensor([0.6077], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.3644e-07], device='cuda:0')
Index 295: entropy=8.281753252958879e-06
Index 296: mean=tensor([3.8167], device='cuda:0'), var=tensor([0.6110], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.3644e-07], device='cuda:0')
Index 296: entropy=8.281753252958879e-06
Index 297: mean=tensor([3.8323], device='cuda:0'), var=tensor([0.6143], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.0664e-07], device='cuda:0')
Index 297: entropy=7.820812243153341e-06
Index 298: mean=tensor([3.8482], device='cuda:0'), var=tensor([0.6175], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.7684e-07], device='cuda:0')
Index 298: entropy=7.417722372338176e-06
Index 299: mean=tensor([3.8642], device='cuda:0'), var=tensor([0.6206], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.7684e-07], device='cuda:0')
Index 299: entropy=7.417722372338176e-06
Index 300: mean=tensor([3.8804], device='cuda:0'), var=tensor([0.6236], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.4703e-07], device='cuda:0')
Index 300: entropy=7.012767582637025e-06
Index 301: mean=tensor([3.8967], device='cuda:0'), var=tensor([0.6266], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.1723e-07], device='cuda:0')
Index 301: entropy=6.546220447489759e-06
Index 302: mean=tensor([3.9133], device='cuda:0'), var=tensor([0.6295], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.1723e-07], device='cuda:0')
Index 302: entropy=6.546220447489759e-06
Index 303: mean=tensor([3.9300], device='cuda:0'), var=tensor([0.6323], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.8743e-07], device='cuda:0')
Index 303: entropy=6.07754282100359e-06
Index 304: mean=tensor([3.9469], device='cuda:0'), var=tensor([0.6350], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.5763e-07], device='cuda:0')
Index 304: entropy=5.666174729412887e-06
Index 305: mean=tensor([3.9639], device='cuda:0'), var=tensor([0.6376], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.5763e-07], device='cuda:0')
Index 305: entropy=5.666174729412887e-06
Index 306: mean=tensor([3.9811], device='cuda:0'), var=tensor([0.6402], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.2783e-07], device='cuda:0')
Index 306: entropy=5.252320534054888e-06
Index 307: mean=tensor([3.9985], device='cuda:0'), var=tensor([0.6426], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.9802e-07], device='cuda:0')
Index 307: entropy=4.776148216478759e-06
Index 308: mean=tensor([4.0160], device='cuda:0'), var=tensor([0.6450], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.9802e-07], device='cuda:0')
Index 308: entropy=4.776148216478759e-06
Index 309: mean=tensor([4.0337], device='cuda:0'), var=tensor([0.6472], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.6822e-07], device='cuda:0')
Index 309: entropy=4.2969913920387626e-06
Index 310: mean=tensor([4.0515], device='cuda:0'), var=tensor([0.6494], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.3842e-07], device='cuda:0')
Index 310: entropy=3.874120011460036e-06
Index 311: mean=tensor([4.0695], device='cuda:0'), var=tensor([0.6514], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.3842e-07], device='cuda:0')
Index 311: entropy=3.874120011460036e-06
Index 312: mean=tensor([4.0876], device='cuda:0'), var=tensor([0.6534], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.0862e-07], device='cuda:0')
Index 312: entropy=3.4475144730095053e-06
Index 313: mean=tensor([4.1059], device='cuda:0'), var=tensor([0.6552], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.0862e-07], device='cuda:0')
Index 313: entropy=3.4475144730095053e-06
Index 314: mean=tensor([4.1243], device='cuda:0'), var=tensor([0.6569], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.7881e-07], device='cuda:0')
Index 314: entropy=2.9570319384220056e-06
Index 315: mean=tensor([4.1429], device='cuda:0'), var=tensor([0.6586], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.7881e-07], device='cuda:0')
Index 315: entropy=2.9570319384220056e-06
Index 316: mean=tensor([4.1615], device='cuda:0'), var=tensor([0.6601], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.4901e-07], device='cuda:0')
Index 316: entropy=2.4615587790322024e-06
Index 317: mean=tensor([4.1803], device='cuda:0'), var=tensor([0.6615], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.4901e-07], device='cuda:0')
Index 317: entropy=2.4615587790322024e-06
Index 318: mean=tensor([4.1992], device='cuda:0'), var=tensor([0.6628], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.1921e-07], device='cuda:0')
Index 318: entropy=2.0196896457491675e-06
Index 319: mean=tensor([4.2183], device='cuda:0'), var=tensor([0.6640], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.1921e-07], device='cuda:0')
Index 319: entropy=2.0196896457491675e-06
Index 320: mean=tensor([4.2374], device='cuda:0'), var=tensor([0.6650], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([8.9407e-08], device='cuda:0')
Index 320: entropy=1.5702904647696414e-06
Index 321: mean=tensor([4.2567], device='cuda:0'), var=tensor([0.6660], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([8.9407e-08], device='cuda:0')
Index 321: entropy=1.5702904647696414e-06
Index 322: mean=tensor([4.2761], device='cuda:0'), var=tensor([0.6668], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([8.9407e-08], device='cuda:0')
Index 322: entropy=1.5702904647696414e-06
Index 323: mean=tensor([4.2955], device='cuda:0'), var=tensor([0.6675], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-08], device='cuda:0')
Index 323: entropy=1.0511596428841585e-06
Index 324: mean=tensor([4.3151], device='cuda:0'), var=tensor([0.6681], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-08], device='cuda:0')
Index 324: entropy=1.0511596428841585e-06
Index 325: mean=tensor([4.3348], device='cuda:0'), var=tensor([0.6686], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-08], device='cuda:0')
Index 325: entropy=1.0511596428841585e-06
Index 326: mean=tensor([4.3546], device='cuda:0'), var=tensor([0.6689], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-08], device='cuda:0')
Index 326: entropy=1.0511596428841585e-06
Index 327: mean=tensor([4.3744], device='cuda:0'), var=tensor([0.6692], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 327: entropy=5.164349090591713e-07
Index 328: mean=tensor([4.3944], device='cuda:0'), var=tensor([0.6693], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 328: entropy=5.164349090591713e-07
Index 329: mean=tensor([4.4144], device='cuda:0'), var=tensor([0.6693], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 329: entropy=5.164349090591713e-07
Index 330: mean=tensor([4.4345], device='cuda:0'), var=tensor([0.6692], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 330: entropy=5.164349090591713e-07
Index 331: mean=tensor([4.4547], device='cuda:0'), var=tensor([0.6689], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 331: entropy=5.164349090591713e-07
Index 332: mean=tensor([4.4749], device='cuda:0'), var=tensor([0.6685], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 332: entropy=5.164349090591713e-07
Index 333: mean=tensor([4.4952], device='cuda:0'), var=tensor([0.6681], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 333: entropy=5.164349090591713e-07
Index 334: mean=tensor([4.5156], device='cuda:0'), var=tensor([0.6675], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 334: entropy=5.164349090591713e-07
Index 335: mean=tensor([4.5361], device='cuda:0'), var=tensor([0.6667], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 335: entropy set to 0 due to p0 or p1 being zero or negative
Index 336: mean=tensor([4.5566], device='cuda:0'), var=tensor([0.6659], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 336: entropy set to 0 due to p0 or p1 being zero or negative
Index 337: mean=tensor([4.5771], device='cuda:0'), var=tensor([0.6649], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 337: entropy set to 0 due to p0 or p1 being zero or negative
Index 338: mean=tensor([4.5977], device='cuda:0'), var=tensor([0.6639], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 338: entropy set to 0 due to p0 or p1 being zero or negative
Index 339: mean=tensor([4.6183], device='cuda:0'), var=tensor([0.6627], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 339: entropy set to 0 due to p0 or p1 being zero or negative
Index 340: mean=tensor([4.6390], device='cuda:0'), var=tensor([0.6614], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 340: entropy set to 0 due to p0 or p1 being zero or negative
Index 341: mean=tensor([4.6597], device='cuda:0'), var=tensor([0.6600], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 341: entropy set to 0 due to p0 or p1 being zero or negative
Index 342: mean=tensor([4.6805], device='cuda:0'), var=tensor([0.6585], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 342: entropy set to 0 due to p0 or p1 being zero or negative
Index 343: mean=tensor([4.7012], device='cuda:0'), var=tensor([0.6568], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 343: entropy set to 0 due to p0 or p1 being zero or negative
Index 344: mean=tensor([4.7220], device='cuda:0'), var=tensor([0.6551], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 344: entropy set to 0 due to p0 or p1 being zero or negative
Index 345: mean=tensor([4.7428], device='cuda:0'), var=tensor([0.6533], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 345: entropy set to 0 due to p0 or p1 being zero or negative
Index 346: mean=tensor([4.7637], device='cuda:0'), var=tensor([0.6513], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 346: entropy set to 0 due to p0 or p1 being zero or negative
Index 347: mean=tensor([4.7845], device='cuda:0'), var=tensor([0.6493], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 347: entropy set to 0 due to p0 or p1 being zero or negative
Index 348: mean=tensor([4.8053], device='cuda:0'), var=tensor([0.6471], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 348: entropy set to 0 due to p0 or p1 being zero or negative
Index 349: mean=tensor([4.8262], device='cuda:0'), var=tensor([0.6449], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 349: entropy set to 0 due to p0 or p1 being zero or negative
Index 350: mean=tensor([4.8470], device='cuda:0'), var=tensor([0.6425], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 350: entropy set to 0 due to p0 or p1 being zero or negative
Index 351: mean=tensor([4.8679], device='cuda:0'), var=tensor([0.6401], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 351: entropy set to 0 due to p0 or p1 being zero or negative
Index 352: mean=tensor([4.8887], device='cuda:0'), var=tensor([0.6376], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 352: entropy set to 0 due to p0 or p1 being zero or negative
Index 353: mean=tensor([4.9096], device='cuda:0'), var=tensor([0.6350], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 353: entropy set to 0 due to p0 or p1 being zero or negative
Index 354: mean=tensor([4.9304], device='cuda:0'), var=tensor([0.6323], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 354: entropy set to 0 due to p0 or p1 being zero or negative
Index 355: mean=tensor([4.9512], device='cuda:0'), var=tensor([0.6295], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 355: entropy set to 0 due to p0 or p1 being zero or negative
Index 356: mean=tensor([4.9719], device='cuda:0'), var=tensor([0.6267], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 356: entropy set to 0 due to p0 or p1 being zero or negative
Index 357: mean=tensor([4.9927], device='cuda:0'), var=tensor([0.6237], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 357: entropy set to 0 due to p0 or p1 being zero or negative
Index 358: mean=tensor([5.0134], device='cuda:0'), var=tensor([0.6207], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 358: entropy set to 0 due to p0 or p1 being zero or negative
Index 359: mean=tensor([5.0341], device='cuda:0'), var=tensor([0.6177], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 359: entropy set to 0 due to p0 or p1 being zero or negative
Index 360: mean=tensor([5.0547], device='cuda:0'), var=tensor([0.6145], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 360: entropy set to 0 due to p0 or p1 being zero or negative
Index 361: mean=tensor([5.0753], device='cuda:0'), var=tensor([0.6113], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 361: entropy set to 0 due to p0 or p1 being zero or negative
Index 362: mean=tensor([5.0959], device='cuda:0'), var=tensor([0.6081], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 362: entropy set to 0 due to p0 or p1 being zero or negative
Index 363: mean=tensor([5.1164], device='cuda:0'), var=tensor([0.6047], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 363: entropy set to 0 due to p0 or p1 being zero or negative
Index 364: mean=tensor([5.1368], device='cuda:0'), var=tensor([0.6013], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 364: entropy set to 0 due to p0 or p1 being zero or negative
Index 365: mean=tensor([5.1572], device='cuda:0'), var=tensor([0.5979], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 365: entropy set to 0 due to p0 or p1 being zero or negative
Index 366: mean=tensor([5.1776], device='cuda:0'), var=tensor([0.5944], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 366: entropy set to 0 due to p0 or p1 being zero or negative
Index 367: mean=tensor([5.1978], device='cuda:0'), var=tensor([0.5909], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 367: entropy set to 0 due to p0 or p1 being zero or negative
Index 368: mean=tensor([5.2181], device='cuda:0'), var=tensor([0.5873], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 368: entropy set to 0 due to p0 or p1 being zero or negative
Index 369: mean=tensor([5.2382], device='cuda:0'), var=tensor([0.5837], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 369: entropy set to 0 due to p0 or p1 being zero or negative
Index 370: mean=tensor([5.2583], device='cuda:0'), var=tensor([0.5800], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 370: entropy set to 0 due to p0 or p1 being zero or negative
Index 371: mean=tensor([5.2783], device='cuda:0'), var=tensor([0.5764], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 371: entropy set to 0 due to p0 or p1 being zero or negative
Index 372: mean=tensor([5.2982], device='cuda:0'), var=tensor([0.5726], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 372: entropy set to 0 due to p0 or p1 being zero or negative
Index 373: mean=tensor([5.3180], device='cuda:0'), var=tensor([0.5689], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 373: entropy set to 0 due to p0 or p1 being zero or negative
Index 374: mean=tensor([5.3378], device='cuda:0'), var=tensor([0.5651], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 374: entropy set to 0 due to p0 or p1 being zero or negative
Index 375: mean=tensor([5.3575], device='cuda:0'), var=tensor([0.5613], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 375: entropy set to 0 due to p0 or p1 being zero or negative
Index 376: mean=tensor([5.3770], device='cuda:0'), var=tensor([0.5575], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 376: entropy set to 0 due to p0 or p1 being zero or negative
Index 377: mean=tensor([5.3965], device='cuda:0'), var=tensor([0.5537], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 377: entropy set to 0 due to p0 or p1 being zero or negative
Index 378: mean=tensor([5.4159], device='cuda:0'), var=tensor([0.5499], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 378: entropy set to 0 due to p0 or p1 being zero or negative
Index 379: mean=tensor([5.4352], device='cuda:0'), var=tensor([0.5460], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 379: entropy set to 0 due to p0 or p1 being zero or negative
Index 380: mean=tensor([5.4544], device='cuda:0'), var=tensor([0.5422], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 380: entropy set to 0 due to p0 or p1 being zero or negative
Index 381: mean=tensor([5.4735], device='cuda:0'), var=tensor([0.5383], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 381: entropy set to 0 due to p0 or p1 being zero or negative
Index 382: mean=tensor([5.4924], device='cuda:0'), var=tensor([0.5345], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 382: entropy set to 0 due to p0 or p1 being zero or negative
Index 383: mean=tensor([5.5113], device='cuda:0'), var=tensor([0.5306], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 383: entropy set to 0 due to p0 or p1 being zero or negative
Index 384: mean=tensor([5.5301], device='cuda:0'), var=tensor([0.5268], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 384: entropy set to 0 due to p0 or p1 being zero or negative
Index 385: mean=tensor([5.5487], device='cuda:0'), var=tensor([0.5230], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 385: entropy set to 0 due to p0 or p1 being zero or negative
Index 386: mean=tensor([5.5672], device='cuda:0'), var=tensor([0.5192], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 386: entropy set to 0 due to p0 or p1 being zero or negative
Index 387: mean=tensor([5.5856], device='cuda:0'), var=tensor([0.5153], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 387: entropy set to 0 due to p0 or p1 being zero or negative
Index 388: mean=tensor([5.6039], device='cuda:0'), var=tensor([0.5116], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 388: entropy set to 0 due to p0 or p1 being zero or negative
Index 389: mean=tensor([5.6221], device='cuda:0'), var=tensor([0.5078], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 389: entropy set to 0 due to p0 or p1 being zero or negative
Index 390: mean=tensor([5.6401], device='cuda:0'), var=tensor([0.5040], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 390: entropy set to 0 due to p0 or p1 being zero or negative
Index 391: mean=tensor([5.6580], device='cuda:0'), var=tensor([0.5003], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 391: entropy set to 0 due to p0 or p1 being zero or negative
Index 392: mean=tensor([5.6758], device='cuda:0'), var=tensor([0.4966], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 392: entropy set to 0 due to p0 or p1 being zero or negative
Index 393: mean=tensor([5.6934], device='cuda:0'), var=tensor([0.4930], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 393: entropy set to 0 due to p0 or p1 being zero or negative
Index 394: mean=tensor([5.7109], device='cuda:0'), var=tensor([0.4893], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 394: entropy set to 0 due to p0 or p1 being zero or negative
Index 395: mean=tensor([5.7283], device='cuda:0'), var=tensor([0.4857], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 395: entropy set to 0 due to p0 or p1 being zero or negative
Index 396: mean=tensor([5.7455], device='cuda:0'), var=tensor([0.4821], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 396: entropy set to 0 due to p0 or p1 being zero or negative
Index 397: mean=tensor([5.7626], device='cuda:0'), var=tensor([0.4786], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 397: entropy set to 0 due to p0 or p1 being zero or negative
Index 398: mean=tensor([5.7795], device='cuda:0'), var=tensor([0.4751], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 398: entropy set to 0 due to p0 or p1 being zero or negative
Index 399: mean=tensor([5.7963], device='cuda:0'), var=tensor([0.4716], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 399: entropy set to 0 due to p0 or p1 being zero or negative
Index 400: mean=tensor([5.8130], device='cuda:0'), var=tensor([0.4682], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 400: entropy set to 0 due to p0 or p1 being zero or negative
Index 401: mean=tensor([5.8295], device='cuda:0'), var=tensor([0.4649], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 401: entropy set to 0 due to p0 or p1 being zero or negative
Index 402: mean=tensor([5.8459], device='cuda:0'), var=tensor([0.4615], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 402: entropy set to 0 due to p0 or p1 being zero or negative
Index 403: mean=tensor([5.8621], device='cuda:0'), var=tensor([0.4583], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 403: entropy set to 0 due to p0 or p1 being zero or negative
Index 404: mean=tensor([5.8782], device='cuda:0'), var=tensor([0.4550], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 404: entropy set to 0 due to p0 or p1 being zero or negative
Index 405: mean=tensor([5.8941], device='cuda:0'), var=tensor([0.4518], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 405: entropy set to 0 due to p0 or p1 being zero or negative
Index 406: mean=tensor([5.9099], device='cuda:0'), var=tensor([0.4487], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 406: entropy set to 0 due to p0 or p1 being zero or negative
Index 407: mean=tensor([5.9255], device='cuda:0'), var=tensor([0.4456], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 407: entropy set to 0 due to p0 or p1 being zero or negative
Index 408: mean=tensor([5.9409], device='cuda:0'), var=tensor([0.4426], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 408: entropy set to 0 due to p0 or p1 being zero or negative
Index 409: mean=tensor([5.9562], device='cuda:0'), var=tensor([0.4396], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 409: entropy set to 0 due to p0 or p1 being zero or negative
Index 410: mean=tensor([5.9714], device='cuda:0'), var=tensor([0.4366], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 410: entropy set to 0 due to p0 or p1 being zero or negative
Index 411: mean=tensor([5.9864], device='cuda:0'), var=tensor([0.4338], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 411: entropy set to 0 due to p0 or p1 being zero or negative
Index 412: mean=tensor([6.0012], device='cuda:0'), var=tensor([0.4309], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 412: entropy set to 0 due to p0 or p1 being zero or negative
Index 413: mean=tensor([6.0159], device='cuda:0'), var=tensor([0.4282], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 413: entropy set to 0 due to p0 or p1 being zero or negative
Index 414: mean=tensor([6.0304], device='cuda:0'), var=tensor([0.4254], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 414: entropy set to 0 due to p0 or p1 being zero or negative
Index 415: mean=tensor([6.0447], device='cuda:0'), var=tensor([0.4228], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 415: entropy set to 0 due to p0 or p1 being zero or negative
Index 416: mean=tensor([6.0589], device='cuda:0'), var=tensor([0.4202], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 416: entropy set to 0 due to p0 or p1 being zero or negative
Index 417: mean=tensor([6.0730], device='cuda:0'), var=tensor([0.4176], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 417: entropy set to 0 due to p0 or p1 being zero or negative
Index 418: mean=tensor([6.0868], device='cuda:0'), var=tensor([0.4151], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 418: entropy set to 0 due to p0 or p1 being zero or negative
Index 419: mean=tensor([6.1006], device='cuda:0'), var=tensor([0.4127], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 419: entropy set to 0 due to p0 or p1 being zero or negative
Index 420: mean=tensor([6.1141], device='cuda:0'), var=tensor([0.4103], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 420: entropy set to 0 due to p0 or p1 being zero or negative
Index 421: mean=tensor([6.1275], device='cuda:0'), var=tensor([0.4079], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 421: entropy set to 0 due to p0 or p1 being zero or negative
Index 422: mean=tensor([6.1407], device='cuda:0'), var=tensor([0.4056], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 422: entropy set to 0 due to p0 or p1 being zero or negative
Index 423: mean=tensor([6.1538], device='cuda:0'), var=tensor([0.4034], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 423: entropy set to 0 due to p0 or p1 being zero or negative
Index 424: mean=tensor([6.1667], device='cuda:0'), var=tensor([0.4012], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 424: entropy set to 0 due to p0 or p1 being zero or negative
Index 425: mean=tensor([6.1794], device='cuda:0'), var=tensor([0.3991], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 425: entropy set to 0 due to p0 or p1 being zero or negative
Index 426: mean=tensor([6.1920], device='cuda:0'), var=tensor([0.3970], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 426: entropy set to 0 due to p0 or p1 being zero or negative
Index 427: mean=tensor([6.2044], device='cuda:0'), var=tensor([0.3950], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 427: entropy set to 0 due to p0 or p1 being zero or negative
Index 428: mean=tensor([6.2167], device='cuda:0'), var=tensor([0.3930], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 428: entropy set to 0 due to p0 or p1 being zero or negative
Index 429: mean=tensor([6.2288], device='cuda:0'), var=tensor([0.3910], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 429: entropy set to 0 due to p0 or p1 being zero or negative
Index 430: mean=tensor([6.2407], device='cuda:0'), var=tensor([0.3892], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 430: entropy set to 0 due to p0 or p1 being zero or negative
Index 431: mean=tensor([6.2525], device='cuda:0'), var=tensor([0.3873], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 431: entropy set to 0 due to p0 or p1 being zero or negative
Index 432: mean=tensor([6.2641], device='cuda:0'), var=tensor([0.3855], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 432: entropy set to 0 due to p0 or p1 being zero or negative
Index 433: mean=tensor([6.2756], device='cuda:0'), var=tensor([0.3838], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 433: entropy set to 0 due to p0 or p1 being zero or negative
Index 434: mean=tensor([6.2869], device='cuda:0'), var=tensor([0.3821], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 434: entropy set to 0 due to p0 or p1 being zero or negative
Index 435: mean=tensor([6.2980], device='cuda:0'), var=tensor([0.3804], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 435: entropy set to 0 due to p0 or p1 being zero or negative
Index 436: mean=tensor([6.3090], device='cuda:0'), var=tensor([0.3788], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 436: entropy set to 0 due to p0 or p1 being zero or negative
Index 437: mean=tensor([6.3198], device='cuda:0'), var=tensor([0.3772], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 437: entropy set to 0 due to p0 or p1 being zero or negative
Index 438: mean=tensor([6.3305], device='cuda:0'), var=tensor([0.3757], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 438: entropy set to 0 due to p0 or p1 being zero or negative
Index 439: mean=tensor([6.3410], device='cuda:0'), var=tensor([0.3742], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 439: entropy set to 0 due to p0 or p1 being zero or negative
Index 440: mean=tensor([6.3514], device='cuda:0'), var=tensor([0.3727], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 440: entropy set to 0 due to p0 or p1 being zero or negative
Index 441: mean=tensor([6.3616], device='cuda:0'), var=tensor([0.3713], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 441: entropy set to 0 due to p0 or p1 being zero or negative
Index 442: mean=tensor([6.3717], device='cuda:0'), var=tensor([0.3699], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 442: entropy set to 0 due to p0 or p1 being zero or negative
Index 443: mean=tensor([6.3816], device='cuda:0'), var=tensor([0.3685], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 443: entropy set to 0 due to p0 or p1 being zero or negative
Index 444: mean=tensor([6.3913], device='cuda:0'), var=tensor([0.3672], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 444: entropy set to 0 due to p0 or p1 being zero or negative
Index 445: mean=tensor([6.4009], device='cuda:0'), var=tensor([0.3659], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 445: entropy set to 0 due to p0 or p1 being zero or negative
Index 446: mean=tensor([6.4104], device='cuda:0'), var=tensor([0.3646], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 446: entropy set to 0 due to p0 or p1 being zero or negative
Index 447: mean=tensor([6.4197], device='cuda:0'), var=tensor([0.3634], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 447: entropy set to 0 due to p0 or p1 being zero or negative
Index 448: mean=tensor([6.4289], device='cuda:0'), var=tensor([0.3621], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 448: entropy set to 0 due to p0 or p1 being zero or negative
Index 449: mean=tensor([6.4379], device='cuda:0'), var=tensor([0.3609], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 449: entropy set to 0 due to p0 or p1 being zero or negative
Index 450: mean=tensor([6.4467], device='cuda:0'), var=tensor([0.3598], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 450: entropy set to 0 due to p0 or p1 being zero or negative
Index 451: mean=tensor([6.4555], device='cuda:0'), var=tensor([0.3586], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 451: entropy set to 0 due to p0 or p1 being zero or negative
Index 452: mean=tensor([6.4641], device='cuda:0'), var=tensor([0.3575], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 452: entropy set to 0 due to p0 or p1 being zero or negative
Index 453: mean=tensor([6.4725], device='cuda:0'), var=tensor([0.3564], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 453: entropy set to 0 due to p0 or p1 being zero or negative
Index 454: mean=tensor([6.4808], device='cuda:0'), var=tensor([0.3553], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 454: entropy set to 0 due to p0 or p1 being zero or negative
Index 455: mean=tensor([6.4890], device='cuda:0'), var=tensor([0.3542], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 455: entropy set to 0 due to p0 or p1 being zero or negative
Index 456: mean=tensor([6.4970], device='cuda:0'), var=tensor([0.3532], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 456: entropy set to 0 due to p0 or p1 being zero or negative
Index 457: mean=tensor([6.5049], device='cuda:0'), var=tensor([0.3521], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 457: entropy set to 0 due to p0 or p1 being zero or negative
Index 458: mean=tensor([6.5127], device='cuda:0'), var=tensor([0.3511], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 458: entropy set to 0 due to p0 or p1 being zero or negative
Index 459: mean=tensor([6.5203], device='cuda:0'), var=tensor([0.3501], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 459: entropy set to 0 due to p0 or p1 being zero or negative
Index 460: mean=tensor([6.5278], device='cuda:0'), var=tensor([0.3491], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 460: entropy set to 0 due to p0 or p1 being zero or negative
Index 461: mean=tensor([6.5351], device='cuda:0'), var=tensor([0.3481], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 461: entropy set to 0 due to p0 or p1 being zero or negative
Index 462: mean=tensor([6.5424], device='cuda:0'), var=tensor([0.3471], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 462: entropy set to 0 due to p0 or p1 being zero or negative
Index 463: mean=tensor([6.5495], device='cuda:0'), var=tensor([0.3461], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 463: entropy set to 0 due to p0 or p1 being zero or negative
Index 464: mean=tensor([6.5565], device='cuda:0'), var=tensor([0.3452], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 464: entropy set to 0 due to p0 or p1 being zero or negative
Index 465: mean=tensor([6.5633], device='cuda:0'), var=tensor([0.3442], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 465: entropy set to 0 due to p0 or p1 being zero or negative
Index 466: mean=tensor([6.5701], device='cuda:0'), var=tensor([0.3432], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 466: entropy set to 0 due to p0 or p1 being zero or negative
Index 467: mean=tensor([6.5767], device='cuda:0'), var=tensor([0.3423], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 467: entropy set to 0 due to p0 or p1 being zero or negative
Index 468: mean=tensor([6.5832], device='cuda:0'), var=tensor([0.3414], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 468: entropy set to 0 due to p0 or p1 being zero or negative
Index 469: mean=tensor([6.5895], device='cuda:0'), var=tensor([0.3404], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 469: entropy set to 0 due to p0 or p1 being zero or negative
Index 470: mean=tensor([6.5958], device='cuda:0'), var=tensor([0.3395], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 470: entropy set to 0 due to p0 or p1 being zero or negative
Index 471: mean=tensor([6.6019], device='cuda:0'), var=tensor([0.3385], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 471: entropy set to 0 due to p0 or p1 being zero or negative
Index 472: mean=tensor([6.6080], device='cuda:0'), var=tensor([0.3376], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 472: entropy set to 0 due to p0 or p1 being zero or negative
Index 473: mean=tensor([6.6139], device='cuda:0'), var=tensor([0.3367], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 473: entropy set to 0 due to p0 or p1 being zero or negative
Index 474: mean=tensor([6.6197], device='cuda:0'), var=tensor([0.3357], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 474: entropy set to 0 due to p0 or p1 being zero or negative
Index 475: mean=tensor([6.6253], device='cuda:0'), var=tensor([0.3348], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 475: entropy set to 0 due to p0 or p1 being zero or negative
Index 476: mean=tensor([6.6309], device='cuda:0'), var=tensor([0.3339], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 476: entropy set to 0 due to p0 or p1 being zero or negative
Index 477: mean=tensor([6.6364], device='cuda:0'), var=tensor([0.3329], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 477: entropy set to 0 due to p0 or p1 being zero or negative
Index 478: mean=tensor([6.6417], device='cuda:0'), var=tensor([0.3320], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 478: entropy set to 0 due to p0 or p1 being zero or negative
Index 479: mean=tensor([6.6470], device='cuda:0'), var=tensor([0.3311], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 479: entropy set to 0 due to p0 or p1 being zero or negative
Index 480: mean=tensor([6.6522], device='cuda:0'), var=tensor([0.3301], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 480: entropy set to 0 due to p0 or p1 being zero or negative
Index 481: mean=tensor([6.6572], device='cuda:0'), var=tensor([0.3292], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 481: entropy set to 0 due to p0 or p1 being zero or negative
Index 482: mean=tensor([6.6621], device='cuda:0'), var=tensor([0.3283], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 482: entropy set to 0 due to p0 or p1 being zero or negative
Index 483: mean=tensor([6.6670], device='cuda:0'), var=tensor([0.3273], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 483: entropy set to 0 due to p0 or p1 being zero or negative
Index 484: mean=tensor([6.6717], device='cuda:0'), var=tensor([0.3264], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 484: entropy set to 0 due to p0 or p1 being zero or negative
Index 485: mean=tensor([6.6764], device='cuda:0'), var=tensor([0.3254], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 485: entropy set to 0 due to p0 or p1 being zero or negative
Index 486: mean=tensor([6.6809], device='cuda:0'), var=tensor([0.3245], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 486: entropy set to 0 due to p0 or p1 being zero or negative
Index 487: mean=tensor([6.6854], device='cuda:0'), var=tensor([0.3235], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 487: entropy set to 0 due to p0 or p1 being zero or negative
Index 488: mean=tensor([6.6897], device='cuda:0'), var=tensor([0.3226], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 488: entropy set to 0 due to p0 or p1 being zero or negative
Index 489: mean=tensor([6.6940], device='cuda:0'), var=tensor([0.3216], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 489: entropy set to 0 due to p0 or p1 being zero or negative
Index 490: mean=tensor([6.6982], device='cuda:0'), var=tensor([0.3207], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 490: entropy set to 0 due to p0 or p1 being zero or negative
Index 491: mean=tensor([6.7023], device='cuda:0'), var=tensor([0.3197], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 491: entropy set to 0 due to p0 or p1 being zero or negative
Index 492: mean=tensor([6.7062], device='cuda:0'), var=tensor([0.3187], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 492: entropy set to 0 due to p0 or p1 being zero or negative
Index 493: mean=tensor([6.7101], device='cuda:0'), var=tensor([0.3178], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 493: entropy set to 0 due to p0 or p1 being zero or negative
Index 494: mean=tensor([6.7140], device='cuda:0'), var=tensor([0.3168], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 494: entropy set to 0 due to p0 or p1 being zero or negative
Index 495: mean=tensor([6.7177], device='cuda:0'), var=tensor([0.3159], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 495: entropy set to 0 due to p0 or p1 being zero or negative
Index 496: mean=tensor([6.7213], device='cuda:0'), var=tensor([0.3149], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 496: entropy set to 0 due to p0 or p1 being zero or negative
Index 497: mean=tensor([6.7249], device='cuda:0'), var=tensor([0.3139], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 497: entropy set to 0 due to p0 or p1 being zero or negative
Index 498: mean=tensor([6.7283], device='cuda:0'), var=tensor([0.3130], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 498: entropy set to 0 due to p0 or p1 being zero or negative
Index 499: mean=tensor([6.7317], device='cuda:0'), var=tensor([0.3120], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 499: entropy set to 0 due to p0 or p1 being zero or negative
Index 500: mean=tensor([6.7350], device='cuda:0'), var=tensor([0.3111], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 500: entropy set to 0 due to p0 or p1 being zero or negative
Index 501: mean=tensor([6.7382], device='cuda:0'), var=tensor([0.3101], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 501: entropy set to 0 due to p0 or p1 being zero or negative
Index 502: mean=tensor([6.7413], device='cuda:0'), var=tensor([0.3092], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 502: entropy set to 0 due to p0 or p1 being zero or negative
Index 503: mean=tensor([6.7443], device='cuda:0'), var=tensor([0.3082], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 503: entropy set to 0 due to p0 or p1 being zero or negative
Index 504: mean=tensor([6.7473], device='cuda:0'), var=tensor([0.3073], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 504: entropy set to 0 due to p0 or p1 being zero or negative
Index 505: mean=tensor([6.7502], device='cuda:0'), var=tensor([0.3063], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 505: entropy set to 0 due to p0 or p1 being zero or negative
Index 506: mean=tensor([6.7530], device='cuda:0'), var=tensor([0.3054], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 506: entropy set to 0 due to p0 or p1 being zero or negative
Index 507: mean=tensor([6.7557], device='cuda:0'), var=tensor([0.3045], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 507: entropy set to 0 due to p0 or p1 being zero or negative
Index 508: mean=tensor([6.7583], device='cuda:0'), var=tensor([0.3036], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 508: entropy set to 0 due to p0 or p1 being zero or negative
Index 509: mean=tensor([6.7609], device='cuda:0'), var=tensor([0.3026], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 509: entropy set to 0 due to p0 or p1 being zero or negative
Index 510: mean=tensor([6.7633], device='cuda:0'), var=tensor([0.3017], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 510: entropy set to 0 due to p0 or p1 being zero or negative
Index 511: mean=tensor([6.7657], device='cuda:0'), var=tensor([0.3008], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 511: entropy set to 0 due to p0 or p1 being zero or negative
Index 512: mean=tensor([6.7680], device='cuda:0'), var=tensor([0.2999], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 512: entropy set to 0 due to p0 or p1 being zero or negative
Index 513: mean=tensor([6.7703], device='cuda:0'), var=tensor([0.2991], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 513: entropy set to 0 due to p0 or p1 being zero or negative
Index 514: mean=tensor([6.7724], device='cuda:0'), var=tensor([0.2982], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 514: entropy set to 0 due to p0 or p1 being zero or negative
Index 515: mean=tensor([6.7745], device='cuda:0'), var=tensor([0.2973], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 515: entropy set to 0 due to p0 or p1 being zero or negative
Index 516: mean=tensor([6.7765], device='cuda:0'), var=tensor([0.2965], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 516: entropy set to 0 due to p0 or p1 being zero or negative
Index 517: mean=tensor([6.7784], device='cuda:0'), var=tensor([0.2957], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 517: entropy set to 0 due to p0 or p1 being zero or negative
Index 518: mean=tensor([6.7802], device='cuda:0'), var=tensor([0.2948], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 518: entropy set to 0 due to p0 or p1 being zero or negative
Index 519: mean=tensor([6.7819], device='cuda:0'), var=tensor([0.2940], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 519: entropy set to 0 due to p0 or p1 being zero or negative
Index 520: mean=tensor([6.7836], device='cuda:0'), var=tensor([0.2932], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 520: entropy set to 0 due to p0 or p1 being zero or negative
Index 521: mean=tensor([6.7852], device='cuda:0'), var=tensor([0.2925], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 521: entropy set to 0 due to p0 or p1 being zero or negative
Index 522: mean=tensor([6.7867], device='cuda:0'), var=tensor([0.2917], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 522: entropy set to 0 due to p0 or p1 being zero or negative
Index 523: mean=tensor([6.7881], device='cuda:0'), var=tensor([0.2910], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 523: entropy set to 0 due to p0 or p1 being zero or negative
Index 524: mean=tensor([6.7894], device='cuda:0'), var=tensor([0.2902], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 524: entropy set to 0 due to p0 or p1 being zero or negative
Index 525: mean=tensor([6.7907], device='cuda:0'), var=tensor([0.2895], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 525: entropy set to 0 due to p0 or p1 being zero or negative
Index 526: mean=tensor([6.7918], device='cuda:0'), var=tensor([0.2888], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 526: entropy set to 0 due to p0 or p1 being zero or negative
Index 527: mean=tensor([6.7929], device='cuda:0'), var=tensor([0.2881], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 527: entropy set to 0 due to p0 or p1 being zero or negative
Index 528: mean=tensor([6.7939], device='cuda:0'), var=tensor([0.2875], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 528: entropy set to 0 due to p0 or p1 being zero or negative
Index 529: mean=tensor([6.7948], device='cuda:0'), var=tensor([0.2868], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 529: entropy set to 0 due to p0 or p1 being zero or negative
Index 530: mean=tensor([6.7956], device='cuda:0'), var=tensor([0.2862], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 530: entropy set to 0 due to p0 or p1 being zero or negative
Index 531: mean=tensor([6.7963], device='cuda:0'), var=tensor([0.2856], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 531: entropy set to 0 due to p0 or p1 being zero or negative
Index 532: mean=tensor([6.7970], device='cuda:0'), var=tensor([0.2850], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 532: entropy set to 0 due to p0 or p1 being zero or negative
Index 533: mean=tensor([6.7975], device='cuda:0'), var=tensor([0.2845], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 533: entropy set to 0 due to p0 or p1 being zero or negative
Index 534: mean=tensor([6.7980], device='cuda:0'), var=tensor([0.2839], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 534: entropy set to 0 due to p0 or p1 being zero or negative
Index 535: mean=tensor([6.7983], device='cuda:0'), var=tensor([0.2834], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 535: entropy set to 0 due to p0 or p1 being zero or negative
Index 536: mean=tensor([6.7986], device='cuda:0'), var=tensor([0.2829], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 536: entropy set to 0 due to p0 or p1 being zero or negative
Index 537: mean=tensor([6.7988], device='cuda:0'), var=tensor([0.2824], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 537: entropy set to 0 due to p0 or p1 being zero or negative
Index 538: mean=tensor([6.7989], device='cuda:0'), var=tensor([0.2820], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 538: entropy set to 0 due to p0 or p1 being zero or negative
Index 539: mean=tensor([6.7988], device='cuda:0'), var=tensor([0.2815], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 539: entropy set to 0 due to p0 or p1 being zero or negative
Index 540: mean=tensor([6.7987], device='cuda:0'), var=tensor([0.2811], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 540: entropy set to 0 due to p0 or p1 being zero or negative
Index 541: mean=tensor([6.7985], device='cuda:0'), var=tensor([0.2807], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 541: entropy set to 0 due to p0 or p1 being zero or negative
Index 542: mean=tensor([6.7982], device='cuda:0'), var=tensor([0.2804], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 542: entropy set to 0 due to p0 or p1 being zero or negative
Index 543: mean=tensor([6.7977], device='cuda:0'), var=tensor([0.2800], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 543: entropy set to 0 due to p0 or p1 being zero or negative
Index 544: mean=tensor([6.7972], device='cuda:0'), var=tensor([0.2797], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 544: entropy set to 0 due to p0 or p1 being zero or negative
Index 545: mean=tensor([6.7966], device='cuda:0'), var=tensor([0.2794], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 545: entropy set to 0 due to p0 or p1 being zero or negative
Index 546: mean=tensor([6.7958], device='cuda:0'), var=tensor([0.2791], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 546: entropy set to 0 due to p0 or p1 being zero or negative
Index 547: mean=tensor([6.7950], device='cuda:0'), var=tensor([0.2789], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 547: entropy set to 0 due to p0 or p1 being zero or negative
Index 548: mean=tensor([6.7940], device='cuda:0'), var=tensor([0.2786], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 548: entropy set to 0 due to p0 or p1 being zero or negative
Index 549: mean=tensor([6.7929], device='cuda:0'), var=tensor([0.2784], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 549: entropy set to 0 due to p0 or p1 being zero or negative
Index 550: mean=tensor([6.7917], device='cuda:0'), var=tensor([0.2782], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 550: entropy set to 0 due to p0 or p1 being zero or negative
Index 551: mean=tensor([6.7904], device='cuda:0'), var=tensor([0.2781], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 551: entropy set to 0 due to p0 or p1 being zero or negative
Index 552: mean=tensor([6.7890], device='cuda:0'), var=tensor([0.2779], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 552: entropy set to 0 due to p0 or p1 being zero or negative
Index 553: mean=tensor([6.7874], device='cuda:0'), var=tensor([0.2778], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 553: entropy set to 0 due to p0 or p1 being zero or negative
Index 554: mean=tensor([6.7857], device='cuda:0'), var=tensor([0.2777], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 554: entropy set to 0 due to p0 or p1 being zero or negative
Index 555: mean=tensor([6.7839], device='cuda:0'), var=tensor([0.2776], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 555: entropy set to 0 due to p0 or p1 being zero or negative
Index 556: mean=tensor([6.7820], device='cuda:0'), var=tensor([0.2776], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 556: entropy set to 0 due to p0 or p1 being zero or negative
Index 557: mean=tensor([6.7799], device='cuda:0'), var=tensor([0.2776], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 557: entropy set to 0 due to p0 or p1 being zero or negative
Index 558: mean=tensor([6.7777], device='cuda:0'), var=tensor([0.2775], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 558: entropy set to 0 due to p0 or p1 being zero or negative
Index 559: mean=tensor([6.7754], device='cuda:0'), var=tensor([0.2776], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 559: entropy set to 0 due to p0 or p1 being zero or negative
Index 560: mean=tensor([6.7729], device='cuda:0'), var=tensor([0.2776], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 560: entropy set to 0 due to p0 or p1 being zero or negative
Index 561: mean=tensor([6.7703], device='cuda:0'), var=tensor([0.2776], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 561: entropy set to 0 due to p0 or p1 being zero or negative
Index 562: mean=tensor([6.7676], device='cuda:0'), var=tensor([0.2777], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 562: entropy set to 0 due to p0 or p1 being zero or negative
Index 563: mean=tensor([6.7647], device='cuda:0'), var=tensor([0.2778], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 563: entropy set to 0 due to p0 or p1 being zero or negative
Index 564: mean=tensor([6.7617], device='cuda:0'), var=tensor([0.2779], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 564: entropy set to 0 due to p0 or p1 being zero or negative
Index 565: mean=tensor([6.7585], device='cuda:0'), var=tensor([0.2780], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 565: entropy set to 0 due to p0 or p1 being zero or negative
Index 566: mean=tensor([6.7552], device='cuda:0'), var=tensor([0.2781], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 566: entropy set to 0 due to p0 or p1 being zero or negative
Index 567: mean=tensor([6.7517], device='cuda:0'), var=tensor([0.2783], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 567: entropy set to 0 due to p0 or p1 being zero or negative
Index 568: mean=tensor([6.7480], device='cuda:0'), var=tensor([0.2785], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 568: entropy set to 0 due to p0 or p1 being zero or negative
Index 569: mean=tensor([6.7442], device='cuda:0'), var=tensor([0.2787], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 569: entropy set to 0 due to p0 or p1 being zero or negative
Index 570: mean=tensor([6.7403], device='cuda:0'), var=tensor([0.2789], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 570: entropy set to 0 due to p0 or p1 being zero or negative
Index 571: mean=tensor([6.7362], device='cuda:0'), var=tensor([0.2791], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 571: entropy set to 0 due to p0 or p1 being zero or negative
Index 572: mean=tensor([6.7319], device='cuda:0'), var=tensor([0.2793], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 572: entropy set to 0 due to p0 or p1 being zero or negative
Index 573: mean=tensor([6.7275], device='cuda:0'), var=tensor([0.2796], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 573: entropy set to 0 due to p0 or p1 being zero or negative
Index 574: mean=tensor([6.7229], device='cuda:0'), var=tensor([0.2798], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 574: entropy set to 0 due to p0 or p1 being zero or negative
Index 575: mean=tensor([6.7181], device='cuda:0'), var=tensor([0.2801], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 575: entropy set to 0 due to p0 or p1 being zero or negative
Index 576: mean=tensor([6.7131], device='cuda:0'), var=tensor([0.2804], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 576: entropy set to 0 due to p0 or p1 being zero or negative
Index 577: mean=tensor([6.7080], device='cuda:0'), var=tensor([0.2807], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 577: entropy set to 0 due to p0 or p1 being zero or negative
Index 578: mean=tensor([6.7027], device='cuda:0'), var=tensor([0.2810], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 578: entropy set to 0 due to p0 or p1 being zero or negative
Index 579: mean=tensor([6.6972], device='cuda:0'), var=tensor([0.2813], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 579: entropy set to 0 due to p0 or p1 being zero or negative
Index 580: mean=tensor([6.6915], device='cuda:0'), var=tensor([0.2816], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 580: entropy set to 0 due to p0 or p1 being zero or negative
Index 581: mean=tensor([6.6856], device='cuda:0'), var=tensor([0.2819], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 581: entropy set to 0 due to p0 or p1 being zero or negative
Index 582: mean=tensor([6.6796], device='cuda:0'), var=tensor([0.2823], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 582: entropy set to 0 due to p0 or p1 being zero or negative
Index 583: mean=tensor([6.6734], device='cuda:0'), var=tensor([0.2826], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 583: entropy set to 0 due to p0 or p1 being zero or negative
Index 584: mean=tensor([6.6669], device='cuda:0'), var=tensor([0.2829], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 584: entropy set to 0 due to p0 or p1 being zero or negative
Index 585: mean=tensor([6.6603], device='cuda:0'), var=tensor([0.2833], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 585: entropy set to 0 due to p0 or p1 being zero or negative
Index 586: mean=tensor([6.6535], device='cuda:0'), var=tensor([0.2837], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 586: entropy set to 0 due to p0 or p1 being zero or negative
Index 587: mean=tensor([6.6464], device='cuda:0'), var=tensor([0.2840], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 587: entropy set to 0 due to p0 or p1 being zero or negative
Index 588: mean=tensor([6.6392], device='cuda:0'), var=tensor([0.2844], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 588: entropy set to 0 due to p0 or p1 being zero or negative
Index 589: mean=tensor([6.6318], device='cuda:0'), var=tensor([0.2848], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 589: entropy set to 0 due to p0 or p1 being zero or negative
Index 590: mean=tensor([6.6241], device='cuda:0'), var=tensor([0.2851], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 590: entropy set to 0 due to p0 or p1 being zero or negative
Index 591: mean=tensor([6.6163], device='cuda:0'), var=tensor([0.2855], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 591: entropy set to 0 due to p0 or p1 being zero or negative
Index 592: mean=tensor([6.6082], device='cuda:0'), var=tensor([0.2859], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 592: entropy set to 0 due to p0 or p1 being zero or negative
Index 593: mean=tensor([6.5999], device='cuda:0'), var=tensor([0.2862], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 593: entropy set to 0 due to p0 or p1 being zero or negative
Index 594: mean=tensor([6.5914], device='cuda:0'), var=tensor([0.2866], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 594: entropy set to 0 due to p0 or p1 being zero or negative
Index 595: mean=tensor([6.5827], device='cuda:0'), var=tensor([0.2870], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 595: entropy set to 0 due to p0 or p1 being zero or negative
Index 596: mean=tensor([6.5738], device='cuda:0'), var=tensor([0.2874], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 596: entropy set to 0 due to p0 or p1 being zero or negative
Index 597: mean=tensor([6.5646], device='cuda:0'), var=tensor([0.2877], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 597: entropy set to 0 due to p0 or p1 being zero or negative
Index 598: mean=tensor([6.5552], device='cuda:0'), var=tensor([0.2881], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 598: entropy set to 0 due to p0 or p1 being zero or negative
Index 599: mean=tensor([6.5456], device='cuda:0'), var=tensor([0.2884], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 599: entropy set to 0 due to p0 or p1 being zero or negative
Index 600: mean=tensor([6.5358], device='cuda:0'), var=tensor([0.2888], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 600: entropy set to 0 due to p0 or p1 being zero or negative
Index 601: mean=tensor([6.5257], device='cuda:0'), var=tensor([0.2892], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 601: entropy set to 0 due to p0 or p1 being zero or negative
Index 602: mean=tensor([6.5154], device='cuda:0'), var=tensor([0.2895], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 602: entropy set to 0 due to p0 or p1 being zero or negative
Index 603: mean=tensor([6.5049], device='cuda:0'), var=tensor([0.2898], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 603: entropy set to 0 due to p0 or p1 being zero or negative
Index 604: mean=tensor([6.4941], device='cuda:0'), var=tensor([0.2902], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 604: entropy set to 0 due to p0 or p1 being zero or negative
Index 605: mean=tensor([6.4831], device='cuda:0'), var=tensor([0.2905], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 605: entropy set to 0 due to p0 or p1 being zero or negative
Index 606: mean=tensor([6.4718], device='cuda:0'), var=tensor([0.2908], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 606: entropy set to 0 due to p0 or p1 being zero or negative
Index 607: mean=tensor([6.4603], device='cuda:0'), var=tensor([0.2911], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 607: entropy set to 0 due to p0 or p1 being zero or negative
Index 608: mean=tensor([6.4486], device='cuda:0'), var=tensor([0.2914], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 608: entropy set to 0 due to p0 or p1 being zero or negative
Index 609: mean=tensor([6.4366], device='cuda:0'), var=tensor([0.2917], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 609: entropy set to 0 due to p0 or p1 being zero or negative
Index 610: mean=tensor([6.4244], device='cuda:0'), var=tensor([0.2920], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 610: entropy set to 0 due to p0 or p1 being zero or negative
Index 611: mean=tensor([6.4119], device='cuda:0'), var=tensor([0.2923], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 611: entropy set to 0 due to p0 or p1 being zero or negative
Index 612: mean=tensor([6.3992], device='cuda:0'), var=tensor([0.2926], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 612: entropy set to 0 due to p0 or p1 being zero or negative
Index 613: mean=tensor([6.3863], device='cuda:0'), var=tensor([0.2928], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 613: entropy set to 0 due to p0 or p1 being zero or negative
Index 614: mean=tensor([6.3730], device='cuda:0'), var=tensor([0.2931], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 614: entropy set to 0 due to p0 or p1 being zero or negative
Index 615: mean=tensor([6.3596], device='cuda:0'), var=tensor([0.2933], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 615: entropy set to 0 due to p0 or p1 being zero or negative
Index 616: mean=tensor([6.3458], device='cuda:0'), var=tensor([0.2936], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 616: entropy set to 0 due to p0 or p1 being zero or negative
Index 617: mean=tensor([6.3319], device='cuda:0'), var=tensor([0.2938], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 617: entropy set to 0 due to p0 or p1 being zero or negative
Index 618: mean=tensor([6.3176], device='cuda:0'), var=tensor([0.2940], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 618: entropy set to 0 due to p0 or p1 being zero or negative
Index 619: mean=tensor([6.3032], device='cuda:0'), var=tensor([0.2942], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 619: entropy set to 0 due to p0 or p1 being zero or negative
Index 620: mean=tensor([6.2884], device='cuda:0'), var=tensor([0.2944], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 620: entropy set to 0 due to p0 or p1 being zero or negative
Index 621: mean=tensor([6.2734], device='cuda:0'), var=tensor([0.2945], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 621: entropy set to 0 due to p0 or p1 being zero or negative
Index 622: mean=tensor([6.2582], device='cuda:0'), var=tensor([0.2947], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 622: entropy set to 0 due to p0 or p1 being zero or negative
Index 623: mean=tensor([6.2427], device='cuda:0'), var=tensor([0.2948], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 623: entropy set to 0 due to p0 or p1 being zero or negative
Index 624: mean=tensor([6.2269], device='cuda:0'), var=tensor([0.2950], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 624: entropy set to 0 due to p0 or p1 being zero or negative
Index 625: mean=tensor([6.2109], device='cuda:0'), var=tensor([0.2951], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 625: entropy set to 0 due to p0 or p1 being zero or negative
Index 626: mean=tensor([6.1946], device='cuda:0'), var=tensor([0.2952], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 626: entropy set to 0 due to p0 or p1 being zero or negative
Index 627: mean=tensor([6.1781], device='cuda:0'), var=tensor([0.2953], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 627: entropy set to 0 due to p0 or p1 being zero or negative
Index 628: mean=tensor([6.1613], device='cuda:0'), var=tensor([0.2954], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 628: entropy set to 0 due to p0 or p1 being zero or negative
Index 629: mean=tensor([6.1443], device='cuda:0'), var=tensor([0.2955], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 629: entropy set to 0 due to p0 or p1 being zero or negative
Index 630: mean=tensor([6.1270], device='cuda:0'), var=tensor([0.2955], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 630: entropy set to 0 due to p0 or p1 being zero or negative
Index 631: mean=tensor([6.1094], device='cuda:0'), var=tensor([0.2956], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 631: entropy set to 0 due to p0 or p1 being zero or negative
Index 632: mean=tensor([6.0916], device='cuda:0'), var=tensor([0.2956], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 632: entropy set to 0 due to p0 or p1 being zero or negative
Index 633: mean=tensor([6.0735], device='cuda:0'), var=tensor([0.2957], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 633: entropy set to 0 due to p0 or p1 being zero or negative
Index 634: mean=tensor([6.0552], device='cuda:0'), var=tensor([0.2957], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 634: entropy set to 0 due to p0 or p1 being zero or negative
Index 635: mean=tensor([6.0366], device='cuda:0'), var=tensor([0.2957], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 635: entropy set to 0 due to p0 or p1 being zero or negative
Index 636: mean=tensor([6.0178], device='cuda:0'), var=tensor([0.2957], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 636: entropy set to 0 due to p0 or p1 being zero or negative
Index 637: mean=tensor([5.9987], device='cuda:0'), var=tensor([0.2957], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 637: entropy set to 0 due to p0 or p1 being zero or negative
Index 638: mean=tensor([5.9794], device='cuda:0'), var=tensor([0.2957], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 638: entropy set to 0 due to p0 or p1 being zero or negative
Index 639: mean=tensor([5.9598], device='cuda:0'), var=tensor([0.2956], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 639: entropy set to 0 due to p0 or p1 being zero or negative
Index 640: mean=tensor([5.9400], device='cuda:0'), var=tensor([0.2956], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 640: entropy set to 0 due to p0 or p1 being zero or negative
Index 641: mean=tensor([5.9200], device='cuda:0'), var=tensor([0.2955], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 641: entropy set to 0 due to p0 or p1 being zero or negative
Index 642: mean=tensor([5.8997], device='cuda:0'), var=tensor([0.2954], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 642: entropy set to 0 due to p0 or p1 being zero or negative
Index 643: mean=tensor([5.8791], device='cuda:0'), var=tensor([0.2954], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 643: entropy set to 0 due to p0 or p1 being zero or negative
Index 644: mean=tensor([5.8583], device='cuda:0'), var=tensor([0.2953], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 644: entropy set to 0 due to p0 or p1 being zero or negative
Index 645: mean=tensor([5.8373], device='cuda:0'), var=tensor([0.2952], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 645: entropy set to 0 due to p0 or p1 being zero or negative
Index 646: mean=tensor([5.8161], device='cuda:0'), var=tensor([0.2951], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 646: entropy set to 0 due to p0 or p1 being zero or negative
Index 647: mean=tensor([5.7946], device='cuda:0'), var=tensor([0.2950], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 647: entropy set to 0 due to p0 or p1 being zero or negative
Index 648: mean=tensor([5.7729], device='cuda:0'), var=tensor([0.2948], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 648: entropy set to 0 due to p0 or p1 being zero or negative
Index 649: mean=tensor([5.7509], device='cuda:0'), var=tensor([0.2947], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 649: entropy set to 0 due to p0 or p1 being zero or negative
Index 650: mean=tensor([5.7288], device='cuda:0'), var=tensor([0.2946], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 650: entropy set to 0 due to p0 or p1 being zero or negative
Index 651: mean=tensor([5.7064], device='cuda:0'), var=tensor([0.2944], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 651: entropy set to 0 due to p0 or p1 being zero or negative
Index 652: mean=tensor([5.6838], device='cuda:0'), var=tensor([0.2942], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 652: entropy set to 0 due to p0 or p1 being zero or negative
Index 653: mean=tensor([5.6610], device='cuda:0'), var=tensor([0.2941], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 653: entropy set to 0 due to p0 or p1 being zero or negative
Index 654: mean=tensor([5.6379], device='cuda:0'), var=tensor([0.2939], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 654: entropy set to 0 due to p0 or p1 being zero or negative
Index 655: mean=tensor([5.6147], device='cuda:0'), var=tensor([0.2937], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 655: entropy set to 0 due to p0 or p1 being zero or negative
Index 656: mean=tensor([5.5912], device='cuda:0'), var=tensor([0.2935], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 656: entropy set to 0 due to p0 or p1 being zero or negative
Index 657: mean=tensor([5.5676], device='cuda:0'), var=tensor([0.2934], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 657: entropy set to 0 due to p0 or p1 being zero or negative
Index 658: mean=tensor([5.5437], device='cuda:0'), var=tensor([0.2932], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 658: entropy set to 0 due to p0 or p1 being zero or negative
Index 659: mean=tensor([5.5197], device='cuda:0'), var=tensor([0.2929], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 659: entropy set to 0 due to p0 or p1 being zero or negative
Index 660: mean=tensor([5.4955], device='cuda:0'), var=tensor([0.2927], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 660: entropy set to 0 due to p0 or p1 being zero or negative
Index 661: mean=tensor([5.4711], device='cuda:0'), var=tensor([0.2925], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 661: entropy set to 0 due to p0 or p1 being zero or negative
Index 662: mean=tensor([5.4465], device='cuda:0'), var=tensor([0.2923], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 662: entropy set to 0 due to p0 or p1 being zero or negative
Index 663: mean=tensor([5.4217], device='cuda:0'), var=tensor([0.2921], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 663: entropy set to 0 due to p0 or p1 being zero or negative
Index 664: mean=tensor([5.3967], device='cuda:0'), var=tensor([0.2919], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 664: entropy set to 0 due to p0 or p1 being zero or negative
Index 665: mean=tensor([5.3716], device='cuda:0'), var=tensor([0.2916], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 665: entropy set to 0 due to p0 or p1 being zero or negative
Index 666: mean=tensor([5.3463], device='cuda:0'), var=tensor([0.2914], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 666: entropy set to 0 due to p0 or p1 being zero or negative
Index 667: mean=tensor([5.3209], device='cuda:0'), var=tensor([0.2911], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 667: entropy set to 0 due to p0 or p1 being zero or negative
Index 668: mean=tensor([5.2953], device='cuda:0'), var=tensor([0.2909], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 668: entropy set to 0 due to p0 or p1 being zero or negative
Index 669: mean=tensor([5.2695], device='cuda:0'), var=tensor([0.2907], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 669: entropy set to 0 due to p0 or p1 being zero or negative
Index 670: mean=tensor([5.2436], device='cuda:0'), var=tensor([0.2904], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 670: entropy set to 0 due to p0 or p1 being zero or negative
Index 671: mean=tensor([5.2176], device='cuda:0'), var=tensor([0.2902], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 671: entropy set to 0 due to p0 or p1 being zero or negative
Index 672: mean=tensor([5.1915], device='cuda:0'), var=tensor([0.2899], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 672: entropy set to 0 due to p0 or p1 being zero or negative
Index 673: mean=tensor([5.1652], device='cuda:0'), var=tensor([0.2896], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 673: entropy set to 0 due to p0 or p1 being zero or negative
Index 674: mean=tensor([5.1387], device='cuda:0'), var=tensor([0.2894], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 674: entropy set to 0 due to p0 or p1 being zero or negative
Index 675: mean=tensor([5.1122], device='cuda:0'), var=tensor([0.2891], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 675: entropy set to 0 due to p0 or p1 being zero or negative
Index 676: mean=tensor([5.0856], device='cuda:0'), var=tensor([0.2889], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 676: entropy set to 0 due to p0 or p1 being zero or negative
Index 677: mean=tensor([5.0588], device='cuda:0'), var=tensor([0.2886], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 677: entropy set to 0 due to p0 or p1 being zero or negative
Index 678: mean=tensor([5.0320], device='cuda:0'), var=tensor([0.2884], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 678: entropy set to 0 due to p0 or p1 being zero or negative
Index 679: mean=tensor([5.0050], device='cuda:0'), var=tensor([0.2881], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 679: entropy set to 0 due to p0 or p1 being zero or negative
Index 680: mean=tensor([4.9780], device='cuda:0'), var=tensor([0.2878], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 680: entropy set to 0 due to p0 or p1 being zero or negative
Index 681: mean=tensor([4.9509], device='cuda:0'), var=tensor([0.2876], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 681: entropy set to 0 due to p0 or p1 being zero or negative
Index 682: mean=tensor([4.9237], device='cuda:0'), var=tensor([0.2873], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 682: entropy set to 0 due to p0 or p1 being zero or negative
Index 683: mean=tensor([4.8965], device='cuda:0'), var=tensor([0.2870], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 683: entropy set to 0 due to p0 or p1 being zero or negative
Index 684: mean=tensor([4.8692], device='cuda:0'), var=tensor([0.2868], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 684: entropy set to 0 due to p0 or p1 being zero or negative
Index 685: mean=tensor([4.8418], device='cuda:0'), var=tensor([0.2865], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 685: entropy set to 0 due to p0 or p1 being zero or negative
Index 686: mean=tensor([4.8144], device='cuda:0'), var=tensor([0.2863], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 686: entropy set to 0 due to p0 or p1 being zero or negative
Index 687: mean=tensor([4.7869], device='cuda:0'), var=tensor([0.2860], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 687: entropy set to 0 due to p0 or p1 being zero or negative
Index 688: mean=tensor([4.7595], device='cuda:0'), var=tensor([0.2857], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 688: entropy set to 0 due to p0 or p1 being zero or negative
Index 689: mean=tensor([4.7319], device='cuda:0'), var=tensor([0.2855], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 689: entropy set to 0 due to p0 or p1 being zero or negative
Index 690: mean=tensor([4.7044], device='cuda:0'), var=tensor([0.2852], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 690: entropy set to 0 due to p0 or p1 being zero or negative
Index 691: mean=tensor([4.6769], device='cuda:0'), var=tensor([0.2850], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 691: entropy set to 0 due to p0 or p1 being zero or negative
Index 692: mean=tensor([4.6493], device='cuda:0'), var=tensor([0.2847], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 692: entropy set to 0 due to p0 or p1 being zero or negative
Index 693: mean=tensor([4.6217], device='cuda:0'), var=tensor([0.2845], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 693: entropy set to 0 due to p0 or p1 being zero or negative
Index 694: mean=tensor([4.5942], device='cuda:0'), var=tensor([0.2842], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 694: entropy set to 0 due to p0 or p1 being zero or negative
Index 695: mean=tensor([4.5667], device='cuda:0'), var=tensor([0.2840], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 695: entropy set to 0 due to p0 or p1 being zero or negative
Index 696: mean=tensor([4.5391], device='cuda:0'), var=tensor([0.2837], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 696: entropy set to 0 due to p0 or p1 being zero or negative
Index 697: mean=tensor([4.5117], device='cuda:0'), var=tensor([0.2835], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 697: entropy set to 0 due to p0 or p1 being zero or negative
Index 698: mean=tensor([4.4842], device='cuda:0'), var=tensor([0.2833], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 698: entropy set to 0 due to p0 or p1 being zero or negative
Index 699: mean=tensor([4.4568], device='cuda:0'), var=tensor([0.2830], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 699: entropy set to 0 due to p0 or p1 being zero or negative
Index 700: mean=tensor([4.4295], device='cuda:0'), var=tensor([0.2828], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 700: entropy set to 0 due to p0 or p1 being zero or negative
Index 701: mean=tensor([4.4022], device='cuda:0'), var=tensor([0.2826], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 701: entropy set to 0 due to p0 or p1 being zero or negative
Index 702: mean=tensor([4.3749], device='cuda:0'), var=tensor([0.2823], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 702: entropy set to 0 due to p0 or p1 being zero or negative
Index 703: mean=tensor([4.3478], device='cuda:0'), var=tensor([0.2821], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 703: entropy set to 0 due to p0 or p1 being zero or negative
Index 704: mean=tensor([4.3207], device='cuda:0'), var=tensor([0.2819], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 704: entropy set to 0 due to p0 or p1 being zero or negative
Index 705: mean=tensor([4.2937], device='cuda:0'), var=tensor([0.2817], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 705: entropy set to 0 due to p0 or p1 being zero or negative
Index 706: mean=tensor([4.2669], device='cuda:0'), var=tensor([0.2815], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 706: entropy set to 0 due to p0 or p1 being zero or negative
Index 707: mean=tensor([4.2401], device='cuda:0'), var=tensor([0.2813], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 707: entropy set to 0 due to p0 or p1 being zero or negative
Index 708: mean=tensor([4.2134], device='cuda:0'), var=tensor([0.2811], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 708: entropy set to 0 due to p0 or p1 being zero or negative
Index 709: mean=tensor([4.1869], device='cuda:0'), var=tensor([0.2809], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 709: entropy set to 0 due to p0 or p1 being zero or negative
Index 710: mean=tensor([4.1604], device='cuda:0'), var=tensor([0.2807], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 710: entropy set to 0 due to p0 or p1 being zero or negative
Index 711: mean=tensor([4.1341], device='cuda:0'), var=tensor([0.2805], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 711: entropy set to 0 due to p0 or p1 being zero or negative
Index 712: mean=tensor([4.1080], device='cuda:0'), var=tensor([0.2803], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 712: entropy set to 0 due to p0 or p1 being zero or negative
Index 713: mean=tensor([4.0820], device='cuda:0'), var=tensor([0.2801], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 713: entropy set to 0 due to p0 or p1 being zero or negative
Index 714: mean=tensor([4.0561], device='cuda:0'), var=tensor([0.2800], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 714: entropy set to 0 due to p0 or p1 being zero or negative
Index 715: mean=tensor([4.0304], device='cuda:0'), var=tensor([0.2798], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 715: entropy set to 0 due to p0 or p1 being zero or negative
Index 716: mean=tensor([4.0049], device='cuda:0'), var=tensor([0.2796], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 716: entropy set to 0 due to p0 or p1 being zero or negative
Index 717: mean=tensor([3.9796], device='cuda:0'), var=tensor([0.2795], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 717: entropy set to 0 due to p0 or p1 being zero or negative
Index 718: mean=tensor([3.9545], device='cuda:0'), var=tensor([0.2793], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 718: entropy set to 0 due to p0 or p1 being zero or negative
Index 719: mean=tensor([3.9295], device='cuda:0'), var=tensor([0.2792], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 719: entropy set to 0 due to p0 or p1 being zero or negative
Index 720: mean=tensor([3.9047], device='cuda:0'), var=tensor([0.2790], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 720: entropy set to 0 due to p0 or p1 being zero or negative
Index 721: mean=tensor([3.8802], device='cuda:0'), var=tensor([0.2789], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 721: entropy set to 0 due to p0 or p1 being zero or negative
Index 722: mean=tensor([3.8558], device='cuda:0'), var=tensor([0.2788], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 722: entropy set to 0 due to p0 or p1 being zero or negative
Index 723: mean=tensor([3.8317], device='cuda:0'), var=tensor([0.2786], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 723: entropy set to 0 due to p0 or p1 being zero or negative
Index 724: mean=tensor([3.8078], device='cuda:0'), var=tensor([0.2785], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 724: entropy set to 0 due to p0 or p1 being zero or negative
Index 725: mean=tensor([3.7842], device='cuda:0'), var=tensor([0.2784], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 725: entropy set to 0 due to p0 or p1 being zero or negative
Index 726: mean=tensor([3.7607], device='cuda:0'), var=tensor([0.2783], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 726: entropy set to 0 due to p0 or p1 being zero or negative
Index 727: mean=tensor([3.7376], device='cuda:0'), var=tensor([0.2782], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 727: entropy set to 0 due to p0 or p1 being zero or negative
Index 728: mean=tensor([3.7147], device='cuda:0'), var=tensor([0.2781], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 728: entropy set to 0 due to p0 or p1 being zero or negative
Index 729: mean=tensor([3.6920], device='cuda:0'), var=tensor([0.2780], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 729: entropy set to 0 due to p0 or p1 being zero or negative
Index 730: mean=tensor([3.6696], device='cuda:0'), var=tensor([0.2780], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 730: entropy set to 0 due to p0 or p1 being zero or negative
Index 731: mean=tensor([3.6475], device='cuda:0'), var=tensor([0.2779], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 731: entropy set to 0 due to p0 or p1 being zero or negative
Index 732: mean=tensor([3.6256], device='cuda:0'), var=tensor([0.2778], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 732: entropy set to 0 due to p0 or p1 being zero or negative
Index 733: mean=tensor([3.6041], device='cuda:0'), var=tensor([0.2778], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 733: entropy set to 0 due to p0 or p1 being zero or negative
Index 734: mean=tensor([3.5828], device='cuda:0'), var=tensor([0.2777], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 734: entropy set to 0 due to p0 or p1 being zero or negative
Index 735: mean=tensor([3.5618], device='cuda:0'), var=tensor([0.2777], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 735: entropy set to 0 due to p0 or p1 being zero or negative
Index 736: mean=tensor([3.5412], device='cuda:0'), var=tensor([0.2777], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 736: entropy set to 0 due to p0 or p1 being zero or negative
Index 737: mean=tensor([3.5208], device='cuda:0'), var=tensor([0.2777], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 737: entropy set to 0 due to p0 or p1 being zero or negative
Index 738: mean=tensor([3.5008], device='cuda:0'), var=tensor([0.2777], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 738: entropy set to 0 due to p0 or p1 being zero or negative
Index 739: mean=tensor([3.4810], device='cuda:0'), var=tensor([0.2777], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 739: entropy set to 0 due to p0 or p1 being zero or negative
Index 740: mean=tensor([3.4616], device='cuda:0'), var=tensor([0.2777], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 740: entropy set to 0 due to p0 or p1 being zero or negative
Index 741: mean=tensor([3.4425], device='cuda:0'), var=tensor([0.2777], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 741: entropy set to 0 due to p0 or p1 being zero or negative
Index 742: mean=tensor([3.4238], device='cuda:0'), var=tensor([0.2777], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 742: entropy set to 0 due to p0 or p1 being zero or negative
Index 743: mean=tensor([3.4054], device='cuda:0'), var=tensor([0.2777], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 743: entropy set to 0 due to p0 or p1 being zero or negative
Index 744: mean=tensor([3.3873], device='cuda:0'), var=tensor([0.2778], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 744: entropy set to 0 due to p0 or p1 being zero or negative
Index 745: mean=tensor([3.3696], device='cuda:0'), var=tensor([0.2778], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 745: entropy set to 0 due to p0 or p1 being zero or negative
Index 746: mean=tensor([3.3522], device='cuda:0'), var=tensor([0.2779], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 746: entropy set to 0 due to p0 or p1 being zero or negative
Index 747: mean=tensor([3.3352], device='cuda:0'), var=tensor([0.2780], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 747: entropy set to 0 due to p0 or p1 being zero or negative
Index 748: mean=tensor([3.3185], device='cuda:0'), var=tensor([0.2780], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 748: entropy set to 0 due to p0 or p1 being zero or negative
Index 749: mean=tensor([3.3022], device='cuda:0'), var=tensor([0.2781], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 749: entropy set to 0 due to p0 or p1 being zero or negative
Index 750: mean=tensor([3.2863], device='cuda:0'), var=tensor([0.2782], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 750: entropy set to 0 due to p0 or p1 being zero or negative
Index 751: mean=tensor([3.2707], device='cuda:0'), var=tensor([0.2783], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 751: entropy set to 0 due to p0 or p1 being zero or negative
Index 752: mean=tensor([3.2555], device='cuda:0'), var=tensor([0.2784], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 752: entropy set to 0 due to p0 or p1 being zero or negative
Index 753: mean=tensor([3.2407], device='cuda:0'), var=tensor([0.2785], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 753: entropy set to 0 due to p0 or p1 being zero or negative
Index 754: mean=tensor([3.2262], device='cuda:0'), var=tensor([0.2787], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 754: entropy set to 0 due to p0 or p1 being zero or negative
Index 755: mean=tensor([3.2121], device='cuda:0'), var=tensor([0.2788], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 755: entropy set to 0 due to p0 or p1 being zero or negative
Index 756: mean=tensor([3.1985], device='cuda:0'), var=tensor([0.2790], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 756: entropy set to 0 due to p0 or p1 being zero or negative
Index 757: mean=tensor([3.1852], device='cuda:0'), var=tensor([0.2791], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 757: entropy set to 0 due to p0 or p1 being zero or negative
Index 758: mean=tensor([3.1722], device='cuda:0'), var=tensor([0.2793], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 758: entropy set to 0 due to p0 or p1 being zero or negative
Index 759: mean=tensor([3.1597], device='cuda:0'), var=tensor([0.2795], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 759: entropy set to 0 due to p0 or p1 being zero or negative
Index 760: mean=tensor([3.1476], device='cuda:0'), var=tensor([0.2796], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 760: entropy set to 0 due to p0 or p1 being zero or negative
Index 761: mean=tensor([3.1358], device='cuda:0'), var=tensor([0.2798], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 761: entropy set to 0 due to p0 or p1 being zero or negative
Index 762: mean=tensor([3.1245], device='cuda:0'), var=tensor([0.2800], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 762: entropy set to 0 due to p0 or p1 being zero or negative
Index 763: mean=tensor([3.1135], device='cuda:0'), var=tensor([0.2802], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 763: entropy set to 0 due to p0 or p1 being zero or negative
Index 764: mean=tensor([3.1030], device='cuda:0'), var=tensor([0.2805], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 764: entropy set to 0 due to p0 or p1 being zero or negative
Index 765: mean=tensor([3.0928], device='cuda:0'), var=tensor([0.2807], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 765: entropy set to 0 due to p0 or p1 being zero or negative
Index 766: mean=tensor([3.0830], device='cuda:0'), var=tensor([0.2809], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 766: entropy set to 0 due to p0 or p1 being zero or negative
Index 767: mean=tensor([3.0737], device='cuda:0'), var=tensor([0.2811], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 767: entropy set to 0 due to p0 or p1 being zero or negative
Index 768: mean=tensor([3.0647], device='cuda:0'), var=tensor([0.2814], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 768: entropy set to 0 due to p0 or p1 being zero or negative
Index 769: mean=tensor([3.0561], device='cuda:0'), var=tensor([0.2816], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 769: entropy set to 0 due to p0 or p1 being zero or negative
Index 770: mean=tensor([3.0479], device='cuda:0'), var=tensor([0.2819], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 770: entropy set to 0 due to p0 or p1 being zero or negative
Index 771: mean=tensor([3.0401], device='cuda:0'), var=tensor([0.2822], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 771: entropy set to 0 due to p0 or p1 being zero or negative
Index 772: mean=tensor([3.0327], device='cuda:0'), var=tensor([0.2824], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 772: entropy set to 0 due to p0 or p1 being zero or negative
Index 773: mean=tensor([3.0257], device='cuda:0'), var=tensor([0.2827], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 773: entropy set to 0 due to p0 or p1 being zero or negative
Index 774: mean=tensor([3.0191], device='cuda:0'), var=tensor([0.2830], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 774: entropy set to 0 due to p0 or p1 being zero or negative
Index 775: mean=tensor([3.0129], device='cuda:0'), var=tensor([0.2833], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 775: entropy set to 0 due to p0 or p1 being zero or negative
Index 776: mean=tensor([3.0071], device='cuda:0'), var=tensor([0.2836], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 776: entropy set to 0 due to p0 or p1 being zero or negative
Index 777: mean=tensor([3.0017], device='cuda:0'), var=tensor([0.2839], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 777: entropy set to 0 due to p0 or p1 being zero or negative
Index 778: mean=tensor([2.9966], device='cuda:0'), var=tensor([0.2842], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 778: entropy set to 0 due to p0 or p1 being zero or negative
Index 779: mean=tensor([2.9919], device='cuda:0'), var=tensor([0.2845], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 779: entropy set to 0 due to p0 or p1 being zero or negative
Index 780: mean=tensor([2.9877], device='cuda:0'), var=tensor([0.2848], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 780: entropy set to 0 due to p0 or p1 being zero or negative
Index 781: mean=tensor([2.9838], device='cuda:0'), var=tensor([0.2851], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 781: entropy set to 0 due to p0 or p1 being zero or negative
Index 782: mean=tensor([2.9802], device='cuda:0'), var=tensor([0.2854], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 782: entropy set to 0 due to p0 or p1 being zero or negative
Index 783: mean=tensor([2.9771], device='cuda:0'), var=tensor([0.2858], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 783: entropy set to 0 due to p0 or p1 being zero or negative
Index 784: mean=tensor([2.9743], device='cuda:0'), var=tensor([0.2861], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 784: entropy set to 0 due to p0 or p1 being zero or negative
Index 785: mean=tensor([2.9719], device='cuda:0'), var=tensor([0.2864], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 785: entropy set to 0 due to p0 or p1 being zero or negative
Index 786: mean=tensor([2.9698], device='cuda:0'), var=tensor([0.2867], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 786: entropy set to 0 due to p0 or p1 being zero or negative
Index 787: mean=tensor([2.9681], device='cuda:0'), var=tensor([0.2871], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 787: entropy=5.164349090591713e-07
Index 788: mean=tensor([2.9668], device='cuda:0'), var=tensor([0.2874], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 788: entropy=5.164349090591713e-07
Index 789: mean=tensor([2.9658], device='cuda:0'), var=tensor([0.2877], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 789: entropy=5.164349090591713e-07
Index 790: mean=tensor([2.9652], device='cuda:0'), var=tensor([0.2881], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 790: entropy=5.164349090591713e-07
Index 791: mean=tensor([2.9649], device='cuda:0'), var=tensor([0.2884], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 791: entropy=5.164349090591713e-07
Index 792: mean=tensor([2.9649], device='cuda:0'), var=tensor([0.2887], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 792: entropy=5.164349090591713e-07
Index 793: mean=tensor([2.9653], device='cuda:0'), var=tensor([0.2891], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 793: entropy=5.164349090591713e-07
Index 794: mean=tensor([2.9660], device='cuda:0'), var=tensor([0.2894], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 794: entropy=5.164349090591713e-07
Index 795: mean=tensor([2.9671], device='cuda:0'), var=tensor([0.2897], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 795: entropy=5.164349090591713e-07
Index 796: mean=tensor([2.9684], device='cuda:0'), var=tensor([0.2900], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 796: entropy=5.164349090591713e-07
Index 797: mean=tensor([2.9701], device='cuda:0'), var=tensor([0.2904], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 797: entropy=5.164349090591713e-07
Index 798: mean=tensor([2.9721], device='cuda:0'), var=tensor([0.2907], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 798: entropy=5.164349090591713e-07
Index 799: mean=tensor([2.9744], device='cuda:0'), var=tensor([0.2910], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 799: entropy=5.164349090591713e-07
Index 800: mean=tensor([2.9769], device='cuda:0'), var=tensor([0.2913], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 800: entropy=5.164349090591713e-07
Index 801: mean=tensor([2.9798], device='cuda:0'), var=tensor([0.2917], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 801: entropy=5.164349090591713e-07
Index 802: mean=tensor([2.9830], device='cuda:0'), var=tensor([0.2920], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 802: entropy=5.164349090591713e-07
Index 803: mean=tensor([2.9864], device='cuda:0'), var=tensor([0.2923], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 803: entropy=5.164349090591713e-07
Index 804: mean=tensor([2.9901], device='cuda:0'), var=tensor([0.2926], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 804: entropy=5.164349090591713e-07
Index 805: mean=tensor([2.9941], device='cuda:0'), var=tensor([0.2929], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 805: entropy=5.164349090591713e-07
Index 806: mean=tensor([2.9983], device='cuda:0'), var=tensor([0.2932], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 806: entropy=5.164349090591713e-07
Index 807: mean=tensor([3.0028], device='cuda:0'), var=tensor([0.2935], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 807: entropy set to 0 due to p0 or p1 being zero or negative
Index 808: mean=tensor([3.0075], device='cuda:0'), var=tensor([0.2938], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 808: entropy set to 0 due to p0 or p1 being zero or negative
Index 809: mean=tensor([3.0125], device='cuda:0'), var=tensor([0.2940], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 809: entropy set to 0 due to p0 or p1 being zero or negative
Index 810: mean=tensor([3.0177], device='cuda:0'), var=tensor([0.2943], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 810: entropy set to 0 due to p0 or p1 being zero or negative
Index 811: mean=tensor([3.0231], device='cuda:0'), var=tensor([0.2946], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 811: entropy set to 0 due to p0 or p1 being zero or negative
Index 812: mean=tensor([3.0287], device='cuda:0'), var=tensor([0.2948], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 812: entropy set to 0 due to p0 or p1 being zero or negative
Index 813: mean=tensor([3.0346], device='cuda:0'), var=tensor([0.2951], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 813: entropy set to 0 due to p0 or p1 being zero or negative
Index 814: mean=tensor([3.0406], device='cuda:0'), var=tensor([0.2953], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 814: entropy set to 0 due to p0 or p1 being zero or negative
Index 815: mean=tensor([3.0469], device='cuda:0'), var=tensor([0.2956], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 815: entropy set to 0 due to p0 or p1 being zero or negative
Index 816: mean=tensor([3.0533], device='cuda:0'), var=tensor([0.2958], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 816: entropy set to 0 due to p0 or p1 being zero or negative
Index 817: mean=tensor([3.0599], device='cuda:0'), var=tensor([0.2960], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 817: entropy set to 0 due to p0 or p1 being zero or negative
Index 818: mean=tensor([3.0667], device='cuda:0'), var=tensor([0.2963], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 818: entropy set to 0 due to p0 or p1 being zero or negative
Index 819: mean=tensor([3.0736], device='cuda:0'), var=tensor([0.2965], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 819: entropy set to 0 due to p0 or p1 being zero or negative
Index 820: mean=tensor([3.0807], device='cuda:0'), var=tensor([0.2967], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 820: entropy set to 0 due to p0 or p1 being zero or negative
Index 821: mean=tensor([3.0880], device='cuda:0'), var=tensor([0.2969], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 821: entropy set to 0 due to p0 or p1 being zero or negative
Index 822: mean=tensor([3.0954], device='cuda:0'), var=tensor([0.2971], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 822: entropy set to 0 due to p0 or p1 being zero or negative
Index 823: mean=tensor([3.1029], device='cuda:0'), var=tensor([0.2972], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 823: entropy set to 0 due to p0 or p1 being zero or negative
Index 824: mean=tensor([3.1105], device='cuda:0'), var=tensor([0.2974], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 824: entropy set to 0 due to p0 or p1 being zero or negative
Index 825: mean=tensor([3.1182], device='cuda:0'), var=tensor([0.2976], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 825: entropy set to 0 due to p0 or p1 being zero or negative
Index 826: mean=tensor([3.1261], device='cuda:0'), var=tensor([0.2977], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 826: entropy set to 0 due to p0 or p1 being zero or negative
Index 827: mean=tensor([3.1340], device='cuda:0'), var=tensor([0.2979], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 827: entropy set to 0 due to p0 or p1 being zero or negative
Index 828: mean=tensor([3.1421], device='cuda:0'), var=tensor([0.2980], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 828: entropy set to 0 due to p0 or p1 being zero or negative
Index 829: mean=tensor([3.1502], device='cuda:0'), var=tensor([0.2981], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 829: entropy set to 0 due to p0 or p1 being zero or negative
Index 830: mean=tensor([3.1584], device='cuda:0'), var=tensor([0.2983], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 830: entropy set to 0 due to p0 or p1 being zero or negative
Index 831: mean=tensor([3.1666], device='cuda:0'), var=tensor([0.2984], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 831: entropy set to 0 due to p0 or p1 being zero or negative
Index 832: mean=tensor([3.1749], device='cuda:0'), var=tensor([0.2985], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 832: entropy set to 0 due to p0 or p1 being zero or negative
Index 833: mean=tensor([3.1833], device='cuda:0'), var=tensor([0.2986], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 833: entropy set to 0 due to p0 or p1 being zero or negative
Index 834: mean=tensor([3.1917], device='cuda:0'), var=tensor([0.2987], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 834: entropy set to 0 due to p0 or p1 being zero or negative
Index 835: mean=tensor([3.2001], device='cuda:0'), var=tensor([0.2987], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 835: entropy set to 0 due to p0 or p1 being zero or negative
Index 836: mean=tensor([3.2086], device='cuda:0'), var=tensor([0.2988], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 836: entropy set to 0 due to p0 or p1 being zero or negative
Index 837: mean=tensor([3.2170], device='cuda:0'), var=tensor([0.2988], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 837: entropy set to 0 due to p0 or p1 being zero or negative
Index 838: mean=tensor([3.2255], device='cuda:0'), var=tensor([0.2989], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 838: entropy set to 0 due to p0 or p1 being zero or negative
Index 839: mean=tensor([3.2340], device='cuda:0'), var=tensor([0.2989], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 839: entropy set to 0 due to p0 or p1 being zero or negative
Index 840: mean=tensor([3.2424], device='cuda:0'), var=tensor([0.2990], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 840: entropy set to 0 due to p0 or p1 being zero or negative
Index 841: mean=tensor([3.2509], device='cuda:0'), var=tensor([0.2990], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 841: entropy set to 0 due to p0 or p1 being zero or negative
Index 842: mean=tensor([3.2593], device='cuda:0'), var=tensor([0.2990], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 842: entropy set to 0 due to p0 or p1 being zero or negative
Index 843: mean=tensor([3.2677], device='cuda:0'), var=tensor([0.2990], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 843: entropy set to 0 due to p0 or p1 being zero or negative
Index 844: mean=tensor([3.2760], device='cuda:0'), var=tensor([0.2990], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 844: entropy set to 0 due to p0 or p1 being zero or negative
Index 845: mean=tensor([3.2843], device='cuda:0'), var=tensor([0.2990], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 845: entropy set to 0 due to p0 or p1 being zero or negative
Index 846: mean=tensor([3.2925], device='cuda:0'), var=tensor([0.2990], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 846: entropy set to 0 due to p0 or p1 being zero or negative
Index 847: mean=tensor([3.3007], device='cuda:0'), var=tensor([0.2989], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 847: entropy set to 0 due to p0 or p1 being zero or negative
Index 848: mean=tensor([3.3087], device='cuda:0'), var=tensor([0.2989], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 848: entropy set to 0 due to p0 or p1 being zero or negative
Index 849: mean=tensor([3.3167], device='cuda:0'), var=tensor([0.2988], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 849: entropy set to 0 due to p0 or p1 being zero or negative
Index 850: mean=tensor([3.3247], device='cuda:0'), var=tensor([0.2988], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 850: entropy set to 0 due to p0 or p1 being zero or negative
Index 851: mean=tensor([3.3325], device='cuda:0'), var=tensor([0.2987], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 851: entropy set to 0 due to p0 or p1 being zero or negative
Index 852: mean=tensor([3.3402], device='cuda:0'), var=tensor([0.2986], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 852: entropy set to 0 due to p0 or p1 being zero or negative
Index 853: mean=tensor([3.3478], device='cuda:0'), var=tensor([0.2985], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 853: entropy set to 0 due to p0 or p1 being zero or negative
Index 854: mean=tensor([3.3553], device='cuda:0'), var=tensor([0.2985], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 854: entropy set to 0 due to p0 or p1 being zero or negative
Index 855: mean=tensor([3.3626], device='cuda:0'), var=tensor([0.2984], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 855: entropy set to 0 due to p0 or p1 being zero or negative
Index 856: mean=tensor([3.3698], device='cuda:0'), var=tensor([0.2982], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 856: entropy set to 0 due to p0 or p1 being zero or negative
Index 857: mean=tensor([3.3769], device='cuda:0'), var=tensor([0.2981], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 857: entropy set to 0 due to p0 or p1 being zero or negative
Index 858: mean=tensor([3.3839], device='cuda:0'), var=tensor([0.2980], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 858: entropy set to 0 due to p0 or p1 being zero or negative
Index 859: mean=tensor([3.3907], device='cuda:0'), var=tensor([0.2979], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 859: entropy set to 0 due to p0 or p1 being zero or negative
Index 860: mean=tensor([3.3973], device='cuda:0'), var=tensor([0.2977], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 860: entropy set to 0 due to p0 or p1 being zero or negative
Index 861: mean=tensor([3.4038], device='cuda:0'), var=tensor([0.2976], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 861: entropy set to 0 due to p0 or p1 being zero or negative
Index 862: mean=tensor([3.4101], device='cuda:0'), var=tensor([0.2974], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 862: entropy set to 0 due to p0 or p1 being zero or negative
Index 863: mean=tensor([3.4162], device='cuda:0'), var=tensor([0.2973], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 863: entropy set to 0 due to p0 or p1 being zero or negative
Index 864: mean=tensor([3.4221], device='cuda:0'), var=tensor([0.2971], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 864: entropy set to 0 due to p0 or p1 being zero or negative
Index 865: mean=tensor([3.4279], device='cuda:0'), var=tensor([0.2970], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 865: entropy set to 0 due to p0 or p1 being zero or negative
Index 866: mean=tensor([3.4334], device='cuda:0'), var=tensor([0.2968], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 866: entropy set to 0 due to p0 or p1 being zero or negative
Index 867: mean=tensor([3.4388], device='cuda:0'), var=tensor([0.2966], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 867: entropy set to 0 due to p0 or p1 being zero or negative
Index 868: mean=tensor([3.4439], device='cuda:0'), var=tensor([0.2964], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 868: entropy set to 0 due to p0 or p1 being zero or negative
Index 869: mean=tensor([3.4489], device='cuda:0'), var=tensor([0.2962], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 869: entropy set to 0 due to p0 or p1 being zero or negative
Index 870: mean=tensor([3.4536], device='cuda:0'), var=tensor([0.2960], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 870: entropy set to 0 due to p0 or p1 being zero or negative
Index 871: mean=tensor([3.4581], device='cuda:0'), var=tensor([0.2958], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 871: entropy set to 0 due to p0 or p1 being zero or negative
Index 872: mean=tensor([3.4624], device='cuda:0'), var=tensor([0.2956], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 872: entropy set to 0 due to p0 or p1 being zero or negative
Index 873: mean=tensor([3.4664], device='cuda:0'), var=tensor([0.2953], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 873: entropy set to 0 due to p0 or p1 being zero or negative
Index 874: mean=tensor([3.4702], device='cuda:0'), var=tensor([0.2951], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 874: entropy set to 0 due to p0 or p1 being zero or negative
Index 875: mean=tensor([3.4738], device='cuda:0'), var=tensor([0.2949], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 875: entropy set to 0 due to p0 or p1 being zero or negative
Index 876: mean=tensor([3.4772], device='cuda:0'), var=tensor([0.2946], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 876: entropy set to 0 due to p0 or p1 being zero or negative
Index 877: mean=tensor([3.4802], device='cuda:0'), var=tensor([0.2944], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 877: entropy set to 0 due to p0 or p1 being zero or negative
Index 878: mean=tensor([3.4831], device='cuda:0'), var=tensor([0.2941], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 878: entropy set to 0 due to p0 or p1 being zero or negative
Index 879: mean=tensor([3.4857], device='cuda:0'), var=tensor([0.2939], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 879: entropy set to 0 due to p0 or p1 being zero or negative
Index 880: mean=tensor([3.4880], device='cuda:0'), var=tensor([0.2936], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 880: entropy set to 0 due to p0 or p1 being zero or negative
Index 881: mean=tensor([3.4901], device='cuda:0'), var=tensor([0.2934], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 881: entropy set to 0 due to p0 or p1 being zero or negative
Index 882: mean=tensor([3.4919], device='cuda:0'), var=tensor([0.2931], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 882: entropy set to 0 due to p0 or p1 being zero or negative
Index 883: mean=tensor([3.4935], device='cuda:0'), var=tensor([0.2928], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 883: entropy set to 0 due to p0 or p1 being zero or negative
Index 884: mean=tensor([3.4948], device='cuda:0'), var=tensor([0.2926], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 884: entropy set to 0 due to p0 or p1 being zero or negative
Index 885: mean=tensor([3.4958], device='cuda:0'), var=tensor([0.2923], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 885: entropy set to 0 due to p0 or p1 being zero or negative
Index 886: mean=tensor([3.4966], device='cuda:0'), var=tensor([0.2920], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 886: entropy set to 0 due to p0 or p1 being zero or negative
Index 887: mean=tensor([3.4971], device='cuda:0'), var=tensor([0.2917], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 887: entropy set to 0 due to p0 or p1 being zero or negative
Index 888: mean=tensor([3.4973], device='cuda:0'), var=tensor([0.2914], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 888: entropy set to 0 due to p0 or p1 being zero or negative
Index 889: mean=tensor([3.4972], device='cuda:0'), var=tensor([0.2911], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 889: entropy set to 0 due to p0 or p1 being zero or negative
Index 890: mean=tensor([3.4969], device='cuda:0'), var=tensor([0.2908], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 890: entropy set to 0 due to p0 or p1 being zero or negative
Index 891: mean=tensor([3.4962], device='cuda:0'), var=tensor([0.2905], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 891: entropy set to 0 due to p0 or p1 being zero or negative
Index 892: mean=tensor([3.4953], device='cuda:0'), var=tensor([0.2902], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 892: entropy set to 0 due to p0 or p1 being zero or negative
Index 893: mean=tensor([3.4942], device='cuda:0'), var=tensor([0.2899], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 893: entropy set to 0 due to p0 or p1 being zero or negative
Index 894: mean=tensor([3.4927], device='cuda:0'), var=tensor([0.2896], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 894: entropy set to 0 due to p0 or p1 being zero or negative
Index 895: mean=tensor([3.4910], device='cuda:0'), var=tensor([0.2893], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 895: entropy set to 0 due to p0 or p1 being zero or negative
Index 896: mean=tensor([3.4890], device='cuda:0'), var=tensor([0.2890], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 896: entropy set to 0 due to p0 or p1 being zero or negative
Index 897: mean=tensor([3.4867], device='cuda:0'), var=tensor([0.2887], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 897: entropy set to 0 due to p0 or p1 being zero or negative
Index 898: mean=tensor([3.4841], device='cuda:0'), var=tensor([0.2884], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 898: entropy set to 0 due to p0 or p1 being zero or negative
Index 899: mean=tensor([3.4812], device='cuda:0'), var=tensor([0.2881], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 899: entropy set to 0 due to p0 or p1 being zero or negative
Index 900: mean=tensor([3.4781], device='cuda:0'), var=tensor([0.2877], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 900: entropy set to 0 due to p0 or p1 being zero or negative
Index 901: mean=tensor([3.4747], device='cuda:0'), var=tensor([0.2874], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 901: entropy set to 0 due to p0 or p1 being zero or negative
Index 902: mean=tensor([3.4710], device='cuda:0'), var=tensor([0.2871], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 902: entropy set to 0 due to p0 or p1 being zero or negative
Index 903: mean=tensor([3.4670], device='cuda:0'), var=tensor([0.2868], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 903: entropy set to 0 due to p0 or p1 being zero or negative
Index 904: mean=tensor([3.4628], device='cuda:0'), var=tensor([0.2865], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 904: entropy set to 0 due to p0 or p1 being zero or negative
Index 905: mean=tensor([3.4582], device='cuda:0'), var=tensor([0.2862], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 905: entropy set to 0 due to p0 or p1 being zero or negative
Index 906: mean=tensor([3.4534], device='cuda:0'), var=tensor([0.2859], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 906: entropy set to 0 due to p0 or p1 being zero or negative
Index 907: mean=tensor([3.4484], device='cuda:0'), var=tensor([0.2856], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 907: entropy set to 0 due to p0 or p1 being zero or negative
Index 908: mean=tensor([3.4430], device='cuda:0'), var=tensor([0.2853], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 908: entropy set to 0 due to p0 or p1 being zero or negative
Index 909: mean=tensor([3.4375], device='cuda:0'), var=tensor([0.2849], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 909: entropy set to 0 due to p0 or p1 being zero or negative
Index 910: mean=tensor([3.4316], device='cuda:0'), var=tensor([0.2846], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 910: entropy set to 0 due to p0 or p1 being zero or negative
Index 911: mean=tensor([3.4255], device='cuda:0'), var=tensor([0.2844], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 911: entropy set to 0 due to p0 or p1 being zero or negative
Index 912: mean=tensor([3.4191], device='cuda:0'), var=tensor([0.2841], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 912: entropy set to 0 due to p0 or p1 being zero or negative
Index 913: mean=tensor([3.4125], device='cuda:0'), var=tensor([0.2838], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 913: entropy set to 0 due to p0 or p1 being zero or negative
Index 914: mean=tensor([3.4056], device='cuda:0'), var=tensor([0.2835], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 914: entropy set to 0 due to p0 or p1 being zero or negative
Index 915: mean=tensor([3.3984], device='cuda:0'), var=tensor([0.2832], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 915: entropy set to 0 due to p0 or p1 being zero or negative
Index 916: mean=tensor([3.3910], device='cuda:0'), var=tensor([0.2829], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 916: entropy set to 0 due to p0 or p1 being zero or negative
Index 917: mean=tensor([3.3834], device='cuda:0'), var=tensor([0.2827], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 917: entropy set to 0 due to p0 or p1 being zero or negative
Index 918: mean=tensor([3.3756], device='cuda:0'), var=tensor([0.2824], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 918: entropy set to 0 due to p0 or p1 being zero or negative
Index 919: mean=tensor([3.3675], device='cuda:0'), var=tensor([0.2821], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 919: entropy set to 0 due to p0 or p1 being zero or negative
Index 920: mean=tensor([3.3591], device='cuda:0'), var=tensor([0.2819], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 920: entropy set to 0 due to p0 or p1 being zero or negative
Index 921: mean=tensor([3.3506], device='cuda:0'), var=tensor([0.2817], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 921: entropy set to 0 due to p0 or p1 being zero or negative
Index 922: mean=tensor([3.3418], device='cuda:0'), var=tensor([0.2814], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 922: entropy set to 0 due to p0 or p1 being zero or negative
Index 923: mean=tensor([3.3328], device='cuda:0'), var=tensor([0.2812], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 923: entropy set to 0 due to p0 or p1 being zero or negative
Index 924: mean=tensor([3.3236], device='cuda:0'), var=tensor([0.2810], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 924: entropy set to 0 due to p0 or p1 being zero or negative
Index 925: mean=tensor([3.3142], device='cuda:0'), var=tensor([0.2808], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 925: entropy set to 0 due to p0 or p1 being zero or negative
Index 926: mean=tensor([3.3046], device='cuda:0'), var=tensor([0.2806], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 926: entropy set to 0 due to p0 or p1 being zero or negative
Index 927: mean=tensor([3.2947], device='cuda:0'), var=tensor([0.2804], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 927: entropy set to 0 due to p0 or p1 being zero or negative
Index 928: mean=tensor([3.2847], device='cuda:0'), var=tensor([0.2803], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 928: entropy set to 0 due to p0 or p1 being zero or negative
Index 929: mean=tensor([3.2745], device='cuda:0'), var=tensor([0.2801], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 929: entropy set to 0 due to p0 or p1 being zero or negative
Index 930: mean=tensor([3.2641], device='cuda:0'), var=tensor([0.2800], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 930: entropy set to 0 due to p0 or p1 being zero or negative
Index 931: mean=tensor([3.2536], device='cuda:0'), var=tensor([0.2798], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 931: entropy set to 0 due to p0 or p1 being zero or negative
Index 932: mean=tensor([3.2428], device='cuda:0'), var=tensor([0.2797], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 932: entropy set to 0 due to p0 or p1 being zero or negative
Index 933: mean=tensor([3.2319], device='cuda:0'), var=tensor([0.2796], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 933: entropy set to 0 due to p0 or p1 being zero or negative
Index 934: mean=tensor([3.2208], device='cuda:0'), var=tensor([0.2795], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 934: entropy set to 0 due to p0 or p1 being zero or negative
Index 935: mean=tensor([3.2096], device='cuda:0'), var=tensor([0.2795], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 935: entropy set to 0 due to p0 or p1 being zero or negative
Index 936: mean=tensor([3.1982], device='cuda:0'), var=tensor([0.2794], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 936: entropy set to 0 due to p0 or p1 being zero or negative
Index 937: mean=tensor([3.1867], device='cuda:0'), var=tensor([0.2794], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 937: entropy set to 0 due to p0 or p1 being zero or negative
Index 938: mean=tensor([3.1751], device='cuda:0'), var=tensor([0.2794], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 938: entropy set to 0 due to p0 or p1 being zero or negative
Index 939: mean=tensor([3.1633], device='cuda:0'), var=tensor([0.2794], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 939: entropy set to 0 due to p0 or p1 being zero or negative
Index 940: mean=tensor([3.1514], device='cuda:0'), var=tensor([0.2795], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 940: entropy set to 0 due to p0 or p1 being zero or negative
Index 941: mean=tensor([3.1393], device='cuda:0'), var=tensor([0.2795], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 941: entropy set to 0 due to p0 or p1 being zero or negative
Index 942: mean=tensor([3.1272], device='cuda:0'), var=tensor([0.2796], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 942: entropy set to 0 due to p0 or p1 being zero or negative
Index 943: mean=tensor([3.1149], device='cuda:0'), var=tensor([0.2797], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 943: entropy set to 0 due to p0 or p1 being zero or negative
Index 944: mean=tensor([3.1026], device='cuda:0'), var=tensor([0.2798], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 944: entropy set to 0 due to p0 or p1 being zero or negative
Index 945: mean=tensor([3.0901], device='cuda:0'), var=tensor([0.2800], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 945: entropy set to 0 due to p0 or p1 being zero or negative
Index 946: mean=tensor([3.0776], device='cuda:0'), var=tensor([0.2802], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 946: entropy set to 0 due to p0 or p1 being zero or negative
Index 947: mean=tensor([3.0650], device='cuda:0'), var=tensor([0.2804], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 947: entropy set to 0 due to p0 or p1 being zero or negative
Index 948: mean=tensor([3.0523], device='cuda:0'), var=tensor([0.2806], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 948: entropy set to 0 due to p0 or p1 being zero or negative
Index 949: mean=tensor([3.0395], device='cuda:0'), var=tensor([0.2809], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 949: entropy set to 0 due to p0 or p1 being zero or negative
Index 950: mean=tensor([3.0267], device='cuda:0'), var=tensor([0.2812], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 950: entropy set to 0 due to p0 or p1 being zero or negative
Index 951: mean=tensor([3.0139], device='cuda:0'), var=tensor([0.2815], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 951: entropy set to 0 due to p0 or p1 being zero or negative
Index 952: mean=tensor([3.0010], device='cuda:0'), var=tensor([0.2819], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 952: entropy set to 0 due to p0 or p1 being zero or negative
Index 953: mean=tensor([2.9880], device='cuda:0'), var=tensor([0.2822], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 953: entropy set to 0 due to p0 or p1 being zero or negative
Index 954: mean=tensor([2.9750], device='cuda:0'), var=tensor([0.2827], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 954: entropy set to 0 due to p0 or p1 being zero or negative
Index 955: mean=tensor([2.9620], device='cuda:0'), var=tensor([0.2831], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([0.], device='cuda:0')
Index 955: entropy set to 0 due to p0 or p1 being zero or negative
Index 956: mean=tensor([2.9490], device='cuda:0'), var=tensor([0.2836], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 956: entropy=5.164349090591713e-07
Index 957: mean=tensor([2.9359], device='cuda:0'), var=tensor([0.2842], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 957: entropy=5.164349090591713e-07
Index 958: mean=tensor([2.9229], device='cuda:0'), var=tensor([0.2847], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 958: entropy=5.164349090591713e-07
Index 959: mean=tensor([2.9098], device='cuda:0'), var=tensor([0.2853], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 959: entropy=5.164349090591713e-07
Index 960: mean=tensor([2.8968], device='cuda:0'), var=tensor([0.2860], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 960: entropy=5.164349090591713e-07
Index 961: mean=tensor([2.8837], device='cuda:0'), var=tensor([0.2867], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 961: entropy=5.164349090591713e-07
Index 962: mean=tensor([2.8707], device='cuda:0'), var=tensor([0.2874], device='cuda:0'), p0=tensor([1.], device='cuda:0'), p1=tensor([2.9802e-08], device='cuda:0')
Index 962: entropy=5.164349090591713e-07
Index 963: mean=tensor([2.8578], device='cuda:0'), var=tensor([0.2882], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-08], device='cuda:0')
Index 963: entropy=1.0511596428841585e-06
Index 964: mean=tensor([2.8448], device='cuda:0'), var=tensor([0.2890], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-08], device='cuda:0')
Index 964: entropy=1.0511596428841585e-06
Index 965: mean=tensor([2.8319], device='cuda:0'), var=tensor([0.2899], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.9605e-08], device='cuda:0')
Index 965: entropy=1.0511596428841585e-06
Index 966: mean=tensor([2.8191], device='cuda:0'), var=tensor([0.2908], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([8.9407e-08], device='cuda:0')
Index 966: entropy=1.5702904647696414e-06
Index 967: mean=tensor([2.8063], device='cuda:0'), var=tensor([0.2917], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([8.9407e-08], device='cuda:0')
Index 967: entropy=1.5702904647696414e-06
Index 968: mean=tensor([2.7935], device='cuda:0'), var=tensor([0.2927], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.1921e-07], device='cuda:0')
Index 968: entropy=2.0196896457491675e-06
Index 969: mean=tensor([2.7809], device='cuda:0'), var=tensor([0.2938], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.4901e-07], device='cuda:0')
Index 969: entropy=2.4615587790322024e-06
Index 970: mean=tensor([2.7683], device='cuda:0'), var=tensor([0.2949], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.7881e-07], device='cuda:0')
Index 970: entropy=2.9570319384220056e-06
Index 971: mean=tensor([2.7558], device='cuda:0'), var=tensor([0.2961], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.0862e-07], device='cuda:0')
Index 971: entropy=3.4475144730095053e-06
Index 972: mean=tensor([2.7434], device='cuda:0'), var=tensor([0.2973], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.3842e-07], device='cuda:0')
Index 972: entropy=3.874120011460036e-06
Index 973: mean=tensor([2.7310], device='cuda:0'), var=tensor([0.2985], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.9802e-07], device='cuda:0')
Index 973: entropy=4.776148216478759e-06
Index 974: mean=tensor([2.7188], device='cuda:0'), var=tensor([0.2998], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.5763e-07], device='cuda:0')
Index 974: entropy=5.666174729412887e-06
Index 975: mean=tensor([2.7067], device='cuda:0'), var=tensor([0.3012], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.1723e-07], device='cuda:0')
Index 975: entropy=6.546220447489759e-06
Index 976: mean=tensor([2.6947], device='cuda:0'), var=tensor([0.3026], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.7684e-07], device='cuda:0')
Index 976: entropy=7.417722372338176e-06
Index 977: mean=tensor([2.6828], device='cuda:0'), var=tensor([0.3041], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.6624e-07], device='cuda:0')
Index 977: entropy=8.741038072912488e-06
Index 978: mean=tensor([2.6710], device='cuda:0'), var=tensor([0.3057], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.8545e-07], device='cuda:0')
Index 978: entropy=1.0444023246236611e-05
Index 979: mean=tensor([2.6594], device='cuda:0'), var=tensor([0.3073], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([8.0466e-07], device='cuda:0')
Index 979: entropy=1.2126170076953713e-05
Index 980: mean=tensor([2.6479], device='cuda:0'), var=tensor([0.3090], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([9.5367e-07], device='cuda:0')
Index 980: entropy=1.4174407624523155e-05
Index 981: mean=tensor([2.6366], device='cuda:0'), var=tensor([0.3107], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.1325e-06], device='cuda:0')
Index 981: entropy=1.663749026192818e-05
Index 982: mean=tensor([2.6254], device='cuda:0'), var=tensor([0.3125], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.3113e-06], device='cuda:0')
Index 982: entropy=1.9072222130489536e-05
Index 983: mean=tensor([2.6143], device='cuda:0'), var=tensor([0.3143], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.5497e-06], device='cuda:0')
Index 983: entropy=2.22810085688252e-05
Index 984: mean=tensor([2.6035], device='cuda:0'), var=tensor([0.3162], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.8179e-06], device='cuda:0')
Index 984: entropy=2.581733679107856e-05
Index 985: mean=tensor([2.5927], device='cuda:0'), var=tensor([0.3182], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.1458e-06], device='cuda:0')
Index 985: entropy=3.0152348699630238e-05
Index 986: mean=tensor([2.5822], device='cuda:0'), var=tensor([0.3203], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.5332e-06], device='cuda:0')
Index 986: entropy=3.5146244044881314e-05
Index 987: mean=tensor([2.5718], device='cuda:0'), var=tensor([0.3224], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([2.9504e-06], device='cuda:0')
Index 987: entropy=4.054970486322418e-05
Index 988: mean=tensor([2.5616], device='cuda:0'), var=tensor([0.3246], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([3.4571e-06], device='cuda:0')
Index 988: entropy=4.6930017560953274e-05
Index 989: mean=tensor([2.5516], device='cuda:0'), var=tensor([0.3268], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.0233e-06], device='cuda:0')
Index 989: entropy=5.403636168921366e-05
Index 990: mean=tensor([2.5418], device='cuda:0'), var=tensor([0.3291], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([4.7088e-06], device='cuda:0')
Index 990: entropy=6.246689008548856e-05
Index 991: mean=tensor([2.5322], device='cuda:0'), var=tensor([0.3315], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([5.4538e-06], device='cuda:0')
Index 991: entropy=7.15795686119236e-05
Index 992: mean=tensor([2.5228], device='cuda:0'), var=tensor([0.3340], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([6.3479e-06], device='cuda:0')
Index 992: entropy=8.228578371927142e-05
Index 993: mean=tensor([2.5136], device='cuda:0'), var=tensor([0.3365], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([7.3612e-06], device='cuda:0')
Index 993: entropy=9.43948034546338e-05
Index 994: mean=tensor([2.5046], device='cuda:0'), var=tensor([0.3391], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([8.5235e-06], device='cuda:0')
Index 994: entropy=0.00010801516327774152
Index 995: mean=tensor([2.4958], device='cuda:0'), var=tensor([0.3418], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([9.8348e-06], device='cuda:0')
Index 995: entropy=0.0001232255162904039
Index 996: mean=tensor([2.4873], device='cuda:0'), var=tensor([0.3446], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.1325e-05], device='cuda:0')
Index 996: entropy=0.00014029833255335689
Index 997: mean=tensor([2.4789], device='cuda:0'), var=tensor([0.3474], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.3024e-05], device='cuda:0')
Index 997: entropy=0.00015949306543916464
Index 998: mean=tensor([2.4708], device='cuda:0'), var=tensor([0.3503], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.4931e-05], device='cuda:0')
Index 998: entropy=0.00018081501184497029
Index 999: mean=tensor([2.4629], device='cuda:0'), var=tensor([0.3533], device='cuda:0'), p0=tensor([1.0000], device='cuda:0'), p1=tensor([1.7077e-05], device='cuda:0')
Index 999: entropy=0.00020451161253731698
Entropy:  tensor([2.6112e-03, 2.3597e-03, 2.1294e-03, 1.9191e-03, 1.7272e-03, 1.5525e-03,
        1.3938e-03, 1.2499e-03, 1.1194e-03, 1.0014e-03, 8.9480e-04, 7.9850e-04,
        7.1203e-04, 6.3420e-04, 5.6443e-04, 5.0170e-04, 4.4561e-04, 3.9520e-04,
        3.5029e-04, 3.1041e-04, 2.7479e-04, 2.4284e-04, 2.1466e-04, 1.8947e-04,
        1.6722e-04, 1.4738e-04, 1.3008e-04, 1.1426e-04, 1.0066e-04, 8.8743e-05,
        7.7996e-05, 6.8292e-05, 5.9933e-05, 5.2895e-05, 4.6180e-05, 4.0550e-05,
        3.5560e-05, 3.1347e-05, 2.7389e-05, 2.3871e-05, 2.1053e-05, 1.8264e-05,
        1.5820e-05, 1.4174e-05, 1.2126e-05, 1.0837e-05, 9.1391e-06, 8.2818e-06,
        7.0128e-06, 6.0775e-06, 5.2523e-06, 4.7761e-06, 4.2970e-06, 3.4475e-06,
        2.9570e-06, 2.9570e-06, 2.4616e-06, 2.0197e-06, 2.0197e-06, 1.5703e-06,
        1.5703e-06, 1.0512e-06, 1.0512e-06, 1.0512e-06, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 1.0512e-06, 1.0512e-06, 1.0512e-06, 1.0512e-06, 1.0512e-06,
        1.0512e-06, 1.5703e-06, 1.5703e-06, 1.5703e-06, 1.5703e-06, 2.0197e-06,
        2.0197e-06, 2.0197e-06, 2.4616e-06, 2.4616e-06, 2.4616e-06, 2.9570e-06,
        2.9570e-06, 2.9570e-06, 3.4475e-06, 3.4475e-06, 3.8741e-06, 3.8741e-06,
        4.2970e-06, 4.2970e-06, 4.7761e-06, 4.7761e-06, 5.2523e-06, 5.2523e-06,
        5.6662e-06, 6.0775e-06, 6.0775e-06, 6.5462e-06, 6.5462e-06, 7.0128e-06,
        7.4177e-06, 7.4177e-06, 7.8208e-06, 7.8208e-06, 8.2818e-06, 8.2818e-06,
        8.7410e-06, 8.7410e-06, 9.1391e-06, 9.1391e-06, 9.5358e-06, 9.5358e-06,
        9.5358e-06, 9.9906e-06, 9.9906e-06, 9.9906e-06, 9.9906e-06, 9.9906e-06,
        9.9906e-06, 9.9906e-06, 9.9906e-06, 9.9906e-06, 9.9906e-06, 9.9906e-06,
        9.5358e-06, 9.5358e-06, 9.5358e-06, 9.1391e-06, 9.1391e-06, 8.7410e-06,
        8.7410e-06, 8.2818e-06, 8.2818e-06, 7.8208e-06, 7.4177e-06, 7.4177e-06,
        7.0128e-06, 6.5462e-06, 6.5462e-06, 6.0775e-06, 5.6662e-06, 5.6662e-06,
        5.2523e-06, 4.7761e-06, 4.7761e-06, 4.2970e-06, 3.8741e-06, 3.8741e-06,
        3.4475e-06, 3.4475e-06, 2.9570e-06, 2.9570e-06, 2.4616e-06, 2.4616e-06,
        2.0197e-06, 2.0197e-06, 1.5703e-06, 1.5703e-06, 1.5703e-06, 1.0512e-06,
        1.0512e-06, 1.0512e-06, 1.0512e-06, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 1.0512e-06, 1.0512e-06, 1.0512e-06,
        1.5703e-06, 1.5703e-06, 2.0197e-06, 2.4616e-06, 2.9570e-06, 3.4475e-06,
        3.8741e-06, 4.7761e-06, 5.6662e-06, 6.5462e-06, 7.4177e-06, 8.7410e-06,
        1.0444e-05, 1.2126e-05, 1.4174e-05, 1.6637e-05, 1.9072e-05, 2.2281e-05,
        2.5817e-05, 3.0152e-05, 3.5146e-05, 4.0550e-05, 4.6930e-05, 5.4036e-05,
        6.2467e-05, 7.1580e-05, 8.2286e-05, 9.4395e-05, 1.0802e-04, 1.2323e-04,
        1.4030e-04, 1.5949e-04, 1.8082e-04, 2.0451e-04], device='cuda:0')
Plot saved to /raven/u/dvoss/al_pmssmwithgp/model/plots/gp_plot.png
                                  
================================= 
Global information about the job: 
================================= 
  
Job owner: dvoss(54815)
Job name:  test
Node list: ravg1010
Job start: Tue Jul 30 14:53:55 CEST 2024
Job end:   Tue Jul 30 14:54:27 CEST 2024
Work dir:  /raven/u/dvoss/al_pmssmwithgp/model
Command:   /raven/u/dvoss/al_pmssmwithgp/model/slurm/single_job.sbatch
  
  
  
==========================================================================================
Information on jobsteps (Note: MaxRSS/AveRSS is the maximum/average over all 
tasks of the per-task memory high-water marks; cf. "man sacct"): 
==========================================================================================
  
JobID            JobName NNodes NTasks  NCPUS       MaxRSS       AveRSS    Elapsed ExitCode
------------- ---------- ------ ------ ------ ------------ ------------ ---------- --------
12163500            test      1             4                             00:00:32      0:0
12163500.0        job.sh      1      1      4        1.48M        1.48M   00:00:22      0:0
  
Maximum memory per node: 0.001550 GB (defined as MaxRSS*Ntasks/NNodes)
CPU utilization: 0.0 %
  

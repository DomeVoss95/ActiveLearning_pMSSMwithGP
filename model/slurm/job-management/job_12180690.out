Defaulting to user installation because normal site-packages is not writeable
Requirement already satisfied: uproot in /raven/u/dvoss/.local/lib/python3.9/site-packages (5.3.10)
Requirement already satisfied: fsspec in /raven/u/dvoss/.local/lib/python3.9/site-packages (from uproot) (2024.6.1)
Requirement already satisfied: typing-extensions>=4.1.0 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from uproot) (4.12.2)
Requirement already satisfied: cramjam>=2.5.0 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from uproot) (2.8.3)
Requirement already satisfied: numpy in /raven/u/system/soft/SLE_15/packages/x86_64/anaconda/3/2021.11/lib/python3.9/site-packages (from uproot) (1.20.3)
Requirement already satisfied: awkward>=2.4.6 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from uproot) (2.6.6)
Requirement already satisfied: packaging in /raven/u/system/soft/SLE_15/packages/x86_64/anaconda/3/2021.11/lib/python3.9/site-packages (from uproot) (21.0)
Requirement already satisfied: importlib-metadata>=4.13.0 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from awkward>=2.4.6->uproot) (8.0.0)
Requirement already satisfied: awkward-cpp==35 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from awkward>=2.4.6->uproot) (35)
Requirement already satisfied: zipp>=0.5 in /raven/u/system/soft/SLE_15/packages/x86_64/anaconda/3/2021.11/lib/python3.9/site-packages (from importlib-metadata>=4.13.0->awkward>=2.4.6->uproot) (3.6.0)
Requirement already satisfied: pyparsing>=2.0.2 in /raven/u/system/soft/SLE_15/packages/x86_64/anaconda/3/2021.11/lib/python3.9/site-packages (from packaging->uproot) (3.0.4)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1100]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1100]], device='cuda:0', requires_grad=True)
Iter 1 / 1000 - Loss (Train): 5.387 - Loss (Val): 5.448
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1100]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1200]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1200]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1200]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1400]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1400]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1400]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1500]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1500]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1500]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1599]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1599]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1599]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1799]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1799]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1799]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1898]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1898]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1898]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1997]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1997]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1997]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2097]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2097]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2097]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2196]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2196]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2196]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2295]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2295]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2295]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2393]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2393]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2393]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2492]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2492]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2492]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2590]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2590]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2590]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2688]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2688]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2688]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2786]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2786]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2786]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2884]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2884]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2884]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2981]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2981]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2981]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3078]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3078]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3078]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3175]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3175]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3175]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3271]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3271]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3271]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3368]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3368]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3368]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3559]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3559]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3559]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3655]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3655]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3655]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3750]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3750]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3750]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3845]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3845]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3845]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3939]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3939]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3939]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4033]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4033]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4033]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4127]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4127]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4127]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4221]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4221]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4221]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4406]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4406]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4406]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4499]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4499]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4499]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4591]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4591]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4591]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4683]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4683]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4683]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4774]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4774]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4774]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4865]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4865]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4865]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4955]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4955]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4955]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5046]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5046]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5046]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5136]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5136]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5136]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5403]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5403]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5403]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5579]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5579]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5579]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5667]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5667]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5667]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5754]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5754]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5754]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5841]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5841]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5841]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5927]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5927]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5927]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6013]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6013]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6013]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6099]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6099]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6099]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6184]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6184]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6184]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6269]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6269]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6269]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6437]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6437]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6437]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6770]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6770]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6770]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6852]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6852]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6852]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6933]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6933]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6933]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7015]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7015]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7015]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7096]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7096]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7096]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7176]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7176]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7176]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7256]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7256]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7256]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7336]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7336]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7336]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7495]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7495]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7495]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7573]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7573]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7573]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7651]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7651]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7651]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7807]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7807]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7807]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7884]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7884]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7884]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7961]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7961]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7961]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8037]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8037]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8037]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8113]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8113]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8113]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8189]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8189]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8189]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8264]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8264]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8264]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8339]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8339]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8339]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8413]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8413]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8413]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8561]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8561]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8561]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8707]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8707]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8707]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8780]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8780]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8780]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8852]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8852]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8852]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8924]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8924]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8924]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8995]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8995]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8995]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9066]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9066]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9066]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9137]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9137]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9137]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9277]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9277]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9277]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9347]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9347]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9347]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9485]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9485]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9485]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9621]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9621]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9621]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9689]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9689]], device='cuda:0', requires_grad=True)
Iter 101 / 1000 - Loss (Train): 2.917 - Loss (Val): 2.842
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9689]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9756]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9756]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9756]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9823]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9823]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9823]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9890]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9890]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9890]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9956]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9956]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9956]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0022]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0022]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0022]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0153]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0153]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0153]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0218]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0218]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0218]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0282]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0282]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0282]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0346]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0346]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0346]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0410]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0410]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0410]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0474]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0474]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0474]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0537]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0537]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0537]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0599]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0599]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0599]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0662]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0662]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0662]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0724]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0724]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0724]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0785]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0785]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0785]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0847]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0847]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0847]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0907]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0907]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0907]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0968]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0968]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0968]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1028]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1028]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1028]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1148]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1148]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1148]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1265]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1265]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1265]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1324]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1324]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1324]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1382]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1382]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1382]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1440]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1440]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1440]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1497]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1497]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1497]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1554]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1554]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1554]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1611]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1611]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1611]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1667]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1667]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1667]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1723]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1723]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1723]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1779]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1779]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1779]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1834]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1834]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1834]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1889]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1889]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1889]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1943]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1943]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1943]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2051]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2051]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2051]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2105]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2105]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2105]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2158]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2158]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2158]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2211]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2211]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2211]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2264]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2264]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2264]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2316]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2316]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2316]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2419]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2419]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2419]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2470]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2470]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2470]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2571]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2571]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2571]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2621]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2621]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2621]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2671]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2671]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2671]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2720]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2720]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2720]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2770]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2770]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2770]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2818]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2818]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2818]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2867]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2867]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2867]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2915]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2915]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2915]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2962]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2962]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2962]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3010]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3010]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3010]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3057]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3057]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3057]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3103]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3103]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3103]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3196]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3196]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3196]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3241]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3241]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3241]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3287]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3287]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3287]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3332]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3332]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3332]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3376]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3376]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3376]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3421]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3421]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3421]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3465]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3465]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3465]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3508]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3508]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3508]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3637]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3637]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3637]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3679]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3679]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3679]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3721]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3721]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3721]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3763]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3763]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3763]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3845]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3845]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3845]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3926]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3926]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3926]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3966]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3966]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3966]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4005]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4005]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4005]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4045]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4045]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4045]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4083]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4083]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4083]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4122]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4122]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4122]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4160]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4160]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4160]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4198]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4198]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4198]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4273]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4273]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4273]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4310]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4310]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4310]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4346]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4346]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4346]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4382]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4382]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4382]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4418]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4418]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4418]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4489]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4489]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4489]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4524]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4524]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4524]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4558]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4558]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4558]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4592]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4592]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4592]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4660]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4660]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4660]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4693]], device='cuda:0', requires_grad=True)
Iter 201 / 1000 - Loss (Train): 2.217 - Loss (Val): 2.122
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4726]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4726]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4726]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4758]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4758]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4758]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4790]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4790]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4790]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4822]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4822]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4822]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4853]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4853]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4853]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4884]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4884]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4884]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4915]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4915]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4915]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4945]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4945]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4945]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4975]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4975]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4975]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5005]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5005]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5005]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5034]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5034]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5034]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5063]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5063]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5063]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5092]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5092]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5092]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5120]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5120]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5120]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5148]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5148]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5148]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5176]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5176]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5176]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5203]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5203]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5203]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5230]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5230]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5230]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5257]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5257]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5257]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5334]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5334]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5334]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5360]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5360]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5360]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5385]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5385]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5385]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5409]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5409]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5409]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5457]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5457]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5457]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5481]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5481]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5481]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5504]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5504]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5504]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5526]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5526]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5526]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5571]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5571]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5571]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5593]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5593]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5593]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5614]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5614]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5614]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5636]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5636]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5636]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5656]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5656]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5656]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5677]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5677]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5677]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5697]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5697]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5697]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5717]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5717]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5717]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5755]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5755]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5755]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5774]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5774]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5774]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5793]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5793]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5793]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5811]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5811]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5811]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5829]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5829]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5829]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5847]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5847]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5847]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5864]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5864]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5864]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5881]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5881]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5881]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5898]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5898]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5898]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5914]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5914]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5914]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5930]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5930]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5930]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5946]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5946]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5946]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5962]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5962]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5962]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5977]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5977]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5977]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5992]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5992]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5992]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6006]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6006]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6006]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6021]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6021]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6021]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6035]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6035]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6035]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6062]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6062]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6062]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6076]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6076]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6076]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6089]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6089]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6089]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6102]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6102]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6102]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6114]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6114]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6114]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6126]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6126]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6126]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6139]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6139]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6139]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6162]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6162]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6162]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6173]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6173]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6173]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6184]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6184]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6184]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6206]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6206]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6206]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6226]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6226]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6226]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6246]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6246]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6246]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6256]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6256]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6256]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6265]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6265]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6265]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6292]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6292]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6292]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6317]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6317]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6317]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6325]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6325]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6325]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6348]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6348]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6348]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6355]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6355]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6355]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6362]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6362]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6362]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6369]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6369]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6369]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6376]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6376]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6376]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6383]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6383]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6383]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6389]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6389]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6389]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6402]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6402]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6402]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6408]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6408]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6408]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6413]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6413]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6413]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6419]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6419]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6419]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6425]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6425]], device='cuda:0', requires_grad=True)
Iter 301 / 1000 - Loss (Train): 1.963 - Loss (Val): 1.818
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6425]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6430]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6430]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6430]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6435]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6435]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6435]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6440]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6440]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6440]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6445]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6445]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6445]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6450]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6450]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6450]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6455]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6455]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6455]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6469]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6469]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6469]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6473]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6473]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6473]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6477]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6477]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6477]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6481]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6481]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6481]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6485]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6485]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6485]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6489]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6489]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6489]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6492]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6492]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6492]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6496]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6496]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6496]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6499]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6499]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6499]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6503]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6503]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6503]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6509]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6509]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6509]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6512]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6512]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6512]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6517]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6517]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6517]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6520]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6520]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6520]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6523]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6523]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6523]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6525]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6525]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6525]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6528]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6528]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6528]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6530]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6530]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6530]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6532]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6532]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6532]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6536]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6536]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6536]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6538]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6538]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6538]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6542]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6542]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6542]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6543]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6543]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6543]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6545]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6545]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6545]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6546]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6546]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6546]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6547]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6547]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6547]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6550]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6550]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6550]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6554]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6554]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6554]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6554]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6554]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6554]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6554]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6554]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6554]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6550]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6550]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6550]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6548]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6548]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6548]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6546]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6546]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6546]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6545]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6545]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6545]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6544]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6544]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6544]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6542]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6542]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6542]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6539]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6539]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6539]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6537]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6537]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6537]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6535]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6535]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6535]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6533]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6533]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6533]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6531]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6531]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6531]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6529]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6529]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6529]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6527]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6527]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6527]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6524]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6524]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6524]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6522]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6522]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6522]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6520]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6520]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6520]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6517]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6517]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6517]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6512]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6512]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6512]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6509]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6509]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6509]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6507]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6507]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6507]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6504]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6504]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6504]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6501]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6501]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6501]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6498]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6498]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6498]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6495]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6495]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6495]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6492]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6492]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6492]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6489]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6489]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6489]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6486]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6486]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6486]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6483]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6483]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6483]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6480]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6480]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6480]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6473]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6473]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6473]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6470]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6470]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6470]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6463]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6463]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6463]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6460]], device='cuda:0', requires_grad=True)
Iter 401 / 1000 - Loss (Train): 1.753 - Loss (Val): 1.537
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6457]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6457]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6457]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6450]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6450]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6450]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6446]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6446]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6446]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6443]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6443]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6443]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6440]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6440]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6440]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6436]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6436]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6436]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6429]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6429]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6429]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6426]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6426]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6426]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6422]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6422]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6422]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6419]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6419]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6419]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6415]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6415]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6415]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6412]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6412]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6412]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6409]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6409]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6409]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6405]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6405]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6405]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6402]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6402]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6402]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6398]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6398]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6398]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6391]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6391]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6391]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6388]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6388]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6388]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6384]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6384]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6384]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6381]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6381]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6381]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6374]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6374]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6374]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6371]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6371]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6371]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6364]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6364]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6364]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6360]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6360]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6360]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6357]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6357]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6357]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6350]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6350]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6350]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6346]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6346]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6346]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6343]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6343]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6343]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6336]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6336]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6336]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6329]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6329]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6329]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6326]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6326]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6326]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6322]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6322]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6322]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6318]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6318]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6318]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6315]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6315]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6315]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6311]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6311]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6311]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6308]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6308]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6308]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6304]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6304]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6304]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6297]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6297]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6297]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6293]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6293]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6293]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6289]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6289]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6289]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6282]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6282]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6282]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6278]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6278]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6278]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6270]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6270]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6270]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6266]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6266]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6266]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6258]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6258]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6258]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6254]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6254]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6254]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6250]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6250]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6250]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6246]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6246]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6246]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6242]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6242]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6242]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6238]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6238]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6238]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6234]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6234]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6234]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6229]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6229]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6229]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6221]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6221]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6221]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6212]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6212]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6212]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6203]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6203]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6203]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6198]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6198]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6198]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6194]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6194]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6194]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6189]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6189]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6189]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6185]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6185]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6185]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6175]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6175]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6175]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6170]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6170]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6170]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6161]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6161]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6161]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6156]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6156]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6156]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6151]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6151]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6151]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6146]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6146]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6146]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6141]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6141]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6141]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6136]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6136]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6136]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6131]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6131]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6131]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6125]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6125]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6125]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6120]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6120]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6120]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6115]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6115]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6115]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6110]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6110]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6110]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6104]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6104]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6104]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6099]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6099]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6099]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6094]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6094]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6094]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6083]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6083]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6083]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6077]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6077]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6077]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6071]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6071]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6071]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6066]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6066]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6066]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6054]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6054]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6054]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6049]], device='cuda:0', requires_grad=True)
Iter 501 / 1000 - Loss (Train): 1.423 - Loss (Val): 1.303
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6043]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6043]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6043]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6037]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6037]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6037]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6031]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6031]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6031]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6025]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6025]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6025]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6019]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6019]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6019]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6013]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6013]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6013]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6007]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6007]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6007]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6001]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6001]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6001]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5995]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5995]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5995]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5982]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5982]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5982]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5976]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5976]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5976]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5970]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5970]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5970]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5963]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5963]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5963]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5957]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5957]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5957]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5944]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5944]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5944]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5930]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5930]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5930]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5924]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5924]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5924]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5917]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5917]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5917]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5910]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5910]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5910]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5897]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5897]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5897]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5890]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5890]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5890]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5883]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5883]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5883]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5876]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5876]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5876]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5869]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5869]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5869]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5847]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5847]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5847]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5840]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5840]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5840]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5833]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5833]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5833]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5826]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5826]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5826]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5819]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5819]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5819]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5811]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5811]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5811]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5797]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5797]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5797]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5789]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5789]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5789]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5782]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5782]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5782]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5774]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5774]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5774]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5767]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5767]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5767]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5759]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5759]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5759]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5752]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5752]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5752]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5744]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5744]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5744]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5721]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5721]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5721]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5714]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5714]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5714]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5706]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5706]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5706]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5698]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5698]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5698]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5690]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5690]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5690]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5683]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5683]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5683]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5667]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5667]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5667]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5659]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5659]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5659]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5651]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5651]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5651]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5643]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5643]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5643]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5636]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5636]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5636]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5628]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5628]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5628]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5620]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5620]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5620]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5612]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5612]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5612]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5596]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5596]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5596]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5588]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5588]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5588]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5580]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5580]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5580]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5572]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5572]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5572]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5564]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5564]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5564]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5548]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5548]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5548]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5532]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5532]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5532]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5524]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5524]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5524]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5507]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5507]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5507]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5499]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5499]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5499]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5483]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5483]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5483]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5459]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5459]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5459]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5450]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5450]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5450]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5442]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5442]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5442]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5434]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5434]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5434]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5426]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5426]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5426]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5418]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5418]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5418]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5410]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5410]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5410]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5401]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5401]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5401]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5393]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5393]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5393]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5385]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5385]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5385]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5377]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5369]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5369]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5369]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5360]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5360]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5360]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5352]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5352]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5352]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5344]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5344]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5344]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5336]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5336]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5336]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5327]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5327]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5327]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5319]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5319]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5319]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5311]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5311]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5311]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5303]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5303]], device='cuda:0', requires_grad=True)
Iter 601 / 1000 - Loss (Train): 1.351 - Loss (Val): 1.277
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5303]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5294]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5294]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5294]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5278]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5278]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5278]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5270]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5270]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5270]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5261]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5261]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5261]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5253]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5253]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5253]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5245]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5245]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5245]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5237]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5237]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5237]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5228]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5228]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5228]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5220]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5220]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5220]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5212]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5212]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5212]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5204]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5204]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5204]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5187]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5187]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5187]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5179]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5179]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5179]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5170]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5170]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5170]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5162]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5162]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5162]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5154]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5154]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5154]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5146]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5146]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5146]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5137]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5137]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5137]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5129]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5129]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5129]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5121]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5121]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5121]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5112]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5112]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5112]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5104]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5104]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5104]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5096]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5096]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5096]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5079]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5079]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5079]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5071]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5071]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5071]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5063]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5063]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5063]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5054]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5054]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5054]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5046]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5046]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5046]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5038]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5038]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5038]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5029]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5029]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5029]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5021]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5021]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5021]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5013]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5013]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5013]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5005]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5005]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5005]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4996]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4996]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4996]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4980]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4980]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4980]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4971]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4971]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4971]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4963]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4963]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4963]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4955]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4955]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4955]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4947]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4947]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4947]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4938]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4938]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4938]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4930]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4930]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4930]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4922]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4922]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4922]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4913]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4913]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4913]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4905]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4905]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4905]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4897]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4897]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4897]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4889]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4889]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4889]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4880]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4880]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4880]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4872]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4872]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4872]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4864]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4864]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4864]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4856]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4856]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4856]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4847]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4847]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4847]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4839]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4839]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4839]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4831]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4831]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4831]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4822]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4822]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4822]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4814]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4814]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4814]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4806]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4806]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4806]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4789]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4789]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4789]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4781]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4781]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4781]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4773]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4773]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4773]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4765]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4765]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4765]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4756]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4756]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4756]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4748]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4748]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4748]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4740]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4740]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4740]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4732]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4732]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4732]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4723]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4723]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4723]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4707]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4707]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4707]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4691]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4691]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4691]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4682]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4682]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4682]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4674]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4674]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4674]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4666]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4666]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4666]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4649]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4649]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4649]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4641]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4641]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4641]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4633]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4633]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4633]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4625]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4625]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4625]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4617]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4617]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4617]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4609]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4609]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4609]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4592]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4592]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4592]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4584]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4584]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4584]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4576]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4576]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4576]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4559]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4559]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4559]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4543]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4543]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4543]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4535]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4535]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4535]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4527]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4527]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4527]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4519]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4519]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4519]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4511]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4511]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4511]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4503]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4503]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4503]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4486]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4486]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4486]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4478]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4478]], device='cuda:0', requires_grad=True)
Iter 701 / 1000 - Loss (Train): 1.319 - Loss (Val): 1.196
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4478]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4470]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4470]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4470]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4462]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4462]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4462]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4446]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4446]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4446]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4438]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4438]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4438]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4430]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4430]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4430]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4422]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4422]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4422]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4414]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4414]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4414]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4406]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4406]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4406]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4398]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4398]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4398]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4390]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4390]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4390]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4381]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4381]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4381]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4373]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4373]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4373]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4365]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4365]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4365]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4357]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4357]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4357]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4349]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4349]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4349]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4341]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4341]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4341]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4334]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4334]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4334]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4326]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4326]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4326]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4318]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4318]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4318]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4310]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4310]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4310]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4302]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4302]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4302]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4294]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4294]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4294]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4278]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4278]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4278]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4270]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4270]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4270]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4254]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4254]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4254]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4246]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4246]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4246]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4239]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4239]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4239]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4231]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4231]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4231]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4223]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4223]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4223]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4207]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4199]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4199]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4199]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4192]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4192]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4192]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4184]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4184]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4184]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4176]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4176]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4176]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4168]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4168]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4168]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4160]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4160]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4160]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4153]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4153]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4153]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4145]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4145]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4145]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4137]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4137]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4137]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4129]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4129]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4129]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4122]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4122]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4122]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4114]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4114]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4114]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4106]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4106]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4106]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4099]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4099]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4099]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4091]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4091]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4091]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4083]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4083]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4083]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4076]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4076]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4076]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4068]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4068]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4068]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4053]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4053]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4053]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4045]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4045]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4045]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4038]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4038]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4038]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4030]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4030]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4030]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4023]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4023]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4023]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4015]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4015]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4015]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4007]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4007]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4007]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3992]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3992]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3992]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3985]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3985]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3985]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3977]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3977]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3977]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3970]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3970]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3970]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3962]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3962]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3962]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3955]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3955]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3955]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3948]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3948]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3948]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3940]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3940]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3940]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3933]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3933]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3933]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3925]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3925]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3925]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3918]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3918]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3918]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3911]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3911]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3911]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3903]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3896]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3896]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3896]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3888]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3888]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3888]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3881]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3881]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3881]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3874]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3874]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3874]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3866]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3866]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3866]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3859]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3859]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3859]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3852]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3852]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3852]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3845]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3845]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3845]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3837]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3837]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3837]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3830]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3830]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3830]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3823]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3823]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3823]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3816]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3816]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3816]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3808]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3808]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3808]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3801]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3801]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3801]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3794]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3794]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3794]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3787]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3787]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3787]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3780]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3780]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3780]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3772]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3772]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3772]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3765]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3765]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3765]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3758]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3758]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3758]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3751]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3751]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3751]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3744]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3744]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3744]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3737]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3737]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3737]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3730]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3730]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3730]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3723]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3723]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3723]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3716]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3716]], device='cuda:0', requires_grad=True)
Iter 801 / 1000 - Loss (Train): 1.281 - Loss (Val): 1.076
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3716]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3708]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3708]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3708]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3701]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3701]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3701]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3680]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3680]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3680]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3666]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3666]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3666]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3659]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3659]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3659]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3652]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3652]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3652]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3645]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3645]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3645]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3638]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3638]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3638]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3631]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3631]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3631]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3624]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3624]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3624]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3617]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3617]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3617]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3611]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3611]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3611]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3597]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3597]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3597]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3590]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3590]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3590]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3583]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3583]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3583]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3576]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3576]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3576]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3569]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3569]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3569]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3562]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3562]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3562]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3555]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3549]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3542]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3542]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3542]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3535]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3535]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3535]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3528]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3528]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3528]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3514]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3514]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3514]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3508]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3508]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3508]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3501]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3501]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3501]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3481]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3481]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3481]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3474]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3474]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3474]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3467]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3447]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3447]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3447]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3440]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3440]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3440]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3427]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3427]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3427]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3420]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3420]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3420]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3413]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3413]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3413]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3407]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3407]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3407]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3400]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3400]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3400]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3393]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3393]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3393]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3387]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3387]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3387]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3380]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3380]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3380]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3373]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3373]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3373]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3360]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3360]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3360]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3347]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3347]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3347]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3334]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3334]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3334]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3327]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3327]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3327]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3320]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3320]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3320]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3307]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3307]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3307]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3301]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3301]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3301]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3294]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3294]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3294]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3288]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3288]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3288]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3281]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3281]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3281]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3275]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3275]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3275]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3268]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3268]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3268]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3255]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3255]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3255]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3249]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3249]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3249]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3242]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3242]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3242]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3229]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3229]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3229]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3223]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3223]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3223]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3210]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3210]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3210]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3203]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3203]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3203]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3197]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3197]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3197]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3190]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3190]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3190]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3184]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3184]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3184]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3177]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3177]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3177]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3171]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3171]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3171]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3164]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3164]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3164]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3158]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3158]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3158]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3152]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3152]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3152]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3145]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3145]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3145]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3139]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3139]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3139]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3132]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3132]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3132]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3126]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3126]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3126]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3120]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3120]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3120]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3113]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3113]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3113]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3107]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3107]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3107]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3101]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3101]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3101]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3094]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3094]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3094]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3082]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3082]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3082]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3075]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3075]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3075]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3069]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3069]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3069]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3063]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3063]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3063]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3056]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3056]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3056]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3050]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3050]], device='cuda:0', requires_grad=True)
Iter 901 / 1000 - Loss (Train): 1.261 - Loss (Val): 0.994
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3050]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3044]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3044]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3044]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3037]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3037]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3037]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3031]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3031]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3031]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3025]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3025]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3025]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3018]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3018]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3018]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3012]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3012]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3012]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3006]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3006]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3006]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2993]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2993]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2993]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2987]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2987]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2987]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2981]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2981]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2981]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2975]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2975]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2975]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2968]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2968]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2968]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2962]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2962]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2962]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2956]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2956]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2956]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2943]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2943]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2943]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2931]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2931]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2931]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2925]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2925]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2925]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2919]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2919]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2919]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2912]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2912]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2912]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2906]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2906]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2906]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2900]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2900]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2900]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2894]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2894]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2894]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2888]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2888]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2888]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2882]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2882]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2882]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2875]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2875]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2875]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2869]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2869]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2869]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2863]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2863]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2863]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2857]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2857]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2857]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2851]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2851]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2851]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2845]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2845]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2845]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2839]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2839]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2839]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2833]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2833]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2833]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2826]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2826]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2826]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2820]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2820]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2820]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2814]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2814]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2814]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2808]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2808]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2808]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2802]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2802]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2802]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2796]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2796]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2796]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2790]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2790]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2790]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2784]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2784]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2784]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2778]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2778]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2778]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2772]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2772]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2772]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2766]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2766]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2766]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2760]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2760]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2760]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2754]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2754]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2754]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2748]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2748]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2748]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2742]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2742]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2742]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2730]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2730]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2730]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2724]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2724]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2724]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2717]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2717]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2717]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2711]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2711]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2711]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2705]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2705]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2705]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2700]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2700]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2700]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2688]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2688]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2688]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2682]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2682]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2682]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2676]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2676]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2676]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2664]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2664]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2664]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2652]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2652]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2652]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2646]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2646]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2646]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2640]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2640]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2640]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2628]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2628]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2628]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2622]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2622]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2622]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2616]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2616]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2616]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2610]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2610]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2610]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2598]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2598]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2598]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2593]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2593]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2593]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2587]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2587]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2587]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2581]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2581]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2581]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2575]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2575]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2575]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2569]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2569]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2569]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2563]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2563]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2563]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2546]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2546]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2546]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2528]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2528]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2528]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2522]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2522]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2522]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2516]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2516]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2516]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2511]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2511]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2511]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2505]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2505]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2505]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2499]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2499]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2499]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2493]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2493]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2493]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2487]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2482]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2482]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2482]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2470]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2470]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2470]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2458]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2458]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2458]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([30, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([70, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        [0.1589],
        [0.0000],
        [0.9259],
        [0.2316],
        [0.9492],
        [0.5611],
        [0.7297],
        [0.8896],
        [0.7635],
        [0.1274],
        [0.6906],
        [0.9612],
        [0.5784],
        [0.8320],
        [0.1003],
        [0.7800],
        [0.6433],
        [0.9363],
        [0.0490],
        [1.0000],
        [0.5558],
        [0.4267],
        [0.5119],
        [0.7644],
        [0.6638],
        [0.7182],
        [0.1702],
        [0.8914],
        [0.3931],
        [0.6236],
        [0.6074],
        [0.3712],
        [0.9586],
        [0.4100],
        [0.8425],
        [0.0814],
        [0.7757],
        [0.9670],
        [0.0221],
        [0.9761],
        [0.4593],
        [0.4125],
        [0.6814],
        [0.8995],
        [1.0000],
        [0.7608],
        [0.2467],
        [0.7818],
        [0.9167],
        [0.0377],
        [0.8297],
        [0.1139],
        [0.2448],
        [0.4305],
        [0.7361],
        [0.0747],
        [0.4167],
        [0.4708],
        [0.7970],
        [0.9009],
        [0.6089],
        [0.6806],
        [0.1740],
        [0.9426],
        [0.0000],
        [0.8417],
        [0.6646]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([1030, 1])
X: tensor([[0.5131],
        [0.8579],
        [0.5832],
        ...,
        [0.9980],
        [0.9990],
        [1.0000]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2453]], device='cuda:0', requires_grad=True)
Entropy:  tensor([2.6117e-03, 2.3599e-03, 2.1296e-03, 1.9194e-03, 1.7275e-03, 1.5528e-03,
        1.3941e-03, 1.2502e-03, 1.1197e-03, 1.0016e-03, 8.9505e-04, 7.9875e-04,
        7.1228e-04, 6.3452e-04, 5.6443e-04, 5.0170e-04, 4.4561e-04, 3.9554e-04,
        3.5057e-04, 3.1041e-04, 2.7479e-04, 2.4313e-04, 2.1466e-04, 1.8947e-04,
        1.6722e-04, 1.4738e-04, 1.3008e-04, 1.1458e-04, 1.0066e-04, 8.8743e-05,
        7.7996e-05, 6.8292e-05, 6.0270e-05, 5.2895e-05, 4.6180e-05, 4.0550e-05,
        3.5560e-05, 3.1347e-05, 2.7389e-05, 2.3871e-05, 2.1053e-05, 1.8264e-05,
        1.5820e-05, 1.4174e-05, 1.2126e-05, 1.0837e-05, 9.1391e-06, 8.2818e-06,
        7.0128e-06, 6.0775e-06, 5.2523e-06, 4.7761e-06, 4.2970e-06, 3.4475e-06,
        2.9570e-06, 2.9570e-06, 2.4616e-06, 2.0197e-06, 2.0197e-06, 1.5703e-06,
        1.5703e-06, 1.0512e-06, 1.0512e-06, 1.0512e-06, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 1.0512e-06, 1.0512e-06, 1.0512e-06, 1.0512e-06, 1.0512e-06,
        1.0512e-06, 1.5703e-06, 1.5703e-06, 1.5703e-06, 1.5703e-06, 2.0197e-06,
        2.0197e-06, 2.0197e-06, 2.4616e-06, 2.4616e-06, 2.4616e-06, 2.9570e-06,
        2.9570e-06, 2.9570e-06, 3.4475e-06, 3.4475e-06, 3.8741e-06, 3.8741e-06,
        4.2970e-06, 4.2970e-06, 4.7761e-06, 4.7761e-06, 5.2523e-06, 5.2523e-06,
        5.6662e-06, 6.0775e-06, 6.0775e-06, 6.5462e-06, 6.5462e-06, 7.0128e-06,
        7.4177e-06, 7.4177e-06, 7.8208e-06, 7.8208e-06, 8.2818e-06, 8.2818e-06,
        8.7410e-06, 8.7410e-06, 9.1391e-06, 9.1391e-06, 9.5358e-06, 9.5358e-06,
        9.5358e-06, 9.9906e-06, 9.9906e-06, 9.9906e-06, 9.9906e-06, 9.9906e-06,
        9.9906e-06, 9.9906e-06, 9.9906e-06, 9.9906e-06, 9.9906e-06, 9.9906e-06,
        9.5358e-06, 9.5358e-06, 9.5358e-06, 9.1391e-06, 9.1391e-06, 8.7410e-06,
        8.7410e-06, 8.2818e-06, 8.2818e-06, 7.8208e-06, 7.4177e-06, 7.4177e-06,
        7.0128e-06, 6.5462e-06, 6.5462e-06, 6.0775e-06, 5.6662e-06, 5.6662e-06,
        5.2523e-06, 4.7761e-06, 4.7761e-06, 4.2970e-06, 3.8741e-06, 3.8741e-06,
        3.4475e-06, 3.4475e-06, 2.9570e-06, 2.9570e-06, 2.4616e-06, 2.4616e-06,
        2.0197e-06, 2.0197e-06, 1.5703e-06, 1.5703e-06, 1.5703e-06, 1.0512e-06,
        1.0512e-06, 1.0512e-06, 1.0512e-06, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.1643e-07, 5.1643e-07, 5.1643e-07, 5.1643e-07,
        5.1643e-07, 5.1643e-07, 5.1643e-07, 1.0512e-06, 1.0512e-06, 1.0512e-06,
        1.5703e-06, 1.5703e-06, 2.0197e-06, 2.4616e-06, 2.9570e-06, 3.4475e-06,
        3.8741e-06, 4.7761e-06, 5.6662e-06, 6.5462e-06, 7.4177e-06, 8.7410e-06,
        1.0444e-05, 1.2126e-05, 1.4174e-05, 1.6637e-05, 1.9072e-05, 2.2281e-05,
        2.5817e-05, 3.0152e-05, 3.5146e-05, 4.0550e-05, 4.6930e-05, 5.4036e-05,
        6.2467e-05, 7.1911e-05, 8.2286e-05, 9.4395e-05, 1.0802e-04, 1.2323e-04,
        1.4030e-04, 1.5949e-04, 1.8082e-04, 2.0451e-04], device='cuda:0')
points: {0, 24, 344, 432}
Corresponding xs: tensor([0.0000, 0.0240, 0.3443, 0.4324], device='cuda:0')
Plot saved to /raven/u/dvoss/al_pmssmwithgp/model/plots/gp_plot.png
                                  
================================= 
Global information about the job: 
================================= 
  
Job owner: dvoss(54815)
Job name:  test
Node list: ravg1155
Job start: Wed Jul 31 14:19:29 CEST 2024
Job end:   Wed Jul 31 14:20:50 CEST 2024
Work dir:  /raven/u/dvoss/al_pmssmwithgp/model
Command:   /raven/u/dvoss/al_pmssmwithgp/model/slurm/single_job.sbatch
  
  
  
==========================================================================================
Information on jobsteps (Note: MaxRSS/AveRSS is the maximum/average over all 
tasks of the per-task memory high-water marks; cf. "man sacct"): 
==========================================================================================
  
JobID            JobName NNodes NTasks  NCPUS       MaxRSS       AveRSS    Elapsed ExitCode
------------- ---------- ------ ------ ------ ------------ ------------ ---------- --------
12180690            test      1             4                             00:01:21      0:0
12180690.0        job.sh      1      1      4     2330.17M     2330.17M   00:01:09      0:0
  
Maximum memory per node: 2.443359 GB (defined as MaxRSS*Ntasks/NNodes)
CPU utilization: 8.6 %
  

Defaulting to user installation because normal site-packages is not writeable
Requirement already satisfied: uproot in /raven/u/dvoss/.local/lib/python3.9/site-packages (5.3.10)
Requirement already satisfied: awkward>=2.4.6 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from uproot) (2.6.6)
Requirement already satisfied: numpy in /raven/u/system/soft/SLE_15/packages/x86_64/anaconda/3/2021.11/lib/python3.9/site-packages (from uproot) (1.20.3)
Requirement already satisfied: typing-extensions>=4.1.0 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from uproot) (4.12.2)
Requirement already satisfied: fsspec in /raven/u/dvoss/.local/lib/python3.9/site-packages (from uproot) (2024.6.1)
Requirement already satisfied: packaging in /raven/u/system/soft/SLE_15/packages/x86_64/anaconda/3/2021.11/lib/python3.9/site-packages (from uproot) (21.0)
Requirement already satisfied: cramjam>=2.5.0 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from uproot) (2.8.3)
Requirement already satisfied: awkward-cpp==35 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from awkward>=2.4.6->uproot) (35)
Requirement already satisfied: importlib-metadata>=4.13.0 in /raven/u/dvoss/.local/lib/python3.9/site-packages (from awkward>=2.4.6->uproot) (8.0.0)
Requirement already satisfied: zipp>=0.5 in /raven/u/system/soft/SLE_15/packages/x86_64/anaconda/3/2021.11/lib/python3.9/site-packages (from importlib-metadata>=4.13.0->awkward>=2.4.6->uproot) (3.6.0)
Requirement already satisfied: pyparsing>=2.0.2 in /raven/u/system/soft/SLE_15/packages/x86_64/anaconda/3/2021.11/lib/python3.9/site-packages (from packaging->uproot) (3.0.4)
Training points:  tensor([47.5121, 42.8012, 41.1486, 17.4611, 25.2833], device='cuda:0')
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1100]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1100]], device='cuda:0', requires_grad=True)
Iter 1 / 1000 - Loss (Train): 19.400 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1100]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1200]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1200]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1200]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1400]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1400]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1400]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1500]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1500]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1500]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1699]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1799]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1799]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1799]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1899]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1899]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1899]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.1998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2098]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2098]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2098]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2197]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2197]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2197]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2297]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2297]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2297]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2495]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2495]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2495]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2791]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2791]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2791]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2890]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2890]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2890]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.2988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3087]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3087]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3087]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3185]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3185]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3185]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3380]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3380]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3380]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3478]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3478]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3478]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3575]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3575]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3575]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3770]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3770]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3770]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3866]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3866]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3866]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3963]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3963]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.3963]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4156]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4156]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4156]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4252]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4252]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4252]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4348]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4348]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4348]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4444]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4444]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4444]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4539]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4539]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4539]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4824]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4824]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4824]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4919]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4919]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.4919]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5013]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5013]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5013]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5107]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5107]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5107]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5201]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5201]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5201]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5295]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5295]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5295]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5389]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5389]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5389]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5482]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5482]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5482]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5575]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5575]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5575]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5668]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5668]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5668]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5761]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5761]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5761]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5853]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5853]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5853]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5945]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5945]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.5945]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6037]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6037]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6037]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6129]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6129]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6129]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6220]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6220]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6220]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6312]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6312]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6312]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6403]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6403]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6403]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6494]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6584]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6584]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6584]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6765]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6765]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6765]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6945]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6945]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.6945]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7034]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7034]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7034]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7124]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7124]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7124]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7213]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7213]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7213]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7302]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7302]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7302]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7390]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7390]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7390]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7479]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7479]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7479]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7567]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7567]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7567]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7655]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7655]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7655]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7743]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7743]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7743]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7830]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7830]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7830]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7918]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7918]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.7918]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8005]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8005]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8005]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8092]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8092]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8092]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8178]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8178]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8178]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8265]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8265]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8265]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8351]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8351]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8351]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8437]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8437]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8437]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8523]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8523]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8523]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8609]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8609]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8609]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8779]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8779]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8779]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8864]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8864]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8864]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8949]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8949]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.8949]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9033]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9033]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9033]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9118]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9118]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9118]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9202]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9202]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9202]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9286]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9370]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9370]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9370]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9536]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9536]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9536]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9619]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9619]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9619]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9702]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9702]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9702]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9785]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9785]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9785]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9868]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9868]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9868]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[0.9950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0032]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0032]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0032]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0114]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0114]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0114]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0277]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0277]], device='cuda:0', requires_grad=True)
Iter 101 / 1000 - Loss (Train): 12.181 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0277]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0358]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0358]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0358]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0439]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0439]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0439]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0520]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0520]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0520]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0681]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0681]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0681]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0761]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0761]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0761]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0841]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0841]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0841]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0921]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0921]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.0921]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1080]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1080]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1080]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1159]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1159]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1159]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1238]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1238]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1238]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1317]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1317]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1317]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1474]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1474]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1474]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1630]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1630]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1630]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1708]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1708]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1708]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1785]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1785]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1785]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1863]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1863]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1863]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1940]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1940]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.1940]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2017]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2017]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2017]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2094]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2094]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2094]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2170]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2170]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2170]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2247]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2247]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2247]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2323]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2323]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2323]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2399]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2399]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2399]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2701]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2701]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2701]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2776]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2776]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2776]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2851]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2851]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2851]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2926]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2926]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.2926]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3000]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3074]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3074]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3074]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3148]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3148]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3148]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3222]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3222]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3222]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3296]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3296]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3296]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3369]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3369]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3369]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3443]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3443]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3443]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3516]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3516]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3516]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3589]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3589]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3589]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3661]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3661]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3661]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3734]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3734]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3734]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3806]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3806]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3806]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3878]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3878]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3878]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.3950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4022]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4022]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4022]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4094]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4094]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4094]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4307]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4307]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4307]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4378]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4378]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4378]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4448]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4448]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4448]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4519]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4519]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4519]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4589]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4589]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4589]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4659]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4659]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4659]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4868]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4868]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4868]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.4937]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5006]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5006]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5006]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5075]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5075]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5075]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5144]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5144]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5144]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5212]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5212]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5212]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5348]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5348]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5348]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5416]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5484]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5484]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5484]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5619]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5619]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5619]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5686]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5686]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5686]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5753]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5753]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5753]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5820]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5820]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5820]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5953]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5953]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.5953]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6019]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6019]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6019]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6085]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6085]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6085]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6151]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6151]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6151]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6282]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6282]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6282]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6347]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6347]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6347]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6412]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6412]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6412]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6477]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6477]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6477]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6541]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6541]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6541]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6606]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6606]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6606]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6734]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6734]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6734]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6925]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6925]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6925]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.6988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7052]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7052]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7052]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7115]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7115]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7115]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7177]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7177]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7177]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7240]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7240]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7240]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7302]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7302]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7302]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7364]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7364]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7364]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7426]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7426]], device='cuda:0', requires_grad=True)
Iter 201 / 1000 - Loss (Train): 8.566 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7426]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7488]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7488]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7488]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7550]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7550]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7550]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7611]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7611]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7611]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7672]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7672]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7672]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7733]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7733]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7733]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7794]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7794]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7794]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7915]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7915]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7915]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7976]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7976]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.7976]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8036]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8036]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8036]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8096]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8096]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8096]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8155]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8155]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8155]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8215]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8274]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8392]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8392]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8392]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8451]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8451]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8451]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8510]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8510]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8510]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8684]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8684]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8684]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8742]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8742]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8742]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8800]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8800]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8800]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8857]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8857]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8857]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8914]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8914]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8914]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8971]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8971]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.8971]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9028]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9028]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9028]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9085]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9085]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9085]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9141]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9141]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9141]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9198]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9198]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9198]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9254]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9254]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9254]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9310]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9310]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9310]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9365]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9365]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9365]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9421]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9421]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9421]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9531]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9531]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9531]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9586]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9586]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9586]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9641]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9641]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9641]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9696]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9696]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9696]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9750]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9750]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9750]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9858]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9858]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9858]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9912]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9912]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9912]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9965]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9965]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[1.9965]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0019]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0019]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0019]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0072]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0072]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0072]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0125]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0125]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0125]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0178]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0178]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0178]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0231]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0231]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0231]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0335]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0335]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0335]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0387]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0387]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0387]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0439]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0439]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0439]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0543]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0543]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0543]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0645]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0645]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0645]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0696]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0696]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0696]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0747]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0747]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0747]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0797]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0797]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0797]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0848]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0848]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0848]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0898]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0898]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0898]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0948]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0948]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0948]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1097]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1097]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1097]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1146]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1146]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1146]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1244]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1244]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1244]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1292]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1292]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1292]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1341]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1341]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1341]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1389]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1389]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1389]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1437]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1437]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1437]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1485]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1485]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1485]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1533]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1533]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1533]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1580]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1580]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1580]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1628]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1628]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1628]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1722]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1722]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1722]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1768]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1768]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1768]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1815]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1815]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1815]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1861]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1861]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1861]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1907]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1907]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1907]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1953]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1953]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1953]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1999]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1999]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1999]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2045]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2045]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2045]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2090]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2090]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2090]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2135]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2135]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2135]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2270]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2270]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2270]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2314]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2358]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2358]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2358]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2403]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2403]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2403]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2446]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2446]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2446]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2577]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2577]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2577]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2620]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2620]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2620]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2663]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2663]], device='cuda:0', requires_grad=True)
Iter 301 / 1000 - Loss (Train): 6.555 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2663]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2706]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2706]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2706]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2748]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2748]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2748]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2790]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2790]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2790]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2833]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2833]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2833]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2874]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2874]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2874]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2916]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2916]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2916]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2958]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2958]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2958]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2999]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2999]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2999]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3040]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3040]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3040]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3081]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3081]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3081]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3122]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3122]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3122]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3163]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3163]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3163]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3203]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3203]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3203]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3243]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3243]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3243]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3323]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3323]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3323]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3363]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3363]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3363]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3402]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3402]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3402]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3442]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3442]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3442]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3481]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3481]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3481]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3520]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3520]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3520]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3558]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3558]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3558]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3597]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3597]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3597]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3635]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3635]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3635]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3711]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3711]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3711]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3749]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3749]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3749]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3787]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3787]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3787]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3824]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3824]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3824]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3861]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3861]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3861]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3898]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3898]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3898]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3935]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3935]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3935]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3971]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3971]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3971]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4008]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4008]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4008]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4044]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4044]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4044]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4080]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4080]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4080]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4116]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4116]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4116]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4152]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4152]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4152]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4187]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4187]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4187]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4222]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4222]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4222]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4257]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4257]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4257]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4292]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4292]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4292]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4327]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4327]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4327]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4362]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4362]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4362]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4430]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4430]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4430]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4464]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4498]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4498]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4498]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4531]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4531]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4531]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4565]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4565]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4565]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4598]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4598]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4598]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4631]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4631]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4631]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4664]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4664]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4664]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4696]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4696]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4696]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4761]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4761]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4761]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4793]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4793]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4793]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4825]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4825]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4825]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4856]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4856]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4856]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4888]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4888]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4888]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4919]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4919]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4919]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4950]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4981]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4981]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4981]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5012]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5012]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5012]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5043]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5043]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5043]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5073]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5073]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5073]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5103]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5103]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5103]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5133]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5133]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5133]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5163]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5163]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5163]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5192]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5192]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5192]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5222]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5222]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5222]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5251]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5251]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5251]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5309]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5338]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5338]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5338]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5366]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5366]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5366]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5394]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5394]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5394]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5422]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5422]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5422]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5450]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5450]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5450]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5478]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5478]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5478]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5533]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5533]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5533]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5560]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5560]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5560]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5587]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5587]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5587]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5614]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5614]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5614]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5641]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5641]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5641]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5667]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5667]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5667]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5719]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5719]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5719]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5745]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5745]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5745]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5771]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5771]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5771]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5796]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5796]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5796]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5822]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5822]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5822]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5847]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5847]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5847]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5872]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5872]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5872]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5896]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5896]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5896]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5921]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5921]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5921]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5945]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5945]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5945]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5969]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5969]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5969]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5993]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5993]], device='cuda:0', requires_grad=True)
Iter 401 / 1000 - Loss (Train): 5.397 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5993]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6017]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6017]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6017]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6041]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6041]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6041]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6064]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6064]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6064]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6111]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6111]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6111]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6134]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6134]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6134]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6156]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6156]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6156]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6179]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6179]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6179]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6201]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6201]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6201]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6223]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6223]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6223]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6245]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6245]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6245]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6267]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6267]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6267]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6289]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6289]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6289]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6310]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6310]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6310]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6332]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6332]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6332]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6374]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6374]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6374]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6394]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6394]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6394]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6415]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6415]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6415]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6435]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6435]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6435]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6455]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6455]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6455]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6495]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6495]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6495]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6534]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6553]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6573]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6573]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6573]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6591]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6591]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6591]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6610]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6610]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6610]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6629]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6629]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6629]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6647]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6647]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6647]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6665]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6665]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6665]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6683]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6683]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6683]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6701]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6701]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6701]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6719]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6719]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6719]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6736]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6754]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6754]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6754]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6771]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6771]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6771]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6788]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6788]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6788]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6804]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6821]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6821]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6821]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6837]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6837]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6837]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6854]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6854]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6854]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6870]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6870]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6870]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6901]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6901]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6901]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6917]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6917]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6917]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6947]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6947]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6947]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6962]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6962]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6962]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6977]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6977]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6977]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6992]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6992]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6992]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7006]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7006]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7006]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7021]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7021]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7021]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7035]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7035]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7035]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7049]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7063]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7063]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7063]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7076]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7076]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7076]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7090]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7090]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7090]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7103]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7103]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7103]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7116]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7116]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7116]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7129]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7129]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7129]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7142]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7142]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7142]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7155]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7155]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7155]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7167]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7167]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7167]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7192]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7192]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7192]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7204]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7204]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7204]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7216]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7227]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7227]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7227]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7239]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7239]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7239]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7250]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7250]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7250]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7261]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7261]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7261]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7272]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7272]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7272]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7283]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7294]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7294]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7294]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7305]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7305]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7305]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7315]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7315]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7315]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7325]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7325]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7325]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7335]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7335]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7335]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7345]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7345]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7345]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7355]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7355]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7355]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7365]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7365]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7365]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7374]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7374]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7374]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7383]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7383]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7383]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7392]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7392]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7392]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7401]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7401]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7401]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7410]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7410]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7410]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7419]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7419]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7419]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7428]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7428]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7428]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7436]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7436]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7436]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7444]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7444]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7444]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7452]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7452]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7452]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7468]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7468]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7468]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7483]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7483]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7483]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7498]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7498]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7498]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7505]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7505]], device='cuda:0', requires_grad=True)
Iter 501 / 1000 - Loss (Train): 4.707 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7505]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7512]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7512]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7512]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7519]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7519]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7519]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7525]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7525]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7525]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7532]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7532]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7532]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7538]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7538]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7538]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7544]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7544]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7544]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7551]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7557]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7562]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7562]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7562]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7574]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7574]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7574]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7579]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7579]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7579]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7584]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7584]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7584]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7590]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7590]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7590]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7595]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7595]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7595]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7609]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7609]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7609]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7613]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7613]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7613]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7618]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7618]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7618]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7622]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7622]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7622]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7626]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7630]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7630]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7630]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7638]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7638]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7638]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7641]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7641]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7641]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7645]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7645]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7645]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7648]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7648]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7648]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7652]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7652]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7652]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7655]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7655]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7655]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7661]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7661]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7661]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7663]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7663]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7663]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7666]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7666]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7666]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7671]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7671]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7671]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7678]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7678]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7678]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7679]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7679]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7679]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7681]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7681]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7681]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7683]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7683]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7683]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7685]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7685]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7685]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7686]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7686]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7686]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7689]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7689]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7689]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7690]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7690]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7690]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7691]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7691]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7691]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7692]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7692]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7692]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7695]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7694]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7693]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7692]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7692]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7692]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7691]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7691]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7691]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7690]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7690]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7690]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7689]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7689]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7689]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7688]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7688]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7688]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7687]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7685]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7685]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7685]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7684]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7684]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7684]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7682]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7682]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7682]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7681]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7681]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7681]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7679]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7679]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7679]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7677]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7677]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7677]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7675]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7671]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7671]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7671]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7669]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7667]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7667]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7667]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7664]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7664]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7664]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7662]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7662]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7662]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7659]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7659]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7659]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7657]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7657]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7657]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7654]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7654]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7654]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7652]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7652]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7652]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7649]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7649]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7649]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7646]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7646]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7646]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7643]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7643]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7643]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7640]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7640]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7640]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7637]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7637]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7637]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7634]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7631]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7631]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7631]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7627]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7627]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7627]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7624]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7624]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7624]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7621]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7621]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7621]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7617]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7617]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7617]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7614]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7614]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7614]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7610]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7610]], device='cuda:0', requires_grad=True)
Iter 601 / 1000 - Loss (Train): 4.208 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7610]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7607]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7607]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7607]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7603]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7603]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7603]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7600]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7596]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7596]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7596]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7593]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7593]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7593]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7589]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7589]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7589]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7585]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7585]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7585]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7582]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7582]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7582]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7578]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7578]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7578]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7574]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7574]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7574]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7570]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7570]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7570]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7567]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7567]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7567]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7563]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7563]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7563]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7559]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7559]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7559]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7556]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7548]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7548]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7548]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7544]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7544]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7544]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7540]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7536]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7536]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7536]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7532]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7532]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7532]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7528]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7528]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7528]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7524]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7524]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7524]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7520]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7520]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7520]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7515]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7510]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7510]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7510]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7501]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7501]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7501]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7496]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7496]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7496]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7485]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7485]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7485]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7479]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7479]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7479]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7473]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7473]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7473]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7466]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7466]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7466]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7446]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7446]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7446]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7438]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7438]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7438]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7430]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7430]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7430]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7422]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7422]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7422]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7413]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7413]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7413]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7404]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7404]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7404]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7395]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7385]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7385]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7385]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7374]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7374]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7374]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7364]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7364]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7364]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7353]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7341]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7341]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7341]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7330]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7330]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7330]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7317]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7317]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7317]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7305]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7305]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7305]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7292]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7292]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7292]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7279]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7279]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7279]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7266]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7266]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7266]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7252]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7252]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7252]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7238]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7238]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7238]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7224]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7224]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7224]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7209]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7209]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7209]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7195]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7180]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7165]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7150]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7134]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7134]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7134]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7119]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7119]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7119]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7104]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7104]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7104]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7088]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7073]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7073]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7073]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7057]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7057]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7057]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7042]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7042]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7042]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7026]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7026]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7026]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7010]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7010]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.7010]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6995]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6995]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6995]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6979]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6979]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6979]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6964]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6964]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6964]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6948]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6948]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6948]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6933]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6933]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6933]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6917]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6917]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6917]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6902]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6902]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6902]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6886]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6871]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6871]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6871]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6840]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6840]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6840]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6825]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6825]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6825]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6810]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6810]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6810]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6794]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6794]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6794]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6779]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6779]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6779]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6764]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6764]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6764]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6749]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6749]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6749]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6733]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6733]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6733]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6718]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6718]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6718]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6703]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6703]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6703]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6688]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6688]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6688]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6673]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6643]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6643]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6643]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6627]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6627]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6627]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6612]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6612]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6612]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6597]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6597]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6597]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6582]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6582]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6582]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6567]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6567]], device='cuda:0', requires_grad=True)
Iter 701 / 1000 - Loss (Train): 3.269 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6567]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6552]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6536]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6536]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6536]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6521]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6490]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6475]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6460]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6444]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6444]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6444]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6429]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6429]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6429]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6413]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6413]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6413]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6398]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6398]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6398]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6382]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6382]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6382]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6351]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6351]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6351]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6336]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6336]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6336]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6320]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6320]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6320]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6304]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6304]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6304]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6288]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6288]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6288]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6273]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6273]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6273]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6257]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6257]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6257]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6241]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6241]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6241]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6209]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6209]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6209]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6193]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6193]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6193]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6177]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6177]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6177]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6161]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6161]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6161]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6145]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6145]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6145]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6129]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6129]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6129]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6112]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6112]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6112]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6096]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6096]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6096]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6080]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6080]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6080]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6064]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6064]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6064]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6031]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6031]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6031]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6014]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6014]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.6014]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5998]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5982]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5982]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5982]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5965]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5965]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5965]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5949]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5949]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5949]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5932]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5915]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5915]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5915]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5899]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5899]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5899]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5882]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5882]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5882]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5865]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5865]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5865]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5849]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5849]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5849]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5832]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5832]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5832]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5815]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5815]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5815]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5781]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5781]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5781]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5765]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5765]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5765]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5748]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5748]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5748]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5731]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5731]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5731]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5714]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5714]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5714]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5697]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5697]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5697]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5680]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5680]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5680]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5663]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5663]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5663]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5646]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5646]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5646]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5629]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5629]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5629]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5611]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5611]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5611]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5594]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5577]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5577]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5577]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5560]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5560]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5560]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5543]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5543]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5543]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5525]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5525]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5525]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5508]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5508]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5508]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5473]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5473]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5473]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5456]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5456]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5456]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5438]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5438]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5438]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5421]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5421]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5421]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5403]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5403]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5403]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5386]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5386]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5386]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5368]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5368]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5368]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5351]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5351]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5351]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5333]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5316]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5316]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5316]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5298]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5298]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5298]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5262]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5245]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5245]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5245]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5227]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5227]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5227]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5209]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5209]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5209]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5191]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5191]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5191]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5173]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5173]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5173]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5155]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5155]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5155]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5137]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5137]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5137]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5119]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5119]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5119]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5101]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5101]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5101]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5083]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5083]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5083]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5065]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5065]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5065]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5029]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5029]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5029]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5011]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5011]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.5011]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4993]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4993]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4993]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4975]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4975]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4975]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4956]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4956]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4956]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4938]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4938]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4938]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4920]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4920]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4920]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4902]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4902]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4902]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4883]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4883]], device='cuda:0', requires_grad=True)
Iter 801 / 1000 - Loss (Train): 3.113 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4883]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4865]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4865]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4865]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4846]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4846]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4846]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4828]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4828]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4828]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4809]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4809]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4809]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4791]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4791]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4791]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4772]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4772]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4772]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4754]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4754]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4754]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4735]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4735]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4735]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4717]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4717]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4717]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4698]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4698]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4698]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4679]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4679]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4679]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4661]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4661]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4661]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4642]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4642]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4642]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4623]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4623]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4623]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4604]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4585]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4585]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4585]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4567]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4567]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4567]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4548]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4548]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4548]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4529]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4529]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4529]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4510]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4510]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4510]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4491]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4472]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4472]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4472]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4453]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4434]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4434]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4434]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4415]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4415]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4415]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4396]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4376]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4376]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4376]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4357]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4357]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4357]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4338]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4338]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4338]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4319]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4319]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4319]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4300]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4261]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4261]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4261]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4242]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4242]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4242]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4222]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4222]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4222]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4203]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4203]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4203]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4183]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4183]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4183]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4164]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4164]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4164]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4144]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4144]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4144]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4125]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4125]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4125]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4105]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4105]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4105]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4086]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4086]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4086]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4066]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4066]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4066]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4047]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4027]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4027]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4027]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4007]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4007]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.4007]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3968]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3968]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3968]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3948]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3948]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3948]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3928]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3928]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3928]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3908]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3908]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3908]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3889]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3889]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3889]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3869]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3869]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3869]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3849]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3849]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3849]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3829]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3829]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3829]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3809]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3809]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3809]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3789]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3789]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3789]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3769]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3769]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3769]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3749]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3749]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3749]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3729]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3709]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3709]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3709]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3689]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3689]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3689]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3668]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3668]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3668]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3648]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3648]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3648]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3628]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3628]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3628]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3608]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3608]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3608]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3588]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3588]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3588]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3567]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3567]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3567]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3547]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3547]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3547]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3527]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3527]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3527]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3506]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3486]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3486]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3486]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3465]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3465]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3465]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3445]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3445]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3445]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3424]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3424]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3424]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3404]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3404]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3404]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3383]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3383]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3383]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3363]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3363]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3363]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3342]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3342]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3342]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3322]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3322]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3322]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3301]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3301]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3301]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3260]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3260]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3260]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3239]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3239]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3239]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3218]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3218]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3218]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3197]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3197]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3197]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3177]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3177]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3177]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3156]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3156]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3156]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3135]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3135]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3135]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3114]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3114]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3114]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3093]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3093]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3093]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3072]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3072]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3072]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3051]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3051]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3051]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3030]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3030]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3030]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3009]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3009]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.3009]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2988]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2967]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2967]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2967]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2946]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2946]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2946]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2925]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2925]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2925]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2904]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2904]], device='cuda:0', requires_grad=True)
Iter 901 / 1000 - Loss (Train): 2.964 - Loss (Val): inf
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2904]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2883]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2883]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2883]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2862]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2840]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2840]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2840]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2819]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2819]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2819]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2798]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2777]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2777]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2777]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2755]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2755]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2755]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2734]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2734]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2734]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2713]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2713]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2713]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2691]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2691]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2691]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2670]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2648]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2648]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2648]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2627]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2627]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2627]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2605]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2605]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2605]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2584]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2584]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2584]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2562]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2562]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2562]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2541]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2541]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2541]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2519]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2519]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2519]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2498]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2498]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2498]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2476]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2433]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2411]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2411]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2411]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2389]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2389]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2389]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2367]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2346]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2346]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2346]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2324]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2324]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2324]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2302]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2302]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2302]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2280]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2258]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2258]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2258]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2236]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2214]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2214]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2214]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2192]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2192]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2192]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2170]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2170]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2170]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2148]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2148]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2148]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2126]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2126]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2126]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2104]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2104]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2104]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2082]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2082]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2082]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2060]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2038]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2038]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2038]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2016]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2016]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.2016]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1994]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1994]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1994]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1971]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1971]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1971]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1949]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1949]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1949]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1927]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1927]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1927]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1905]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1905]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1905]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1882]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1882]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1882]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1860]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1860]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1860]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1838]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1838]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1838]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1815]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1815]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1815]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1793]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1793]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1793]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1770]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1770]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1770]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1748]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1748]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1748]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1726]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1726]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1726]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1703]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1703]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1703]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1681]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1681]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1681]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1658]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1635]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1635]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1635]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1613]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1613]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1613]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1590]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1590]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1590]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1568]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1545]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1545]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1545]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1522]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1522]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1522]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1500]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1500]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1500]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1477]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1477]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1477]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1454]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1431]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1431]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1431]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1409]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1409]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1409]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1386]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1386]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1386]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1363]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1363]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1363]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1340]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1317]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1317]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1317]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1294]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1294]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1294]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1271]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1271]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1271]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1248]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1248]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1248]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1225]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1202]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1202]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1202]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1179]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1179]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1179]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1156]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1156]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1156]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1133]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1133]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1133]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1110]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1110]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1110]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1087]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1087]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1087]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1064]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1064]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1064]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1041]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1041]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1041]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1018]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1018]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.1018]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0995]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0995]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0995]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0971]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0971]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0971]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0948]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0948]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0948]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0925]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0925]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0925]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0902]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0902]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0902]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0878]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0878]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0878]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0855]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0832]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0832]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0832]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0808]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0808]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0808]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0785]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0785]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0785]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0761]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0761]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0761]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0738]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0738]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0738]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0715]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0691]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([5, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        [0.0000],
        [0.2603]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0691]], device='cuda:0', requires_grad=True)
weights: torch.Size([1, 1])
X: torch.Size([1005, 1])
X: tensor([[1.0000],
        [0.8432],
        [0.7882],
        ...,
        [0.9980],
        [0.9990],
        [1.0000]], device='cuda:0')
weights: Parameter containing:
tensor([[2.0691]], device='cuda:0', requires_grad=True)
Entropy:  tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
points: {227, 682, 234, 620, 76, 593, 19, 727, 537, 702}
Corresponding xs: tensor([24.2895, 37.9764, 24.5001, 36.1114, 19.7472, 35.2992, 18.0326, 39.3300,
        33.6146, 38.5780], device='cuda:0')
Plot saved to /raven/u/dvoss/al_pmssmwithgp/model/plots/gp_plot.png
                                  
================================= 
Global information about the job: 
================================= 
  
Job owner: dvoss(54815)
Job name:  test
Node list: ravg1045
Job start: Fri Aug  2 14:15:26 CEST 2024
Job end:   Fri Aug  2 14:16:08 CEST 2024
Work dir:  /raven/u/dvoss/al_pmssmwithgp/model
Command:   /raven/u/dvoss/al_pmssmwithgp/model/slurm/single_job.sbatch
  
  
  
==========================================================================================
Information on jobsteps (Note: MaxRSS/AveRSS is the maximum/average over all 
tasks of the per-task memory high-water marks; cf. "man sacct"): 
==========================================================================================
  
JobID            JobName NNodes NTasks  NCPUS       MaxRSS       AveRSS    Elapsed ExitCode
------------- ---------- ------ ------ ------ ------------ ------------ ---------- --------
12222203            test      1             4                             00:00:42      0:0
12222203.0        job.sh      1      1      4     2378.94M     2378.94M   00:00:36      0:0
  
Maximum memory per node: 2.494502 GB (defined as MaxRSS*Ntasks/NNodes)
CPU utilization: 34.5 %
  

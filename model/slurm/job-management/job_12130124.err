Loading gpytorch/gpu-cuda-11.6/pytorch-1.11.0/1.8.0
  Loading requirement: cudnn/8.4.1 pytorch/gpu-cuda-11.6/1.11.0
/mpcdf/soft/SLE_15/packages/skylake/gpytorch/gpu-cuda-11.6/pytorch-1.11.0/anaconda_3_2021.11-2021.11/1.8.0/lib/python3.9/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at  /home/abuild/rpmbuild/BUILD/pytorch-1.11.0/aten/src/ATen/native/BatchLinearAlgebra.cpp:1666.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
Traceback (most recent call last):
  File "/raven/u/dvoss/al_pmssmwithgp/model/GPmodel1D.py", line 343, in <module>
    gp_pipeline.evaluate_model()
  File "/raven/u/dvoss/al_pmssmwithgp/model/GPmodel1D.py", line 255, in evaluate_model
    self.observed_pred = self.likelihood(self.model(self.x_test))
  File "/mpcdf/soft/SLE_15/packages/skylake/gpytorch/gpu-cuda-11.6/pytorch-1.11.0/anaconda_3_2021.11-2021.11/1.8.0/lib/python3.9/site-packages/gpytorch/models/exact_gp.py", line 272, in __call__
    if all(torch.equal(train_input, input) for train_input, input in zip(train_inputs, inputs)):
  File "/mpcdf/soft/SLE_15/packages/skylake/gpytorch/gpu-cuda-11.6/pytorch-1.11.0/anaconda_3_2021.11-2021.11/1.8.0/lib/python3.9/site-packages/gpytorch/models/exact_gp.py", line 272, in <genexpr>
    if all(torch.equal(train_input, input) for train_input, input in zip(train_inputs, inputs)):
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument other in method wrapper__equal)
srun: error: ravg1201: task 0: Exited with exit code 1
srun: Terminating StepId=12130124.0
